{"version":3,"sources":["webpack:///./src/App/docutils/ComponentPreview/index.js"],"names":["ComponentPreview","_ref","children","language","removeOuterTag","hideValue","removeList","showCasePanel","showCasePanelAdvanced","showCasePanelSm","codeFigure","dangerousHTML","negative","_removeOuterTag","element","div","document","createElement","innerHTML","renderToStaticMarkup","firstElementChild","firstChild","nodeValue","_removeList","listElements","querySelectorAll","htmlString","forEach","el","concat","CodeFigure","_ref2","code","val","v","setDangerousHtml","map","child","_typeof","jsbeautifier","html_beautify","replace","css","defaultProps","style","react__WEBPACK_IMPORTED_MODULE_0___default","a","className","toUpperCase","split","line","i","Fragment","key","tabs","window","dg","ShowCasePanelAdvanced","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","activeTab","elements","optionsOpen","innerWidth","activeOptions","_toConsumableArray","_inherits","Component","value","showcasePanel","getElementById","id","checkbox","checked","dropdown","radio","querySelector","defaultRadios","filter","includes","length","init","tabsId","_resetOptions","prevProps","prevState","e","_this2","preventDefault","setState","_objectSpread","description","_this3","option","_this4","tab","href","onClick","setActiveTab","altBackground","cloneElement","component","reduce","acc","currentOption","title","currentOptionDescription","options","onChange","setActiveOptions","type","htmlFor","name","values","target","j","default","defaultChecked","propTypes","PropTypes","oneOf","isRequired","bool","object"],"mappings":"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","file":"scripts/doc-route.chunk_115.js?4931ad8cc343e3f70f75","sourcesContent":["import React, { Component, cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport jsbeautifier from \"js-beautify\";\nimport { defaultProps } from \"prism-react-renderer\";\n\n// NOTE: dangerousHTML prop is used when wanting to show html in the codefigure without encoding.\n\nconst ComponentPreview = ({ children, language, removeOuterTag, hideValue, removeList, showCasePanel, showCasePanelAdvanced, showCasePanelSm, codeFigure, dangerousHTML, negative }) => {\n    const _removeOuterTag = element => {\n        const div = document.createElement(\"div\");\n\n        div.innerHTML = renderToStaticMarkup(element);\n\n        if (div.firstElementChild) {\n            return div.firstElementChild.innerHTML;\n        } else if (div.firstChild) {\n            return div.firstChild.nodeValue;\n        }\n\n        return \"Check ComponentPreview _removeOuterTag!\";\n    };\n\n    const _removeList = element => {\n        const div = document.createElement(\"div\");\n\n        div.innerHTML = renderToStaticMarkup(element);\n\n        const listElements = div.querySelectorAll(\"li\");\n        let htmlString = \"\";\n\n        listElements.forEach(el => {\n            htmlString += `${el.innerHTML} \\n`;\n        });\n\n        return htmlString;\n    };\n\n    const _removeEmpty = val => {\n        val = val.replace(/=\"\"/g, \"\");\n        val = val.replace(/ class>/g, \">\");\n        val = val.replace(/ class /g, \" \");\n        val = val.replace(/value /g, \"\");\n\n        return val;\n    };\n\n    const setDangerousHtml = val => {\n        let code = \"\";\n\n        if (typeof val.forEach === \"function\") {\n            val.forEach(v => code += `${v}\\n`);\n        } else {\n            code = val;\n        }\n\n        return code;\n    };\n\n    const CodeFigure = ({ children }) => {\n        let code = \"\";\n\n        if (language === \"html\" && dangerousHTML) {\n            code = setDangerousHtml(children);\n        } else if (language === \"html\" && children && typeof children.map === \"function\") {\n            children.map(child => {\n                if (removeOuterTag) {\n                    code += _removeOuterTag(child);\n                } else if (removeList) {\n                    code += _removeList(child);\n                } else {\n                    code += renderToStaticMarkup(child);\n                }\n            });\n\n        } else if (language === \"html\") {\n            if (removeOuterTag) {\n                code += _removeOuterTag(children);\n            } else if (removeList) {\n                code += _removeList(children);\n            } else {\n                code += renderToStaticMarkup(children);\n            }\n        } else {\n            switch (typeof children) {\n                case \"string\":\n                    code = children;\n\n                    break;\n                case \"object\":\n                    children.forEach(child => code += child);\n\n                    break;\n                default:\n                    console.warn(\"CodeFigure: children needs attention!\");\n            }\n        }\n\n        switch (language) {\n            case \"html\":\n                code = jsbeautifier.html_beautify(code);\n                code = _removeEmpty(code);\n\n                if (hideValue) {\n                    code = code.replace(/ value=\"(.*)\"/g, \"\");\n                }\n\n                break;\n            case \"css\":\n                code = jsbeautifier.css(code);\n\n                break;\n            case \"javascript\":\n                // This is not needed, and for some reason crashes after a prod build [EH]\n                // code = jsbeautifier(code);\n                break;\n            default:\n                return \"update switchcase!\";\n        }\n\n        defaultProps.style = \"\";\n\n        return (\n            <figure>\n                <div className=\"code-view\">\n                    <header className=\"code-view-header\">\n                        {language.toUpperCase()}\n                    </header>\n                    <table className=\"code-view-table\">\n                        <tbody>\n                            <tr>\n                                <td className=\"code-view-numbers\">\n                                    <pre>\n                                        {(code).split(\"\\n\").map((line, i) => <React.Fragment key={i}>{i + 1}{\"\\n\"}</React.Fragment>)}\n                                    </pre>\n                                </td>\n                                <td className=\"code-view-code\">\n                                    <pre>\n                                        {(code).split(\"\\n\").map((line, i) => <React.Fragment key={i}>{line}{\"\\n\"}</React.Fragment>)}\n                                    </pre>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </figure>\n        );\n    };\n\n    const ShowCasePanel = () => (\n        <div className={`showcase-panel${showCasePanelSm ? \" showcasepanel-sm\" : \"\"}${negative ? \" showcase-panel-negative\" : \"\"}`}>\n            {children}\n        </div>\n    );\n\n    const { tabs } = window.dg;\n\n    class ShowCasePanelAdvanced extends Component {\n        constructor (props) {\n            super(props);\n\n            this.state = {\n                activeTab: this.props.showCasePanelAdvanced.elements[0],\n                optionsOpen: window.innerWidth > 1200, // XL grid breakpoint\n                activeOptions: this.props.showCasePanelAdvanced.elements[0].activeOptions ? [...this.props.showCasePanelAdvanced.elements[0].activeOptions] : []\n            };\n        }\n\n        _resetOptions () {\n            const showcasePanel = document.getElementById(this.props.showCasePanelAdvanced.id);\n\n            showcasePanel.querySelectorAll(\"input[type=checkbox]\").forEach(checkbox => checkbox.checked = false);\n            showcasePanel.querySelectorAll(\"select[id]\").forEach(dropdown => dropdown.value = 0);\n            showcasePanel.querySelectorAll(\".radio\").forEach(radio => radio.querySelector(\"input\").checked = false);\n\n            const defaultRadios = [...showcasePanel.querySelectorAll(\".radio\")].filter(radio => radio.querySelector(\"input\").id.includes(\"default\"));\n\n            if (defaultRadios.length > 0) {\n                defaultRadios.map(radio => radio.querySelector(\"input\").checked = true);\n            } else {\n                showcasePanel.querySelectorAll(\".radio\").forEach(radio => radio.querySelector(\"input\").checked = radio.querySelector(\"input\").value === \"0\");\n            }\n\n        }\n\n        componentDidMount () {\n            tabs.init(this.props.showCasePanelAdvanced.tabsId);\n\n            this._resetOptions();\n\n        }\n\n        componentDidUpdate (prevProps, prevState) {\n            if (prevState.activeTab !== this.state.activeTab) {\n                this._resetOptions();\n            }\n        }\n\n        setActiveTab (e, i) {\n\n            e.preventDefault();\n\n            this.setState(prevState => ({ ...prevState,\n                activeTab: this.props.showCasePanelAdvanced.elements[i],\n                activeOptions: this.props.showCasePanelAdvanced.elements[i].activeOptions ? [...this.props.showCasePanelAdvanced.elements[i].activeOptions] : [] }));\n\n        }\n\n        setActiveOptions (id, value, description, checkbox) {\n            if (checkbox) {\n                if (this.state.activeOptions.filter(option => id === option.id).length > 0) {\n                    this.setState(prevState => ({ ...prevState,\n                        activeOptions: this.state.activeOptions.filter(option => id !== option.id) }));\n                } else {\n                    this.setState(prevState => ({ ...prevState,\n                        activeOptions: [...this.state.activeOptions,\n                            {\n                                id,\n                                value,\n                                description\n                            }\n                        ] }));\n                }\n            } else {\n                this.setState(prevState => ({ ...prevState,\n                    activeOptions: [...this.state.activeOptions.filter(option => id !== option.id),\n                        {\n                            id,\n                            value,\n                            description\n                        }\n                    ] }));\n            }\n        }\n\n        render () {\n            return (\n                <>\n                    <div id={this.props.showCasePanelAdvanced.id} className={`showcase-panel showcase-panel-advanced${this.state.optionsOpen ? \" options-active\" : \"\"}`}>\n                        <div id={this.props.showCasePanelAdvanced.tabsId} className=\"tabs tabs-scroll\">\n                            <ul id={`${this.props.showCasePanelAdvanced.tabsId}-ul`}>\n                                {this.props.showCasePanelAdvanced.elements.map((element, i) => <li key={i} className={this.state.activeTab.tab === element.tab ? \"active\" : null}>\n                                    <a href=\"#\" onClick={e => this.setActiveTab(e, i)}>{element.tab}</a>\n                                </li>\n                                )}\n                            </ul>\n                            <div className={`options-open${this.state.optionsOpen ? \" hidden\" : \"\"}`}>\n                                <i className=\"material-icons\" onClick={() => this.setState({ optionsOpen: true })}>menu_open</i>\n                            </div>\n                        </div>\n                        <div className=\"d-flex\">\n                            <div className=\"flex-column flex-fill\">\n                                <div className=\"component-preview\">\n                                    <div className={`component-preview-content${this.state.activeTab.altBackground ? \" component-preview-alt-background\" : \"\"}`}>\n                                        {cloneElement(this.state.activeTab.component,\n                                            this.state.activeOptions.reduce((acc, currentOption) => ({\n                                                ...acc,\n                                                ...currentOption.value\n                                            }), {})\n                                        )}\n                                    </div>\n                                </div>\n                                <div className=\"component-description\">\n                                    {this.state.activeTab.title && <h3>{this.state.activeTab.title}</h3>}\n                                    {this.state.activeTab.description}\n                                    {this.state.activeOptions\n                                        .filter(currentOption => currentOption.description)\n                                        .reduce((acc, currentOption) => ([\n                                            ...acc,\n                                            currentOption.description\n                                        ]), [])\n                                        .map((currentOptionDescription, i) => <React.Fragment key={i}>{currentOptionDescription}</React.Fragment>)\n                                    }\n                                </div>\n                            </div>\n                            {<div className={`options${this.state.optionsOpen ? \" active\" : \"\"}`}>\n                                <div className=\"options-header\">\n                                    Options\n                                    <i className=\"material-icons options-close\" onClick={() => this.setState({ optionsOpen: false })}>close</i>\n                                </div>\n                                {this.state.activeTab.options && <div className=\"options-body\">\n                                    {this.state.activeTab.options.checkbox &&\n\n                                        <div className=\"mb-4\">\n                                            {this.state.activeTab.options.checkbox.map((checkbox, i) => (\n                                                <div key={i} className=\"checkbox\" onChange={() => this.setActiveOptions(checkbox.id, checkbox.value, checkbox.description, true)}>\n                                                    <input type=\"checkbox\" id={checkbox.id} />\n                                                    <label htmlFor={checkbox.id}>{checkbox.name}</label>\n                                                </div>\n                                            ))}\n                                        </div>\n\n                                    }\n                                    {this.state.activeTab.options.dropdown && this.state.activeTab.options.dropdown.map((dropdown, i) => (\n                                        <div key={i} className=\"mb-4\">\n                                            <h4>{dropdown.title}</h4>\n                                            <select id={dropdown.id} className=\"form-control\" onChange={e => this.setActiveOptions(\n                                                dropdown.id,\n                                                dropdown.values[e.target.value].value,\n                                                dropdown.values[e.target.value].description\n                                            )}>\n                                                {dropdown.values.map((val, j) => <option key={j} value={j}>{val.name}</option>)}\n                                            </select>\n                                        </div>\n                                    ))}\n                                    {this.state.activeTab.options.radio && this.state.activeTab.options.radio.map((radio, i) => (\n                                        <div className=\"mb-4\" key={i}>\n                                            <h4>{radio.title}</h4>\n                                            {radio.values.map((val, j) => (\n                                                <div key={j} className=\"radio\" onChange={e => this.setActiveOptions(\n                                                    radio.id,\n                                                    radio.values[e.target.value].value,\n                                                    radio.values[e.target.value].description\n                                                )}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id={`${radio.id + val.name.replace(/\\s/g, \"\")}${val.default ? \"_default\" : \"\"}`}\n                                                        name={radio.id + radio.title.replace(/\\s/g, \"\")}\n                                                        value={j}\n                                                        defaultChecked={val.default}\n                                                    />\n                                                    <label htmlFor={`${radio.id + val.name.replace(/\\s/g, \"\")}${val.default ? \"_default\" : \"\"}`}>{val.name}</label>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    ))}\n                                </div>}\n                            </div>}\n                        </div>\n                    </div>\n                    <CodeFigure >\n                        {cloneElement(this.state.activeTab.component,\n                            this.state.activeOptions.reduce((acc, currentOption) => ({\n                                ...acc,\n                                ...currentOption.value\n                            }), {})\n                        )}\n                    </CodeFigure>\n                </>\n            );\n\n        }\n    }\n\n    return (\n        <>\n            {showCasePanel ? (showCasePanelAdvanced ? <ShowCasePanelAdvanced showCasePanelAdvanced={showCasePanelAdvanced} /> : <ShowCasePanel />) : null}\n            {codeFigure && !showCasePanelAdvanced ? <CodeFigure>{children}</CodeFigure> : null}\n        </>\n    );\n};\n\nComponentPreview.propTypes = {\n    language: PropTypes.oneOf([\"html\", \"javascript\", \"css\"]).isRequired,\n    removeOuterTag: PropTypes.bool,\n    hideValue: PropTypes.bool,\n    removeList: PropTypes.bool,\n    showCasePanel: PropTypes.bool,\n    showCasePanelSm: PropTypes.bool,\n    showCasePanelAdvanced: PropTypes.object,\n    codeFigure: PropTypes.bool,\n    dangerousHTML: PropTypes.bool,\n    negative: PropTypes.bool\n};\n\nexport default ComponentPreview;\n"],"sourceRoot":""}