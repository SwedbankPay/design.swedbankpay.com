{"version":3,"sources":["webpack://design.swedbankpay.com/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedCharts/index.js","webpack://design.swedbankpay.com/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedInquiries/index.js","webpack://design.swedbankpay.com/./src/App/Examples/examples/customers/CustomersOverview/index.js","webpack://design.swedbankpay.com/./src/App/Examples/examples/customers/constants.js","webpack://design.swedbankpay.com/./src/App/components/Chart/index.js","webpack://design.swedbankpay.com/./src/App/components/MediaObject/index.js","webpack://design.swedbankpay.com/./src/App/components/Pagination/index.js"],"names":["CustomersDetailedCharts","customerIdName","customerOrders","customerInquiries","createNumArray","datasetDataLength","length","totalNumMessages","reduce","accumulator","inquiry","numMessages","id","options","type","data","labels","Array","keys","map","i","toString","datasets","label","fill","scales","yAxes","scaleLabel","display","labelString","date","ticks","beginAtZero","className","filter","resolved","Math","floor","propTypes","PropTypes","isRequired","message","CustomersDetailedInquiryCard","size","icon","heading","text","href","CustomersDetailedInquiries","customersDetailedLatestInquiry","customersDetailedPreviousInquiries","key","CustomersOverview","props","state","customerFilter","this","customerFilterField","focus","e","setState","target","value","toLowerCase","aria-hidden","ref","input","onChange","updateFilter","onClick","resetFilter","disabled","scope","customersList","customer","firstName","includes","lastName","location","index","setCustomerIndex","status","statusText","arrows","farArrows","Component","email","phone","default","success","warning","danger","customersDetailedActionList","name","customersDetailedOrders","random","customersDetailedOrdersSteps","title","completed","ongoing","selected","Chart","colorPool","dg","chart","MediaObject","imgUrl","textSmall","mediaRight","muted","mediaClasses","classnames","iconClasses","src","headingClasses","mediaHeading","Pagination","items","activeItem","itemLength","paginationClasses","Arrow","aria-label","active"],"mappings":"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","file":"scripts/1244.4748dd83801d378a65b8.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Chart from \"@components/Chart\";\n\nconst CustomersDetailedCharts = ({ customerIdName, customerOrders, customerInquiries, createNumArray }) => {\n    const datasetDataLength = customerOrders.length;\n    const totalNumMessages = customerInquiries.reduce((accumulator, inquiry) => accumulator + inquiry.numMessages, 0);\n\n    return (\n        <>\n            <h3>Orders</h3>\n            <h4>Historical purchase prices</h4>\n            <Chart\n                id=\"customers-detailed-charts-1\"\n                options={{\n                    type: \"bar\",\n                    data: {\n                        labels: [...Array(datasetDataLength).keys()].map(i => (2019 - (datasetDataLength - 1) + i).toString()),\n                        datasets: [\n                            {\n                                label: customerIdName,\n                                data: customerOrders,\n                                fill: false\n                            },\n                            {\n                                label: \"Customers average\",\n                                data: createNumArray(datasetDataLength, 1000, 200),\n                                fill: false\n                            },\n                            {\n                                label: \"Estimated\",\n                                data: createNumArray(datasetDataLength, 850, 200),\n                                fill: false\n                            }\n                        ]\n                    },\n                    options: {\n                        scales: {\n                            yAxes: [{\n                                scaleLabel: {\n                                    display: true,\n                                    labelString: \"British Pound (£)\"\n                                }\n                            }]\n                        }\n                    }\n                }}\n            />\n\n            <h3>Inquiries</h3>\n            <h4>Number of inquiry messages</h4>\n            <Chart\n                id=\"customers-detailed-charts-2\"\n                options={{\n                    type: \"line\",\n                    data: {\n                        labels: customerInquiries.map(inquiry => inquiry.date),\n                        datasets: [\n                            {\n                                label: customerIdName,\n                                data: customerInquiries.map(inquiry => inquiry.numMessages),\n                                fill: false\n                            },\n                            {\n                                label: \"Customers average\",\n                                data: createNumArray(customerInquiries.length, 3, 4), // The multiple Math.floor(Math.random) is there to achieve a less random looking distribution\n                                fill: false\n                            }\n                        ]\n                    },\n                    options: {\n                        scales: {\n                            yAxes: [{\n                                ticks: {\n                                    beginAtZero: true\n                                }\n                            }]\n                        }\n                    }\n                }}\n            />\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <h4>Status distribution</h4>\n                    <Chart id=\"customers-detailed-charts-3\"\n                        options={{\n                            type: \"pie\",\n                            data: {\n                                labels: [\"Resolved\", \"Unresolved\", \"Unknown\"],\n                                datasets: [\n                                    {\n                                        data: [customerInquiries.filter(inquiry => inquiry.resolved).length, customerInquiries.filter(inquiry => !inquiry.resolved).length, 1]\n                                    }\n                                ]\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"col-lg-6\">\n                    <h4>Time before response</h4>\n                    <Chart id=\"customers-detailed-charts-4\"\n                        options={{\n                            type: \"pie\",\n                            data: {\n                                labels: [\"< 2 days\", \"< 1 week\", \"< 1 month\", \"< 3 months\", \"Other\"],\n                                datasets: [\n                                    {\n                                        data: [\n                                            Math.floor(totalNumMessages * 0.4),\n                                            Math.floor(totalNumMessages * 0.3),\n                                            Math.floor(totalNumMessages * 0.15),\n                                            Math.floor(totalNumMessages * 0.1),\n                                            Math.floor(totalNumMessages * 0.05)\n                                        ]\n                                    }\n                                ]\n                            }\n                        }}\n                    />\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nCustomersDetailedCharts.propTypes = {\n    customerIdName: PropTypes.string.isRequired,\n    customerOrders: PropTypes.arrayOf(PropTypes.number).isRequired,\n    customerInquiries: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    })).isRequired\n};\n\nexport default CustomersDetailedCharts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CustomersDetailedDatePickerGroup from \"../CustomersDetailedDatePickerGroup\";\nimport MediaObjectComponent from \"@components/MediaObject\";\n\nconst CustomersDetailedInquiryCard = ({ inquiry, size }) => (\n    <div className=\"card card-secondary\">\n        <header className=\"card-header\">\n            <h4>{`Inquiry: ${inquiry.id} | ${inquiry.date}`}</h4>\n        </header>\n        <div className=\"card-body\">\n            <div className=\"d-none d-sm-block\">\n                <div className=\"d-flex justify-content-around\">\n                    <MediaObjectComponent\n                        size={size}\n                        icon=\"message\"\n                        heading={inquiry.numMessages.toString()}\n                        text=\"messages\"\n                    />\n\n                    <MediaObjectComponent\n                        size={size}\n                        icon={inquiry.resolved ? \"check_circle\" : \"feedback\"}\n                        heading={inquiry.resolved ? \"Resolved\" : \"Unresolved\"}\n\n                    />\n                </div>\n            </div>\n            <div className=\"d-sm-none\">\n                <div className=\"d-flex flex-column\">\n                    <MediaObjectComponent\n                        size=\"sm\"\n                        icon=\"message\"\n                        heading={inquiry.numMessages.toString()}\n                        text=\"messages\"\n                    />\n\n                    <MediaObjectComponent\n                        size=\"sm\"\n                        icon={inquiry.resolved ? \"check_circle\" : \"feedback\"}\n                        heading={inquiry.resolved ? \"Resolved\" : \"Unresolved\"}\n\n                    />\n                </div>\n            </div>\n            <h5>Initial message:</h5>\n            <p>{inquiry.message}</p>\n        </div>\n        <div className=\"card-footer\">\n            <div className=\"footer-link\"><a href=\"#\">See inquiry thread</a></div>\n        </div>\n    </div>\n);\n\nconst CustomersDetailedInquiries = ({ customersDetailedLatestInquiry, customersDetailedPreviousInquiries }) => (\n    <>\n        <h3>Latest inquiry</h3>\n        <CustomersDetailedInquiryCard inquiry={customersDetailedLatestInquiry} size=\"lg\" />\n\n        <h3>Previous inquiries</h3>\n        <CustomersDetailedDatePickerGroup />\n        <div className=\"row\">\n            {customersDetailedPreviousInquiries.map(inquiry => (\n                <div key={inquiry.id} className=\"col-lg-6 d-flex\">\n                    <CustomersDetailedInquiryCard inquiry={inquiry} size=\"sm\" />\n                </div>\n            ))}\n        </div>\n    </>\n);\n\nCustomersDetailedInquiryCard.propTypes = {\n    inquiry: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    }).isRequired,\n    size: PropTypes.string.isRequired\n};\n\nCustomersDetailedInquiries.propTypes = {\n    customersDetailedLatestInquiry: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    }).isRequired,\n    customersDetailedPreviousInquiries: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    })).isRequired\n};\n\nexport default CustomersDetailedInquiries;\n\nexport { CustomersDetailedInquiryCard };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PaginationComponent from \"@components/Pagination\";\n\nclass CustomersOverview extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            customerFilter: \"\"\n        };\n    }\n\n    componentDidUpdate () {\n        this.customerFilterField.focus();\n    }\n\n    updateFilter (e) {\n        this.setState({\n            customerFilter: e.target.value.toLowerCase()\n        });\n    }\n\n    resetFilter () {\n        this.setState({\n            customerFilter: \"\"\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"panel panel-brand\">\n                    <header>\n                        <div className=\"row\">\n                            <div className=\"col-lg-4\">\n                                <h2 className=\"panel-title\">Customers</h2>\n                            </div>\n                            <div className=\"col-lg-8\">\n                                <div className=\"input-group\">{\"\\n\"}\n                                    <span className=\"input-group-addon\">{\"\\n\"}\n                                        <i className=\"material-icons\" aria-hidden=\"true\">search</i>\n                                    </span>{\"\\n\"}\n                                    <input ref={input => this.customerFilterField = input} value={this.state.customerFilter} onChange={e => this.updateFilter(e)} type=\"text\" className=\"form-control\" />{\"\\n\"}\n                                    <button type=\"button\" onClick={() => this.resetFilter()} disabled={this.state.customerFilter.length === 0} className=\"btn btn-primary btn-outline\">{\"\\n\"}\n                                        <i className=\"material-icons\" aria-hidden=\"true\">close</i>{\"\\n\"}\n                                    </button>{\"\\n\"}\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                    <div className=\"panel-table\">\n                        <table className=\"table table-hover table-striped\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">ID</th>\n                                    <th scope=\"col\" className=\"d-none d-sm-table-cell\">First name</th>\n                                    <th scope=\"col\" className=\"d-none d-sm-table-cell\">Last name</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\" className=\"d-none d-lg-table-cell\">Delivery status</th>\n                                    <th scope=\"col\" className=\"d-lg-none\" />\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.customersList.filter(\n                                    customer => this.state.customerFilter === \"\" ||\n                                    customer.firstName.toLowerCase().includes(this.state.customerFilter) ||\n                                    customer.lastName.toLowerCase().includes(this.state.customerFilter) ||\n                                    customer.location.toLowerCase().includes(this.state.customerFilter)\n                                )\n                                    .map((customer, index) => (\n                                        <tr key={customer.id} onClick={() => this.props.setCustomerIndex(index)}>\n                                            <th scope=\"row\">{customer.id}</th>\n                                            <td className=\"d-none d-sm-table-cell\">{customer.firstName}</td>\n                                            <td className=\"d-none d-sm-table-cell\">{customer.lastName}</td>\n                                            <td>{customer.location}</td>\n                                            <td className=\"d-none d-lg-table-cell\">\n                                                <span className={`status status-${customer.status}`}>{this.props.statusText[customer.status]}</span>\n                                            </td>\n                                            <td className=\"d-lg-none\">\n                                                <span className={`status status-${customer.status} pl-0`} />\n                                            </td>\n                                        </tr>\n                                    ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <PaginationComponent text=\"1 of 123\" arrows farArrows />\n                </div>\n            </div>\n        );\n    }\n}\n\nCustomersOverview.propTypes = {\n    customersList: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired\n    })).isRequired,\n    statusText: PropTypes.exact({\n        default: PropTypes.string.isRequired,\n        success: PropTypes.string.isRequired,\n        warning: PropTypes.string.isRequired,\n        danger: PropTypes.string.isRequired\n    }).isRequired,\n    setCustomerIndex: PropTypes.func.isRequired\n};\n\nexport default CustomersOverview;\n","// Constants that can be taken out of the index.js file is put here, to keep the index.js file smaller and less confusing\n\nexport const customersList = [\n    {\n        id: \"c1\",\n        firstName: \"Sven\",\n        lastName: \"Svensson\",\n        email: \"sven.svensson@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Visby\",\n        status: \"default\"\n    },\n    {\n        id: \"c2\",\n        firstName: \"Anna\",\n        lastName: \"Svensson\",\n        email: \"anna.svensson@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Stockholm\",\n        status: \"success\"\n    },\n    {\n        id: \"c3\",\n        firstName: \"Ola\",\n        lastName: \"Nordmann\",\n        email: \"ola.nordmann@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Oslo\",\n        status: \"success\"\n    },\n    {\n        id: \"c4\",\n        firstName: \"Kari\",\n        lastName: \"Nordmann\",\n        email: \"kari.nordmann@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Bergen\",\n        status: \"warning\"\n    },\n    {\n        id: \"c5\",\n        firstName: \"Holger\",\n        lastName: \"Danske\",\n        email: \"holger.danske@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Copenhagen\",\n        status: \"danger\"\n    },\n    {\n        id: \"c6\",\n        firstName: \"Matti\",\n        lastName: \"Meikäläinen\",\n        email: \"matti.meikalainen@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Lahti\",\n        status: \"success\"\n    },\n    {\n        id: \"c7\",\n        firstName: \"Helma\",\n        lastName: \"Egilsdóttir\",\n        email: \"helma.egilsdottir@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Reykjavík\",\n        status: \"default\"\n    }\n];\n\nexport const statusText = {\n    default: \"New\",\n    success: \"Delivered\",\n    warning: \"Late\",\n    danger: \"Missing\"\n};\n\nexport const customersDetailedActionList = [\n    {\n        name: \"Edit\",\n        icon: \"edit\"\n    },\n    {\n        name: \"Delete\",\n        icon: \"delete\"\n    }\n];\n\nexport const customersDetailedOrders = [...Array(15)].map(() => (Math.floor(Math.random() * 1000)) + 1000); // Generates 15 random orders with value between 1000 and 2000 to display\n\nexport const customersDetailedOrdersSteps = [\n    {\n        title: \"Check status\",\n        completed: true\n    },\n    {\n        title: \"Confirm status\",\n        ongoing: true,\n        selected: true\n    },\n    {\n        title: \"Handle status\"\n    },\n    {\n        title: \"Complete status\"\n    }\n];\n\nexport const customersDetailedLatestInquiry = {\n    id: \"InquiryID#456\",\n    date: \"24.10.2019\",\n    numMessages: 8,\n    resolved: false,\n    message: \"This is the initial message of the inquiry. The initial message is always sent by the customer. \\\n    It starts an inquiry thread in which the support team can respond to and stay in contact with the customer. \\\n    The inquiry is marked as unresolved until the support staff marks it as resolved.\"\n};\n\n// Generates 15 previous inquiries to display as an example\nexport const customersDetailedPreviousInquiries = [...Array(15).keys()].map(i => ({\n    id: `InquiryID#${i}`,\n    date: `${i + 10}.${Math.floor(10 - i * 0.4) < 10 ? \"0\" : \"\"}${Math.floor(10 - i * 0.4)}.20${19 - i < 10 ? \"0\" : \"\"}${19 - i}`, // Uses simple formulas to generate different dates, to get varied dates\n    numMessages: Math.floor(Math.random() * 20) + 3,\n    resolved: Math.random() > 0.1,\n    message: `This is the initial message of inquiry InquiryID#${i}. This message was sent ${i + 10}.${Math.floor(10 - i * 0.4) < 10 ? \"0\" : \"\"}${Math.floor(10 - i * 0.4)}.20${19 - i < 10 ? \"0\" : \"\"}${19 - i}`\n}));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Chart extends Component {\n    componentDidMount () {\n        const { id, options, colorPool } = this.props;\n\n        dg.chart(id, options, colorPool);\n    }\n\n    render () {\n        return (\n            <canvas id={this.props.id} />\n        );\n    }\n}\n\nChart.propTypes = {\n    id: PropTypes.string.isRequired,\n    options: PropTypes.object.isRequired,\n    colorPool: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default Chart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst MediaObject = ({ size, imgUrl, icon, heading, text, textSmall, mediaRight, muted }) => {\n    const mediaHeading = () => {\n        const headingClasses = classnames(muted ? \"text-muted\" : null);\n\n        switch (size) {\n            case \"sm\":\n                return <h4 className={headingClasses}>{heading}</h4>;\n            case \"lg\":\n                return <h2 className={headingClasses}>{heading}</h2>;\n            default:\n                return <h3 className={headingClasses}>{heading}</h3>;\n        }\n    };\n\n    const mediaClasses = classnames(\n        \"media\",\n        mediaRight ? \"media-right\" : null,\n        size ? `media-${size}` : null\n    );\n\n    const iconClasses = classnames(\n        \"material-icons\",\n        muted ? \"text-muted\" : null\n    );\n\n    return (\n        <div className={mediaClasses}>\n            {(imgUrl || icon) ?\n                <div className=\"media-img\">{\"\\n\"}\n                    {imgUrl ? <> <img src={imgUrl} /> {\"\\n\"} </> : null}\n                    {icon ? <> <i className={iconClasses} aria-hidden=\"true\">{icon}</i> {\"\\n\"} </> : null}\n                </div>\n                : null}\n            <div className=\"media-body\">\n                {mediaHeading()}\n                <p>{textSmall ? <small>{text}</small> : text}</p>\n            </div>\n        </div>\n    );\n};\n\nMediaObject.propTypes = {\n    size: PropTypes.oneOf([\"sm\", \"lg\"]),\n    imgUrl: PropTypes.string,\n    icon: PropTypes.string,\n    heading: PropTypes.string.isRequired,\n    text: PropTypes.string,\n    textSmall: PropTypes.bool,\n    mediaRight: PropTypes.bool,\n    muted: PropTypes.bool\n};\n\nexport default MediaObject;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Pagination = ({ type, items, text, arrows, farArrows }) => {\n    let activeItem = -1;\n    const itemLength = items ? items.length - 1 : -2;\n\n    const paginationClasses = classnames(\n        \"pagination\",\n        type ? `pagination-${type}` : \"\"\n    );\n\n    const Arrow = ({ type }) => {\n        let disabled = false;\n\n        if (type === \"start\" || type === \"back\") {\n            disabled = activeItem === 0;\n        } else if (type === \"forward\" || type === \"end\") {\n            disabled = activeItem === itemLength;\n        }\n\n        return (\n            <li className={`arrow-${type}`} aria-label={type} >{\"\\n\"}\n                {disabled ? <span></span> : <a href=\"#\"></a>}{\"\\n\"}\n            </li>\n        );\n    };\n\n    return (\n        <ul className={paginationClasses}>\n            {farArrows ? <Arrow type=\"start\" /> : null}\n            {arrows ? <Arrow type=\"back\" /> : null}\n            {items ? items.map(({ name, href, active }, i) => {\n                if (active) { activeItem = i; }\n\n                return (\n                    <li key={i} className={`${active ? \"active\" : \"\"}`}>{\"\\n\"}\n                        <a href={href}>{name}</a>{\"\\n\"}\n                    </li>\n                );\n            }) : null}\n            {text ? <li>{\"\\n\"}<span className=\"text\">{text}</span>{\"\\n\"}</li> : null}\n            {arrows ? <Arrow type=\"forward\" /> : null}\n            {farArrows ? <Arrow type=\"end\" /> : null}\n        </ul>\n    );\n};\n\nPagination.propTypes = {\n    type: PropTypes.oneOf([\"bullets\", \"simple\"]),\n    items: PropTypes.array,\n    text: PropTypes.string,\n    arrows: PropTypes.bool,\n    farArrows: PropTypes.bool\n};\n\nexport default Pagination;\n"],"sourceRoot":""}