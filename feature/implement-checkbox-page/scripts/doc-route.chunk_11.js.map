{"version":3,"sources":["webpack:///./src/App/ComponentsDocumentation/components/Checkbox/index.js","webpack:///./src/App/components/FormComponents/Checkbox.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Overview","ContentGuidelines","HowTo","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_docutils__WEBPACK_IMPORTED_MODULE_2__","_components_FormComponents_Checkbox__WEBPACK_IMPORTED_MODULE_3__","ButtonExamples","a","createElement","Fragment","id","label","className","language","codeFigure","to","Checkbox","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_ref","checked","disabled","attrs","type","defaultChecked","htmlFor","propTypes","PropTypes","string","bool"],"mappings":"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","file":"scripts/doc-route.chunk_11.js?5af48e333a54e93a61fa","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport CheckboxComponent from \"@components/FormComponents/Checkbox\";\n\nconst ButtonExamples = () => (\n    <React.Fragment>\n        <CheckboxComponent id=\"radio-example-1\" label=\"Checkbox label\" />\n        <CheckboxComponent id=\"radio-example-2\" label=\"Checkbox label\" />\n        <CheckboxComponent id=\"radio-example-3\" label=\"Checkbox label\" />\n    </React.Fragment>\n);\n\nconst HowTo = () => (\n    <section>\n        <h3>How to setup checkbox groups</h3>\n        <div className=\"row\">\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-success h-100\">\n                    <h3>Do</h3>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 pb-5\">\n                            <h4>Button size</h4>\n                            <CheckboxComponent id=\"radio-do-example-1\" label=\"Small\" />\n                            <CheckboxComponent id=\"radio-do-example-2\" label=\"Medium\" />\n                            <CheckboxComponent id=\"radio-do-example-3\" label=\"Large\" />\n                        </div>\n                        <p>Short and concise, similar length on the text is always preferred when setting up a checkbox group. Try to sort the options in a logical order.</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-error\">\n                    <h3>Don&#x27;t</h3>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 pb-5 w-50\">\n                            <h4>Button size</h4>\n                            <CheckboxComponent id=\"radio-dont-example-1\" label=\"Super duper tiny small\" />\n                            <CheckboxComponent id=\"radio-dont-example-2\" label=\"Large\" />\n                            <CheckboxComponent id=\"radio-dont-example-3\" label=\"Small\" />\n                        </div>\n                        <p>Avoid having labels longer than the rest when possible and displaying options without order.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nconst Overview = () => (\n    <section>\n        <h2 id=\"overview\">Overview</h2>\n        <div className=\"showcase-panel d-flex flex-column align-items-center\">\n            <div>\n                <h4>Group heading</h4>\n                <ButtonExamples />\n            </div>\n        </div>\n        <div className=\"p-4 border-right border-left\">\n            <h2>Checkbox group</h2>\n            <p className=\"m-0\">The default setup of the checkbox group always has a label on top which describes the checkbox group and each individual checkbox is then followed by a label which clearly describes what the options and what checking the box represents</p>\n        </div>\n        <ComponentPreview language=\"html\" codeFigure>\n            <ButtonExamples />\n        </ComponentPreview>\n\n        <h3>When to consider something else</h3>\n        <ul className=\"list list-bullet\">\n            <li>\n            When you want to present multiple choices where the user can only select one specific choice, the <Link to=\"/components/radiobutton\">radio button</Link> component should be used instead of checkboxes.\n            </li>\n        </ul>\n\n        <HowTo />\n    </section>\n);\n\nconst ContentGuidelines = () => (\n    <section>\n        <h2 id=\"content-guidelines\">Content guidelines</h2>\n        <ul className=\"list list-bullet\">\n            <li>The <b>Group heading</b> for the radio button group should be descriptive, explaining the context and what actions the user is choosing from. </li>\n            <li>The <b>radio button label</b> should be short, to the point and clearly explain the option. It is also preferred to have fewer than three words per label as longer words could extend a label to multiple rows which could disrupt the reading experience.</li>\n        </ul>\n    </section>\n);\n\nconst Checkbox = () => (\n    <DocContainer>\n        <p className=\"lead\">The checkbox component should be used when the user are presented with a list of options where one or multiple options can be selected by the user.</p>\n        <Overview />\n        <ContentGuidelines />\n    </DocContainer>\n);\n\nexport default Checkbox;\n\n/* for testing */\nexport { Overview, ContentGuidelines, HowTo };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n"],"sourceRoot":""}