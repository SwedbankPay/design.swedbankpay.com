{"version":3,"sources":["webpack:///./src/App/components/InputGroup/index.js","webpack:///./src/App/components/FormComponents/Datepicker.js","webpack:///./src/App/components/FormComponents/FormControlText.js","webpack:///./src/App/components/FormComponents/Radio.js","webpack:///./src/App/components/FormComponents/Rangeslider.js","webpack:///./src/App/components/FormComponents/Togglebox.js","webpack:///./src/App/components/FormComponents/index.js","webpack:///./src/App/components/Button/index.js","webpack:///./src/App/ComponentsDocumentation/components/Forms/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/App/components/FormComponents/Checkbox.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Addon","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","_ref","type","value","color","disabled","a","createElement","className","concat","aria-hidden","Feedback","_ref2","icon","InputGroup","_ref3","id","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","attrs","data-validate","inputGrpClasses","classnames","htmlFor","map","opt","i","key","length","Fragment","data-success","data-error","propTypes","PropTypes","string","isRequired","bool","oneOf","array","oneOfType","Datepicker","format","time","min","max","months","fulldate","mode","allowinput","data-datepicker","data-datepicker-format","data-datepicker-time","data-datepicker-min","data-datepicker-max","data-datepicker-value","data-datepicker-months","data-datepicker-fulldate","data-datepicker-mode","data-datepicker-allowinput","data-required","react_default","FormControlText","text","Radio","checked","name","defaultChecked","Rangeslider","step","valueLabel","valueLabelPrefix","valueLabelPostfix","valueLabelPosition","data-rs-value","number","Togglebox","Checkbox","FormComponents_Datepicker","FormComponents_FormControlText","FormComponents_Radio","FormComponents_Rangeslider","FormComponents_Togglebox","Button","href","loading","btnType","fullWidth","pullRight","input","active","size","bankId","btnClasses","role","aria-pressed","aria-disabled","tabIndex","_extends","onClick","e","preventDefault","loader","window","dg","rangeslider","validation","Overview","_components_CodeTags__WEBPACK_IMPORTED_MODULE_6__","code","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","_docutils__WEBPACK_IMPORTED_MODULE_2__","language","showCasePanel","codeFigure","onSubmit","_components_InputGroup__WEBPACK_IMPORTED_MODULE_3__","_components_FormComponents__WEBPACK_IMPORTED_MODULE_5__","_components_Button__WEBPACK_IMPORTED_MODULE_4__","FormGrid","Validation","noValidate","action","data-disable-invalid","UsageWithFieldsets","StaticText","Dropdown","removeOuterTag","Checkboxes","RadioButtons","Toggleboxes","RangeSlider","DisabledFormComponents","JavascriptMethods","componentName","Forms","Component","init","docToc","__webpack_amd_options__","module","exports","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","_typeof","push","Array","isArray","inner","apply","call","join","default","define","undefined","__WEBPACK_AMD_DEFINE_RESULT__"],"mappings":"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","file":"scripts/doc-route.chunk_19.js?5af48e333a54e93a61fa","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, id }) => {\n    const attrs = {\n        id,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, name }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"radio\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ name, min, max, step, color, value, disabled, valueLabel, valueLabelPrefix, valueLabelPostfix, valueLabelPosition }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    const ValueLabel = () => (\n        <output className=\"value-label\" >{\"\\n\\t\\t\"}\n            <p>{\"\\n\\t\\t\\t\"}\n                {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n            </p>{\"\\n\\t\"}\n        </output>\n    );\n\n    return (\n        <div className={`rangeslider rangeslider-${color ? color : \"brand\"} label-${valueLabelPosition ? valueLabelPosition : \"right\"}`}>{\"\\n\"}\n            <input {...attrs}/>{valueLabel ? \"\\n\" : null}\n            {valueLabel ? <ValueLabel /> : null}{valueLabel ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    color: PropTypes.oneOf([\"brand\", \"neutral\", \"default\"]),\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabel: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string,\n    valueLabelPosition: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"togglebox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Rangeslider from \"./Rangeslider\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Rangeslider,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Rangeslider, Togglebox };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs} onClick={e => e.preventDefault()}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer, JavascriptDocs } from \"@docutils\";\nimport InputGroup from \"@components/InputGroup\";\nimport Button from \"@components/Button\";\nimport { Checkbox, FormControlText, Radio, Rangeslider, Togglebox } from \"@components/FormComponents\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst { rangeslider, validation } = window.dg;\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>\n            Use <CodeTags type=\"primary\" code={\"<input>\"} /> in combination with <CodeTags type=\"primary\" code={\"<form-group>\"} />s and/or <CodeTags type=\"primary\" code={\"<form>\"} />s to\n            show a collection of related inputs. <CodeTags type=\"primary\" code={\"<form-group>\"} />s can contain more than just an input, like a <CodeTags type=\"primary\" code={\"<label>\"} /> or\n            <CodeTags type=\"primary\" code={\"<help-block>\"} />s.\n        </p>\n        <p>\n            <b>Note:</b> On larger screens, <CodeTags type=\"primary\" code={\"<input>\"} /> should not be wider than half the\n            page. <CodeTags type=\"primary\" code={\"<input>\"} /> should take the available width on smaller screen sizes. <Link to=\"/core/grid\">Grid</Link> can\n            be used to achieve this behavior.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <InputGroup\n                            id=\"your-name\"\n                            type=\"text\"\n                            autoComplete=\"name\"\n                            label=\"Name\"\n                            helpBlock=\"Your first and last name\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <InputGroup\n                            id=\"email-address\"\n                            type=\"text\"\n                            label=\"Email\"\n                            autoComplete=\"email\"\n                            placeholder=\"name@mail.com\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <InputGroup\n                            id=\"phone-number\"\n                            type=\"text\"\n                            label=\"Phone number\"\n                            autoComplete=\"phone\"\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <Checkbox label={\"Subscribe to our Shovels and Tapestry catalogue\"} id=\"subscribe-checkbox\" />\n                </div>{\"\\n\"}\n                <Button type=\"primary\" label=\"Submit\" btnType=\"submit\" />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst FormGrid = () => (\n    <>\n        <h2 id=\"form-grid\">Form grid</h2>\n        <p>\n            You can use the grid system to customize how forms are displayed. Just wrap your form elements in a row container to have two or more input elements next to eachother horizontally.\n            Remember to add <CodeTags type=\"secondary\" code=\".col-{your_size}\"/> to the forms.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <div className=\"row\">\n                    <div className=\"col-5\">\n                        <InputGroup\n                            id=\"grid-first-name\"\n                            type=\"text\"\n                            autoComplete=\"given-name\"\n                            label=\"First name\"\n                        />\n                    </div>\n                    <div className=\"col-5\">\n                        <InputGroup\n                            id=\"grid-last-name\"\n                            type=\"text\"\n                            label=\"Last name\"\n                            autoComplete=\"family-name\"\n                        />\n                    </div>\n                    <div className=\"col-2\">\n                        <div className=\"form-group\">{\"\\n\"}\n                            <br />{\"\\n\"}\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>{\"\\n\"}\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst Validation = () => (\n    <>\n        <h2 id=\"validation\">Validation overview</h2>\n        <p>To use our validation, start by adding the attribute <CodeTags type=\"secondary\" code=\"novalidate\" /> to your <CodeTags type=\"primary\" code={\"<form>\"} /> element.\n        If you wish to validate your entire form, add the <CodeTags type=\"secondary\" code=\"validate\" /> attribute to the <CodeTags type=\"primary\" code={\"<form>\"}/> tag,\n        if not add it to the desired <CodeTags type=\"primary\" code={\"<input>\"} /> tags.</p>\n        <p>Validates against <CodeTags type=\"secondary\" code=\"required\" /> and <CodeTags type=\"secondary\" code=\"pattern\" />. Using <CodeTags type=\"secondary\" code=\"pattern\" /> overrides default patterns.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form noValidate data-validate=\"\">\n                <div className=\"row d-flex align-items-center\">\n                    <div className=\"col-md-5\">\n                        <InputGroup\n                            id=\"validation-name-1\"\n                            type=\"text\"\n                            label=\"Name\"\n                        />\n                    </div>\n                    <div className=\"col-md-5\">\n                        <InputGroup\n                            id=\"validation-email-1\"\n                            type=\"email\"\n                            label=\"Email\"\n                            placeholder=\"name@mail.com\"\n                        />\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n\n        <h3>Feedback</h3>\n        <p>\n            To give users validation feedback on each input insert the message in the attributes <CodeTags type=\"secondary\" code=\"success\" /> and <CodeTags type=\"secondary\" code=\"error\" /> in\n            the <CodeTags type=\"secondary\" code=\".help-block\" /> element. To display an asterisk you have to include a label with your input element.\n        </p>\n        <p>\n            <b>NOTE:</b> To include the <CodeTags type=\"secondary\" code=\"warning\"/>-icon, the input must be wrapped in a <CodeTags type=\"secondary\" code=\".input-group\" /> and cannot have\n            any trailing <CodeTags type=\"secondary\" code=\".input-group-addons\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form action=\"#\" noValidate data-validate=\"\">\n                <div className=\"row d-flex align-items-center\">\n                    <div className=\"col-md-5\">\n                        <InputGroup\n                            required\n                            id=\"validation-email-2\"\n                            type=\"email\"\n                            label=\"Email\"\n                            placeholder=\"name@mail.com\"\n                            prefixType=\"icon\"\n                            prefixValue=\"email\"\n                            helpBlock\n                            successMessage=\"Right!\"\n                            errorMessage=\"Wrong!\"\n                        />\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button className=\"btn btn-primary mb-4\" type=\"submit\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n\n        <h3>Dynamically disabled submit button</h3>\n        <p>You can also dynamically disable the submit button by adding <CodeTags type=\"secondary\" code=\"disable-invalid\" /> to the <CodeTags type=\"primary\" code={\"<button type=\\\"submit\\\">\"} /> element.</p>\n        <p><b>NOTE:</b> For this to work you also need the <CodeTags type=\"secondary\" code=\"validate\" /> attribute to be present in the <CodeTags type=\"primary\" code={\"<form>\"} /> tag.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form action=\"#\" noValidate data-validate=\"\">\n                <div className=\"row d-flex align-items-center\">\n                    <div className=\"col-md-5\">\n                        <InputGroup\n                            required\n                            id=\"validation-email-3\"\n                            type=\"email\"\n                            label=\"Email\"\n                            placeholder=\"name@mail.com\"\n                            prefixType=\"icon\"\n                            prefixValue=\"email\"\n                            successMessage=\"Right!\"\n                            errorMessage=\"Wrong!\"\n                        />\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button className=\"btn btn-primary\" type=\"submit\" data-disable-invalid=\"\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst UsageWithFieldsets = () => (\n    <>\n        <h2 id=\"usage-with-fieldsets\">Usage with fieldsets</h2>\n        <p>Use fieldsets to give your forms more structure.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <fieldset>\n                    <legend>Log in</legend>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <InputGroup\n                                id=\"fieldset-username\"\n                                type=\"text\"\n                                autoComplete=\"username\"\n                                label=\"Username\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <InputGroup\n                                id=\"fieldset-password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </div>\n                    </div>\n                    <Checkbox label=\"Remember me\" id=\"fieldset-checkbox\" />\n                </fieldset>{\"\\n\"}\n                <Button type=\"primary\" label=\"Log in\" btnType=\"submit\" />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst StaticText = () => (\n    <>\n        <h2 id=\"static-text\">Static text</h2>\n        <p>To just display static text in forms use a <CodeTags type=\"primary\" code={\"<span>\"} /> inside a form</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <FormControlText label=\"Company\" text=\"Swedbank Pay\" />\n            <FormControlText label=\"Employee\" text=\"Bob Corlsan\" />\n        </ComponentPreview>\n    </>\n);\n\nconst Dropdown = () => (\n    <>\n        <h2 id=\"dropdown\">Dropdown menu</h2>\n        <p>\n            Inserting text next to a <CodeTags type=\"primary\" code={\"<select>\"} /> works just like any other input element.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroup\n                label=\"Profession\"\n                type=\"select\"\n                selectOptions={[\"Bounty hunter\", \"Smuggler\", \"Jedi\"]}\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst Checkboxes = () => (\n    <>\n        <h2 id=\"checkboxes\">Checkboxes</h2>\n        <p>\n            Use checkboxes to make it so a user can select several options. If you need to restrict the number of possible selections to one, see radio buttons.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Checkbox label=\"Bread\" id=\"checkbox-example-1\" />\n            <Checkbox label=\"Not bread. I'm not really fond of it. What I would really like, however, is one single piece of cracker with some nutella on it. Perhaps this could be the second checkbox. These thoughts are written here simply to show you how the checkboxes align themselves when label text is fairly long.\" id=\"checkbox-example-2\" />\n            <Checkbox label=\"Milk\" id=\"checkbox-example-3\" checked />\n        </ComponentPreview>\n    </>\n);\n\nconst RadioButtons = () => (\n    <>\n        <h2 id=\"radio-buttons\">Radio buttons</h2>\n        <p>\n            Use radio buttons when you wish to limit your user to one choice out of several possible.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Radio label=\"Hamburgers\" id=\"radio-example-1\" name=\"radio-example\" />\n            <Radio label=\"Not the one above because I'm not really fond of hamburgers. What I would really like, however, is a nice piece of steak. Perhaps that could be the second option. These thoughts are written here simply to show you how radio buttons align themselves when label text is fairly long.\" id=\"radio-example-2\" name=\"radio-example\" />\n            <Radio label=\"Pizza\" id=\"radio-example-3\" name=\"radio-example\" checked />\n        </ComponentPreview>\n    </>\n);\n\nconst Toggleboxes = () => (\n    <>\n        <h2 id=\"toggleboxes\">Toggleboxes</h2>\n        <p>\n            Use toggleboxes if you wish present the user with an either-or option.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Togglebox id=\"togglebox-example-1\" label=\"Enable overdrive\" />\n            <Togglebox id=\"togglebox-example-2\" label=\"Enable superpowers\" checked />\n        </ComponentPreview>\n    </>\n);\n\nconst RangeSlider = () => (\n    <>\n        <h2 id=\"rangeslider\">Rangeslider</h2>\n        <p>Asides from the default behavior of a range input, the Rangeslider{\"'\"}s colors and label positioning can be customized.</p>\n        <p>Currently there are three different supported colors for the slider: <CodeTags type=\"secondary\" code=\".rangeslider-brand\" />, <CodeTags type=\"secondary\" code=\".rangeslider-default\" /> and <CodeTags type=\"secondary\" code=\".rangeslider-neutral\" />.</p>\n        <p>The Rangeslider currently supports two positions: <CodeTags type=\"secondary\" code=\".label-right\" /> and <CodeTags type=\"secondary\" code=\".label-top\" />. If no position is given, <CodeTags type=\"secondary\" code=\"right\" /> is defaulted.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Rangeslider min={0} max={200} step={1} value={100} valueLabel valueLabelPrefix=\"$\" valueLabelPostfix=\"%\" />\n        </ComponentPreview>\n\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Rangeslider min={0} max={200} step={1} value={100} color=\"neutral\" valueLabel valueLabelPrefix=\"$\" valueLabelPostfix=\"%\" valueLabelPosition=\"top\" />\n        </ComponentPreview>\n    </>\n);\n\nconst DisabledFormComponents = () => (\n    <>\n        <h2 id=\"disabled-form-components\">Disabled form components</h2>\n        <p>Disable whichever form component you want by adding <CodeTags type=\"secondary\" code=\"disabled\" /> to the desired input element</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Togglebox id=\"togglebox-disabled-example-1\" label=\"Enable overdrive\" disabled />\n            <Radio label=\"Hamburgers\" id=\"radio-disabled-example-1\" name=\"radio-disabled-example\" disabled />\n            <Checkbox label=\"Milk\" id=\"checkbox-disabled-example-3\" disabled checked />\n            <Rangeslider className=\"mb-2\" min={0} max={200} step={1} value={100} valueLabel valueLabelPrefix=\"$\" valueLabelPostfix=\"%\" disabled/>\n        </ComponentPreview>\n\n        <h3>Disable a fieldset</h3>\n        <p>Disable entire fieldsets by adding <CodeTags type=\"secondary\" code=\"disabled\" /> to the fieldset element</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form>\n                <fieldset disabled>\n                    <legend>Log in</legend>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                id=\"fieldset-disabled-username\"\n                                type=\"text\"\n                                autoComplete=\"username\"\n                                label=\"Username\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                id=\"fieldset-disabled-password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                label=\"Profession\"\n                                type=\"select\"\n                                selectOptions={[\"Bounty hunter\", \"Smuggler\", \"Jedi\"]}\n                            />\n                        </div>\n                    </div>\n                    <Checkbox label=\"Remember me\" id=\"fieldset-disabled-checkbox\" />\n                </fieldset>{\"\\n\"}\n                <Button type=\"primary\" label=\"Log in\" btnType=\"submit\" disabled />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n\n        <h3>Disable a <CodeTags type=\"secondary\" code=\".form-group\" /></h3>\n        <p>\n            Add disable styling to a <CodeTags type=\"secondary\" code=\".form-group\" /> by adding class <CodeTags type=\"secondary\" code=\".disabled\" /> to it.\n            Note that the disabled form component should still have <CodeTags type=\"secondary\" code=\"disabled\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form>\n                <fieldset>\n                    <legend>Log in</legend>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                id=\"form-group-disabled-username\"\n                                type=\"text\"\n                                autoComplete=\"username\"\n                                label=\"Username\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                id=\"form-group-disabled-password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                autoComplete=\"current-password\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <Checkbox label=\"Remember me\" id=\"form-group-disabled-checkbox\" />\n                </fieldset>{\"\\n\"}\n                <Button type=\"primary\" label=\"Log in\" btnType=\"submit\" disabled />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"validation\" />\n        <p>\n            The <CodeTags type=\"secondary\" code=\"dg.validation.init()\" /> can be used on a form tag to initialize all fields\n            contained in the form, or you can pass a single field to initialize just that one.\n        </p>\n    </>\n);\n\nclass Forms extends Component {\n    componentDidMount () {\n        rangeslider.init();\n        validation.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Form componenets allow you to gather user input in various different ways.\n                </p>\n                <Overview />\n                <FormGrid />\n                <Validation />\n                <UsageWithFieldsets />\n                <StaticText />\n                <Dropdown />\n                <Checkboxes />\n                <RadioButtons />\n                <Toggleboxes />\n                <RangeSlider />\n                <DisabledFormComponents />\n                <JavascriptMethods />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Forms;\n\n/* For testing */\nexport { Overview, FormGrid, Validation, UsageWithFieldsets, StaticText, Dropdown, Checkboxes, RadioButtons, Toggleboxes, RangeSlider, DisabledFormComponents, JavascriptMethods };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n"],"sourceRoot":""}