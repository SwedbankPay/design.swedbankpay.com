{"version":3,"sources":["webpack://design.swedbankpay.com/./node_modules/classnames/index.js","webpack://design.swedbankpay.com/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedSettings/index.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Checkbox.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Datepicker.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/FormControlText.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Radio.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Rangeslider.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Togglebox.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/index.js","webpack://design.swedbankpay.com/./src/App/components/InputGroup/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","className","Togglebox","id","checked","label","keys","map","item","Checkbox","type","selectOptions","prefixValue","disabled","attrs","defaultChecked","htmlFor","propTypes","PropTypes","Datepicker","format","time","min","max","months","value","prefixType","fulldate","mode","allowinput","required","Addon","FormControlText","text","Radio","name","Rangeslider","step","color","valueLabel","valueLabelPrefix","valueLabelPostfix","valueLabelPosition","defaultValue","ValueLabel","data-rs-value","aria-hidden","Feedback","icon","InputGroup","placeholder","pattern","validate","autoComplete","readOnly","validationState","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","inputGrpClasses","classnames","opt","Fragment","data-success","data-error"],"mappings":"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","file":"scripts/doc-route.chunk_46.c12a6c6026b5faa2de11.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\n\nimport { Togglebox, Checkbox } from \"@components/FormComponents\";\nimport InputGroup from \"@components/InputGroup\";\n\nconst CustomersDetailedSettings = () => (\n    <>\n        <h3>Notifications</h3>\n        <div className=\"row justify-content-around mt-3\">\n            <div className=\"col-lg-auto m-2\">\n                <div className=\"d-flex flex-column\">\n                    <Togglebox id=\"customers-detailed-settings-toggle-1\" checked label=\"Delivery status changes\" />\n                    <Togglebox id=\"customers-detailed-settings-toggle-3\" label=\"Critical delivery messages\" />\n                </div>\n            </div>\n            <div className=\"col-lg-auto m-2\">\n                <Togglebox id=\"customers-detailed-settings-toggle-2\" label=\"New inquiry messages\" />\n                <Togglebox id=\"customers-detailed-settings-toggle-4\" checked label=\"Inquiry status changes\" />\n            </div>\n        </div>\n        <h3>Newsletter and information</h3>\n        <div className=\"row mt-4\">\n            {[...Array(7).keys()].map(item => (\n                <div key={item} className=\"col-lg-3 col-md-4 col-sm-6\">\n                    <Checkbox id={`customers-detailed-settings-checkbox-${item}`} checked label={`Subscription #${item + 1}`} />\n                </div>\n            ))}\n        </div>\n\n        <h3>Customer type</h3>\n        <InputGroup\n            type=\"select\"\n            selectOptions={[\"Long-term contract\", \"Short-term contract\", \"One time purchase\"]}\n            prefixValue=\"Type\"\n        />\n\n        <button className=\"btn btn-primary\">Save</button>\n    </>\n);\n\nexport default CustomersDetailedSettings;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, id }) => {\n    const attrs = {\n        id,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, name }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"radio\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ name, min, max, step, color, value, disabled, valueLabel, valueLabelPrefix, valueLabelPostfix, valueLabelPosition }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    const ValueLabel = () => (\n        <output className=\"value-label\" >{\"\\n\\t\\t\"}\n            <p>{\"\\n\\t\\t\\t\"}\n                {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n            </p>{\"\\n\\t\"}\n        </output>\n    );\n\n    return (\n        <div className={`rangeslider rangeslider-${color ? color : \"brand\"} label-${valueLabelPosition ? valueLabelPosition : \"right\"}`}>{\"\\n\"}\n            <input {...attrs}/>{valueLabel ? \"\\n\" : null}\n            {valueLabel ? <ValueLabel /> : null}{valueLabel ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    color: PropTypes.oneOf([\"brand\", \"neutral\", \"default\"]),\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabel: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string,\n    valueLabelPosition: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"togglebox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Rangeslider from \"./Rangeslider\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Rangeslider,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Rangeslider, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n"],"sourceRoot":""}