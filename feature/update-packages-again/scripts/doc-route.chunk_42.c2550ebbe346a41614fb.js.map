{"version":3,"sources":["webpack://design.swedbankpay.com/./node_modules/classnames/index.js","webpack://design.swedbankpay.com/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedDatePickerGroup/index.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Checkbox.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Datepicker.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/FormControlText.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Radio.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Rangeslider.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Togglebox.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/index.js","webpack://design.swedbankpay.com/./src/App/components/InputGroup/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","datepicker","dg","useEffect","init","className","Datepicker","value","label","prefixType","prefixValue","fulldate","id","Checkbox","checked","disabled","attrs","type","defaultChecked","htmlFor","propTypes","PropTypes","format","time","min","max","months","mode","allowinput","required","Addon","FormControlText","text","Radio","name","Rangeslider","step","color","valueLabel","valueLabelPrefix","valueLabelPostfix","valueLabelPosition","defaultValue","ValueLabel","data-rs-value","Togglebox","aria-hidden","Feedback","icon","InputGroup","placeholder","pattern","validate","autoComplete","readOnly","validationState","selectOptions","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","inputGrpClasses","classnames","map","opt","Fragment","data-success","data-error"],"mappings":"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","file":"scripts/doc-route.chunk_42.c2550ebbe346a41614fb.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { useEffect } from \"react\";\n\nimport { Datepicker as DatepickerComponent } from \"@components/FormComponents\";\n\nconst { datepicker } = window.dg;\n\nconst CustomersDetailedDatePickerGroup = () => {\n\n    useEffect(() => {\n        datepicker.init();\n    });\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <DatepickerComponent\n                    value=\"2000-01-01\"\n                    label=\"From:\"\n                    prefixType=\"icon\"\n                    prefixValue=\"event\"\n                    fulldate\n                    id=\"init-value-datepicker-from\"\n                />\n            </div>\n            <div className=\"col-sm-6\">\n                <DatepickerComponent\n                    value=\"2020-01-01\"\n                    label=\"To:\"\n                    prefixType=\"icon\"\n                    prefixValue=\"event\"\n                    fulldate\n                    id=\"init-value-datepicker-to\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default CustomersDetailedDatePickerGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, id }) => {\n    const attrs = {\n        id,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, name }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"radio\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ name, min, max, step, color, value, disabled, valueLabel, valueLabelPrefix, valueLabelPostfix, valueLabelPosition }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    const ValueLabel = () => (\n        <output className=\"value-label\" >{\"\\n\\t\\t\"}\n            <p>{\"\\n\\t\\t\\t\"}\n                {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n            </p>{\"\\n\\t\"}\n        </output>\n    );\n\n    return (\n        <div className={`rangeslider rangeslider-${color ? color : \"brand\"} label-${valueLabelPosition ? valueLabelPosition : \"right\"}`}>{\"\\n\"}\n            <input {...attrs}/>{valueLabel ? \"\\n\" : null}\n            {valueLabel ? <ValueLabel /> : null}{valueLabel ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    color: PropTypes.oneOf([\"brand\", \"neutral\", \"default\"]),\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabel: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string,\n    valueLabelPosition: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"togglebox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Rangeslider from \"./Rangeslider\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Rangeslider,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Rangeslider, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n"],"sourceRoot":""}