{"version":3,"sources":["webpack://design.swedbankpay.com/./src/App/ComponentsDocumentation/components/Checkbox/index.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Checkbox.js"],"names":["ButtonExamples","id","label","HowTo","className","Overview","ComponentPreview","language","codeFigure","to","ContentGuidelines","DocContainer","Checkbox","checked","disabled","attrs","type","defaultChecked","htmlFor","propTypes","PropTypes"],"mappings":"sSAMMA,EAAiB,kBACnB,gBAAC,WAAD,KACI,gBAAC,IAAD,CAAmBC,GAAG,kBAAkBC,MAAM,mBAC9C,gBAAC,IAAD,CAAmBD,GAAG,kBAAkBC,MAAM,mBAC9C,gBAAC,IAAD,CAAmBD,GAAG,kBAAkBC,MAAM,qBAIhDC,EAAQ,kBACV,+BACI,0DACA,uBAAKC,UAAU,OACX,uBAAKA,UAAU,SACX,uBAAKA,UAAU,6CACX,gCACA,uBAAKA,UAAU,yCACX,uBAAKA,UAAU,aACX,yCACA,gBAAC,IAAD,CAAmBH,GAAG,qBAAqBC,MAAM,UACjD,gBAAC,IAAD,CAAmBD,GAAG,qBAAqBC,MAAM,WACjD,gBAAC,IAAD,CAAmBD,GAAG,qBAAqBC,MAAM,WAErD,+KAIZ,uBAAKE,UAAU,SACX,uBAAKA,UAAU,qCACX,mCACA,uBAAKA,UAAU,yCACX,uBAAKA,UAAU,kBACX,yCACA,gBAAC,IAAD,CAAmBH,GAAG,uBAAuBC,MAAM,2BACnD,gBAAC,IAAD,CAAmBD,GAAG,uBAAuBC,MAAM,UACnD,gBAAC,IAAD,CAAmBD,GAAG,uBAAuBC,MAAM,WAEvD,+HAQlBG,EAAW,kBACb,+BACI,sBAAIJ,GAAG,YAAP,YACA,uBAAKG,UAAU,wDACX,2BACI,2CACA,gBAACJ,EAAD,QAGR,uBAAKI,UAAU,gCACX,4CACA,qBAAGA,UAAU,OAAb,gPAEJ,gBAAC,EAAAE,iBAAD,CAAkBC,SAAS,OAAOC,YAAU,GACxC,gBAACR,EAAD,OAGJ,6DACA,sBAAII,UAAU,oBACV,+HACkG,gBAAC,KAAD,CAAMK,GAAG,2BAAT,gBADlG,qDAKJ,gBAACN,EAAD,QAIFO,EAAoB,kBACtB,+BACI,sBAAIT,GAAG,sBAAP,sBACA,sBAAIG,UAAU,oBACV,iCAAQ,0CAAR,0HACA,iCAAQ,+CAAR,qOAaZ,UARiB,kBACb,gBAAC,EAAAO,aAAD,KACI,qBAAGP,UAAU,QAAb,uJACA,gBAACC,EAAD,MACA,gBAACK,EAAD,S,sECzFFE,EAAW,SAAC,GAAqC,IAAnCX,EAAmC,EAAnCA,GAAIY,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAUZ,EAAY,EAAZA,MACjCa,EAAQ,CACVC,KAAM,WACNf,GAAIA,GAAM,KACVa,SAAUA,GAAY,KACtBG,eAAgBJ,GAAW,MAG/B,OACI,uBAAKT,UAAU,YAAY,KACvB,wBAAWW,GAAU,KACpBb,EAAQ,yBAAOgB,QAASjB,GAAKC,GAAiB,KAAMA,EAAQ,KAAO,OAKhFU,EAASO,UAAY,CACjBlB,GAAImB,WACJP,QAASO,SACTN,SAAUM,SACVlB,MAAOkB,YAGX","file":"scripts/doc-route.chunk_11.e8b5d37d561e3c91d878.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport CheckboxComponent from \"@components/FormComponents/Checkbox\";\n\nconst ButtonExamples = () => (\n    <React.Fragment>\n        <CheckboxComponent id=\"radio-example-1\" label=\"Checkbox label\" />\n        <CheckboxComponent id=\"radio-example-2\" label=\"Checkbox label\" />\n        <CheckboxComponent id=\"radio-example-3\" label=\"Checkbox label\" />\n    </React.Fragment>\n);\n\nconst HowTo = () => (\n    <section>\n        <h3>How to setup checkbox groups</h3>\n        <div className=\"row\">\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-success h-100\">\n                    <h3>Do</h3>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 pb-5\">\n                            <h4>Button size</h4>\n                            <CheckboxComponent id=\"radio-do-example-1\" label=\"Small\" />\n                            <CheckboxComponent id=\"radio-do-example-2\" label=\"Medium\" />\n                            <CheckboxComponent id=\"radio-do-example-3\" label=\"Large\" />\n                        </div>\n                        <p>Short and concise, similar length on the text is always preferred when setting up a checkbox group. Try to sort the options in a logical order.</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-error\">\n                    <h3>Don&#x27;t</h3>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 pb-5 w-50\">\n                            <h4>Button size</h4>\n                            <CheckboxComponent id=\"radio-dont-example-1\" label=\"Super duper tiny small\" />\n                            <CheckboxComponent id=\"radio-dont-example-2\" label=\"Large\" />\n                            <CheckboxComponent id=\"radio-dont-example-3\" label=\"Small\" />\n                        </div>\n                        <p>Avoid having labels longer than the rest when possible and displaying options without order.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nconst Overview = () => (\n    <section>\n        <h2 id=\"overview\">Overview</h2>\n        <div className=\"showcase-panel d-flex flex-column align-items-center\">\n            <div>\n                <h4>Group heading</h4>\n                <ButtonExamples />\n            </div>\n        </div>\n        <div className=\"p-4 border-right border-left\">\n            <h2>Checkbox group</h2>\n            <p className=\"m-0\">The default setup of the checkbox group always has a label on top which describes the checkbox group and each individual checkbox is then followed by a label which clearly describes what the options and what checking the box represents</p>\n        </div>\n        <ComponentPreview language=\"html\" codeFigure>\n            <ButtonExamples />\n        </ComponentPreview>\n\n        <h3>When to consider something else</h3>\n        <ul className=\"list list-bullet\">\n            <li>\n            When you want to present multiple choices where the user can only select one specific choice, the <Link to=\"/components/radiobutton\">radio button</Link> component should be used instead of checkboxes.\n            </li>\n        </ul>\n\n        <HowTo />\n    </section>\n);\n\nconst ContentGuidelines = () => (\n    <section>\n        <h2 id=\"content-guidelines\">Content guidelines</h2>\n        <ul className=\"list list-bullet\">\n            <li>The <b>Group heading</b> for the radio button group should be descriptive, explaining the context and what actions the user is choosing from. </li>\n            <li>The <b>radio button label</b> should be short, to the point and clearly explain the option. It is also preferred to have fewer than three words per label as longer words could extend a label to multiple rows which could disrupt the reading experience.</li>\n        </ul>\n    </section>\n);\n\nconst Checkbox = () => (\n    <DocContainer>\n        <p className=\"lead\">The checkbox component should be used when the user are presented with a list of options where one or multiple options can be selected by the user.</p>\n        <Overview />\n        <ContentGuidelines />\n    </DocContainer>\n);\n\nexport default Checkbox;\n\n/* for testing */\nexport { Overview, ContentGuidelines, HowTo };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n"],"sourceRoot":""}