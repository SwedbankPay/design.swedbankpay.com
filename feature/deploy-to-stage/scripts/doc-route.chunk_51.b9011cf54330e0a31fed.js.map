{"version":3,"sources":["webpack://design.swedbankpay.com/./node_modules/classnames/index.js","webpack://design.swedbankpay.com/./src/App/Examples/examples/login/index.js","webpack://design.swedbankpay.com/./src/App/components/Button/index.js","webpack://design.swedbankpay.com/./src/App/components/InputGroup/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","LoginContent","className","action","noValidate","required","id","type","label","prefixType","prefixValue","icon","btnType","src","DocContainer","ComponentPreview","language","showCasePanel","codeFigure","Button","name","value","href","loading","disabled","fullWidth","pullRight","input","active","size","bankId","btnClasses","classnames","attrs","defaultValue","role","tabIndex","onClick","e","preventDefault","aria-hidden","propTypes","PropTypes","isRequired","loader","Addon","color","Feedback","InputGroup","placeholder","pattern","validate","autoComplete","readOnly","validationState","selectOptions","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","inputGrpClasses","htmlFor","map","opt","Fragment","data-success","data-error"],"mappings":"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","file":"scripts/doc-route.chunk_51.b9011cf54330e0a31fed.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport { DocContainer, ComponentPreview } from \"@docutils\";\n\nimport InputGroup from \"@components/InputGroup\";\nimport ButtonComponent from \"@components/Button\";\n\nconst LoginContent = () => (\n    <div className=\"slab slab-secondary slab-elevated\">\n        <div className=\"row align-items-center\">\n            <div className=\"col-lg-5\">\n                <h2>Login</h2>\n                <form action=\"#\" noValidate>\n                    <InputGroup\n                        required\n                        id=\"validation-username\"\n                        type=\"text\"\n                        label=\"Username\"\n                        prefixType=\"icon\"\n                        prefixValue=\"account_box\"\n                    />\n                    <InputGroup\n                        required\n                        id=\"validation-password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        prefixType=\"icon\"\n                        prefixValue=\"vpn_key\"\n                    />\n                    <ButtonComponent type=\"primary\" label=\"Log in\" icon=\"lock_open\" btnType=\"submit\" />\n                </form>\n            </div>\n            <div className=\"col-lg-7 d-none d-lg-block\">\n                <img src=\"https://picsum.photos/1000/600?image=744\" className=\"w-100 h-100\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst Login = () => (\n    <DocContainer>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <LoginContent />\n        </ComponentPreview>\n    </DocContainer>\n);\n\nexport default Login;\n\nexport { LoginContent };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs} onClick={e => e.preventDefault()}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n"],"sourceRoot":""}