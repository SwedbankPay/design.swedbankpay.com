{"version":3,"sources":["webpack:///./src/App/Identity/identity/Page-layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","FullWidth","CenteredContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_docutils__WEBPACK_IMPORTED_MODULE_2__","_components_CodeTags__WEBPACK_IMPORTED_MODULE_3__","a","createElement","Fragment","id","type","code","to","language","codeFigure","className","PageLayout","docToc"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,oCAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,IAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,IAKMI,EAAY,kBACdG,EAAAK,EAAAC,cAAAN,EAAAK,EAAAE,SAAA,KACIP,EAAAK,EAAAC,cAAA,MAAIE,GAAG,cAAP,mBACAR,EAAAK,EAAAC,cAAA,yEACiEN,EAAAK,EAAAC,cAACF,EAAA,QAAD,CAAUK,KAAK,YAAYC,KAAK,kBADjG,WAC2HV,EAAAK,EAAAC,cAACF,EAAA,QAAD,CAAUK,KAAK,YAAYC,KAAK,kBAD3J,yEAEgCV,EAAAK,EAAAC,cAACF,EAAA,QAAD,CAAUK,KAAK,YAAYC,KAAK,iBAFhE,8DAE4IV,EAAAK,EAAAC,cAACJ,EAAA,KAAD,CAAMS,GAAG,sBAAT,WAF5I,+BAIAX,EAAAK,EAAAC,cAACH,EAAA,iBAAD,CAAkBS,SAAS,OAAOC,YAAU,GACxCb,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,mBACXd,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,OACXd,EAAAK,EAAAC,cAAA,sCAIJN,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,OACXd,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,YAAf,wBAGAd,EAAAK,EAAAC,cAAA,QAAMQ,UAAU,gCAAhB,+BASdhB,EAAkB,kBACpBE,EAAAK,EAAAC,cAAAN,EAAAK,EAAAE,SAAA,KACIP,EAAAK,EAAAC,cAAA,MAAIE,GAAG,oBAAP,oBACAR,EAAAK,EAAAC,cAAA,sCAC8BN,EAAAK,EAAAC,cAACF,EAAA,QAAD,CAAUK,KAAK,YAAYC,KAAK,eAD9D,uGAEgBV,EAAAK,EAAAC,cAACJ,EAAA,KAAD,CAAMS,GAAG,cAAT,QAFhB,mDAEiGX,EAAAK,EAAAC,cAACJ,EAAA,KAAD,CAAMS,GAAG,sBAAT,WAFjG,6GAG0GX,EAAAK,EAAAC,cAACF,EAAA,QAAD,CAAUK,KAAK,YAAYC,KAAK,SAH1I,QAGwJV,EAAAK,EAAAC,cAACF,EAAA,QAAD,CAAUK,KAAK,YAAYC,KAAK,qBAHxL,KAKAV,EAAAK,EAAAC,cAACH,EAAA,iBAAD,CAAkBS,SAAS,OAAOC,YAAU,GACxCb,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,mBACXd,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,OACXd,EAAAK,EAAAC,cAAA,uCAKRN,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,aACXd,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,OACXd,EAAAK,EAAAC,cAAA,OAAKQ,UAAU,YAAf,wBAGAd,EAAAK,EAAAC,cAAA,QAAMQ,UAAU,6CAAhB,+BAoBLC,UAXI,kBACff,EAAAK,EAAAC,cAACH,EAAA,aAAD,CAAca,QAAM,GAChBhB,EAAAK,EAAAC,cAAA,KAAGQ,UAAU,QAAb,qBACsBd,EAAAK,EAAAC,cAACF,EAAA,QAAD,CAAUK,KAAK,YAAYC,KAAK,kBADtD,wHAEQV,EAAAK,EAAAC,cAACF,EAAA,QAAD,CAAUK,KAAK,YAAYC,KAAK,kBAFxC,mBAEyEV,EAAAK,EAAAC,cAACJ,EAAA,KAAD,CAAMS,GAAG,sBAAT,WAFzE,oDAIAX,EAAAK,EAAAC,cAACT,EAAD,MACAG,EAAAK,EAAAC,cAACR,EAAD","file":"scripts/doc-route.chunk_71.js?6405c3468eca2467d616","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst FullWidth = () => (\n    <>\n        <h2 id=\"full-width\">Full width page</h2>\n        <p>\n            To use a full width layout use a combination of grid and the <CodeTags type=\"secondary\" code=\".main-content\" /> class. <CodeTags type=\"secondary\" code=\".main-content\" /> has a white background and some padding.\n            For a full width layout use <CodeTags type=\"secondary\" code=\".border-left\" /> to clearly separate the sidebar and the main content. See <Link to=\"/utilities/borders\">borders</Link> docs for more information.\n        </p>\n        <ComponentPreview language=\"html\" codeFigure>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <header>\n                        Topbar component...\n                    </header>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-auto\">\n                        Sidebar component...\n                    </div>\n                    <main className=\"col main-content border-left\">\n                        Main content things...\n                    </main>\n                </div>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst CenteredContent = () => (\n    <>\n        <h2 id=\"centered-content\">Centered content</h2>\n        <p>\n            For a centered layout use <CodeTags type=\"secondary\" code=\".container\"/>, it has built in breakpoints and will switch to full-width if the screen size is small\n            enough (see <Link to=\"/core/grid\">grid</Link>). When the content is centered it will require <Link to=\"/utilities/borders\">borders</Link> on\n            the right and left side. To make your topbar fill the page horizontally you will have to wrap it in a <CodeTags type=\"secondary\" code=\".row\" /> and <CodeTags type=\"secondary\" code=\".container-fluid\" />.\n        </p>\n        <ComponentPreview language=\"html\" codeFigure>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <header>\n                        Topbar component...\n                    </header>\n                </div>\n            </div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-auto\">\n                        Sidebar component...\n                    </div>\n                    <main className=\"col main-content border-left border-right\">\n                        Main content things...\n                    </main>\n                </div>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst PageLayout = () => (\n    <DocContainer docToc >\n        <p className=\"lead\">\n            Use grid with our <CodeTags type=\"secondary\" code=\".main-content\" /> class to use a variety of page layouts. As we have a mobile first approach we only use 1rem as base padding for\n            our <CodeTags type=\"secondary\" code=\".main-content\"/> class. Use the <Link to=\"/utilities/spacing\">spacing</Link> classes to customize padding to fit your needs.\n        </p>\n        <FullWidth />\n        <CenteredContent />\n    </DocContainer>\n);\n\nexport default PageLayout;\n\n/* For testing */\nexport { FullWidth, CenteredContent };\n"],"sourceRoot":""}