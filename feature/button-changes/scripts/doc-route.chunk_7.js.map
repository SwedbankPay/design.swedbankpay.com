{"version":3,"sources":["webpack:///./src/App/components/Button/index.js","webpack:///./src/App/ComponentsDocumentation/components/Buttons/constants.js","webpack:///./src/App/ComponentsDocumentation/components/Buttons/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/classnames/index.js"],"names":["Button","_ref","label","id","name","value","href","icon","loading","type","disabled","btnType","fullWidth","pullRight","input","outline","active","size","btnClasses","classnames","concat","attrs","defaultValue","role","aria-pressed","aria-disabled","tabIndex","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_extends","className","aria-hidden","Fragment","propTypes","PropTypes","oneOf","isRequired","string","bool","loader","overviewButtons","tabsId","elements","tab","component","react_default","options","checkbox","radio","title","values","description","destructiveButtons","__webpack_require__","d","__webpack_exports__","Buttons_Overview","Buttons_DestructiveButton","Buttons_DeveloperDocumentation","Overview","docutils","language","showCasePanel","showCasePanelAdvanced","codeFigure","DestructiveButton","DeveloperDocumentation","CodeTags","code","removeOuterTag","Alert","Buttons","docToc","__webpack_amd_options__","module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","_typeof","push","Array","isArray","inner","apply","key","call","join","default","define","undefined","__WEBPACK_AMD_DEFINE_RESULT__","window"],"mappings":"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","file":"scripts/doc-route.chunk_7.js?4417e4eaab3343e85438","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, outline, active, size }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        outline ? \"btn-outline\" : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\") ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"executive\", \"guiding\", \"link\", \"destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    outline: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"])\n};\n\nexport default Button;\n","import React from \"react\";\nimport ButtonComponent from \"@components/Button\";\n\nexport const overviewButtons = {\n    id: \"overviewButtons\",\n    tabsId: \"overviewButtonsTabs\",\n    elements: [\n        {\n            tab: \"Primary\",\n            component: <ButtonComponent type=\"executive\" label=\"Primary\" />,\n            options: {\n                checkbox: [\n                    {\n                        id: \"icon_check\",\n                        name: \"Icon\",\n                        value: {\n                            icon: \"cloud\"\n                        }\n                    },\n                    {\n                        id: \"loader_check\",\n                        name: \"Loader\",\n                        value: {\n                            loader: true,\n                            loading: true\n                        }\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"size_radio\",\n                        title: \"Sizes\",\n                        values: [\n                            {\n                                name: \"Large\",\n                                value: {\n                                    size: \"lg\"\n                                }\n                            },\n                            {\n                                name: \"Small\",\n                                value: {\n                                    size: \"sm\"\n                                }\n                            },\n                            {\n                                name: \"Extra small\",\n                                value: {\n                                    size: \"xs\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Primary button\",\n            description: \"Use a primary button as the main call to action on a page. Avoid using multiple default buttons on a single page. Having more than one main call to action reduces their impact, and makes it harder for users to know what to do next.\"\n        },\n        {\n            tab: \"Secondary\",\n            component: <ButtonComponent outline type=\"executive\" label=\"Secondary\" />,\n            options: {\n                checkbox: [\n                    {\n                        id: \"icon_check\",\n                        name: \"Icon\",\n                        value: {\n                            icon: \"cloud\"\n                        }\n                    },\n                    {\n                        id: \"loader_check\",\n                        name: \"Loader\",\n                        value: {\n                            loader: true,\n                            loading: true\n                        }\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"size_radio\",\n                        title: \"Sizes\",\n                        values: [\n                            {\n                                name: \"Large\",\n                                value: {\n                                    size: \"lg\"\n                                }\n                            },\n                            {\n                                name: \"Small\",\n                                value: {\n                                    size: \"sm\"\n                                }\n                            },\n                            {\n                                name: \"Extra small\",\n                                value: {\n                                    size: \"xs\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Secondary button\",\n            description: \"Use a secondary button for secondary call to action on a page. Pages with too many calls to action make it hard for users to know what to do next. Before adding lots of secondary buttons, try to simplify the page or break the content down across multiple pages.\"\n        },\n        {\n            tab: \"Link button\",\n            component: <ButtonComponent type=\"link\" label=\"Link\" />,\n            title: \"Link button\",\n            options: {\n                checkbox: [\n                    {\n                        id: \"icon_check\",\n                        name: \"Icon\",\n                        value: {\n                            icon: \"cloud\"\n                        }\n                    }\n                ]\n            },\n            description: \"Should only be used in combination with a Primary or Secondary button. Use link for stand alone links see Links. Use for less important or less commonly used actions since they’re less prominent. Text buttons are often embedded in contained components like cards and dialogs. Since text buttons don’t have a container, they don’t distract from nearby content.\"\n        }\n    ]\n};\n\nexport const destructiveButtons = {\n    id: \"destructiveButtons\",\n    tabsId: \"destructiveButtonsTabs\",\n    elements: [\n        {\n            tab: \"Guiding\",\n            component: <ButtonComponent outline type=\"destructive\" label=\"Type something\" />,\n            options: {\n                checkbox: [\n                    {\n                        id: \"icon_check_destructive\",\n                        name: \"Icon\",\n                        value: {\n                            icon: \"cloud\"\n                        }\n                    },\n                    {\n                        id: \"loader_check_destructive\",\n                        name: \"Loader\",\n                        value: {\n                            loader: true,\n                            loading: true\n                        }\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"size_radio_destructive\",\n                        title: \"Sizes\",\n                        values: [\n                            {\n                                name: \"Large\",\n                                value: {\n                                    size: \"lg\"\n                                }\n                            },\n                            {\n                                name: \"Small\",\n                                value: {\n                                    size: \"sm\"\n                                }\n                            },\n                            {\n                                name: \"Extra small\",\n                                value: {\n                                    size: \"xs\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Destructive button\",\n            description: \"Only use warning buttons for actions with serious destructive consequences that cannot be easily undone by a user. For example, permanently deleting an account. When letting users carry out an action like this, it’s a good idea to include an additional step which asks them to confirm it.\"\n        },\n        {\n            tab: \"Text/Link\",\n            component: <ButtonComponent type=\"link-destructive\" label=\"Type something\" />,\n            options: {\n                checkbox: [\n                    {\n                        id: \"icon_check_destructive\",\n                        name: \"Icon\",\n                        value: {\n                            icon: \"cloud\"\n                        }\n                    }\n                ]\n            },\n            title: \"Destructive button\",\n            description: \"Only use warning buttons for actions with serious destructive consequences that cannot be easily undone by a user. For example, permanently deleting an account. When letting users carry out an action like this, it’s a good idea to include an additional step which asks them to confirm it.\"\n        },\n        {\n            tab: \"Executive\",\n            component: <ButtonComponent type=\"destructive\" label=\"Type something\" />,\n            title: \"Executive destructive button\",\n            options: {\n                checkbox: [\n                    {\n                        id: \"icon_check_destructive\",\n                        name: \"Icon\",\n                        value: {\n                            icon: \"close\"\n                        }\n                    },\n                    {\n                        id: \"loader_check_destructive\",\n                        name: \"Loader\",\n                        value: {\n                            loader: true,\n                            loading: true\n                        }\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"size_radio_destructive\",\n                        title: \"Sizes\",\n                        values: [\n                            {\n                                name: \"Large\",\n                                value: {\n                                    size: \"lg\"\n                                }\n                            },\n                            {\n                                name: \"Small\",\n                                value: {\n                                    size: \"sm\"\n                                }\n                            },\n                            {\n                                name: \"Extra small\",\n                                value: {\n                                    size: \"xs\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            description: \"Use these only in confirming a destructive action. For example, use this button in a dialog confirming a deleting an account. Executive Destructive button takes a lot of attention from the user and should there be used with restraint.\"\n        }\n    ]\n};\n","import React from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport ButtonComponent from \"@components/Button\";\nimport Alert from \"@components/Alert\";\nimport CodeTags from \"@components/CodeTags\";\n\nimport { overviewButtons, destructiveButtons } from \"./constants\";\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>\n            The DesignGuide includes a few predefined button styles, each serving its own semantic purpose.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={overviewButtons} codeFigure />\n    </>\n);\n\nconst DestructiveButton = () => (\n    <>\n        <h2 id=\"destructive-button\">Destructive button</h2>\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={destructiveButtons} codeFigure />\n    </>\n);\n\nconst DeveloperDocumentation = () => (\n    <>\n        <h2 id=\"developer-documentation\">Developer documentation</h2>\n        <h3>Active state</h3>\n        <p>Buttons will appear pressed (with inset shadow) when active.\n            <b>There’s no need to add a class to <CodeTags type=\"primary\" code={\"<button>\"} />s as they use a pseudo-class.</b> However,\n            you can still force the same active appearance with <CodeTags type=\"secondary\" code=\".active\" /> (and\n            include the <CodeTags type=\"secondary\" code={\"aria-pressed=\\\"true\\\"\"} /> attribute) should you need to replicate the state programmatically.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent href=\"#\" active type=\"executive\" label=\"Executive\" />{\"\\n\"}\n                <ButtonComponent href=\"#\" active type=\"guiding\" label=\"Guiding\" />{\"\\n\"}\n                <ButtonComponent active type=\"destructive\" label=\"Destructive\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n\n        <h3>Disabled state</h3>\n        <p>Make buttons look inactive by adding the <CodeTags type=\"secondary\" code=\"disabled\" /> boolean attribute to any <CodeTags type=\"primary\" code={\"<button>\"} /> element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent disabled type=\"executive\" label=\"Executive\" />{\"\\n\"}\n                <ButtonComponent disabled type=\"guiding\" label=\"Guiding\" />{\"\\n\"}\n                <ButtonComponent disabled type=\"destructive\" label=\"Destructive\" />{\"\\n\"}\n                <ButtonComponent disabled type=\"link\" label=\"Link\" />{\"\\n\"}\n                <ButtonComponent disabled type=\"link-destructive\" label=\"Link destructive\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <p>Disabled buttons using the <CodeTags type=\"primary\" code={\"<a>\"} /> element behave a bit different:</p>\n        <ul>\n            <li><CodeTags type=\"primary\" code={\"<a>\"} />s do not support the <CodeTags type=\"secondary\" code=\"disabled\" /> attribute, so you must add the <CodeTags type=\"secondary\" code=\".disabled\" /> class to make it visually appear disabled.</li>\n            <li>Some future-friendly styles are included to disable all <CodeTags type=\"secondary\" code=\"pointer-events\" /> on anchor buttons. In browsers which support that property, you won’t see the disabled cursor at all.</li>\n            <li>Disabled buttons should include the <CodeTags type=\"secondary\" code={\"aria-disabled=\\\"true\\\"\"} /> attribute to indicate the state of the element to assistive technologies.</li>\n        </ul>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent href=\"#\" disabled type=\"executive\" label=\"Executive\" />{\"\\n\"}\n                <ButtonComponent href=\"#\" disabled type=\"guiding\" label=\"Guiding\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <Alert type=\"warning\">\n            <h5>Link functionality caveat</h5>\n            <p>The <CodeTags type=\"secondary\" code=\".disabled\" /> class uses <CodeTags type=\"secondary\" code=\"pointer-events: none\" /> to try to disable the link functionality of <CodeTags type=\"primary\" code={\"<a>\"} />s, but that CSS property is not yet standardized. In addition, even in browsers that do support <CodeTags type=\"secondary\" code=\"pointer-events: none\" />, keyboard navigation remains unaffected, meaning that sighted keyboard users and users of assistive technologies will still be able to activate these links. So to be safe, add a <CodeTags type=\"secondary\" code={\"tabindex=\\\"-1\\\"\"} /> attribute on these links (to prevent them from receiving keyboard focus) and use custom JavaScript to disable their functionality.</p>\n        </Alert>\n\n        <h3>Usage with other tags</h3>\n        <p>The <CodeTags type=\"secondary\" code=\".btn\" /> classes are designed to be used with the <CodeTags type=\"primary\" code={\"<button>\"} /> element.\n        However, you can also use these classes on <CodeTags type=\"primary\" code={\"<a>\"} /> or <CodeTags type=\"primary\" code={\"<input>\"} /> elements\n        (though some browsers may apply a slightly different rendering).</p>\n        <p>When using button classes on <CodeTags type=\"primary\" code={\"<a>\"} /> elements that are used to trigger in-page\n        functionality (like collapsing content), rather than linking to new pages or sections within the current page, these links should be given\n        a <CodeTags type=\"secondary\" code={\"role=\\\"button\\\"\"} /> to appropriately convey their purpose to assistive technologies such as screen readers.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent type=\"executive\" label=\"Anchor\" href=\"#\" />{\"\\n\"}\n                <ButtonComponent type=\"executive\" label=\"Button\" />{\"\\n\"}\n                <ButtonComponent type=\"executive\" input value=\"Input\" btnType=\"button\" />{\"\\n\"}\n                <ButtonComponent type=\"executive\" input value=\"Submit\" btnType=\"submit\" />{\"\\n\"}\n                <ButtonComponent type=\"executive\" input value=\"Reset\" btnType=\"reset\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n\n        <h3>Using buttons together</h3>\n        <p>When you use buttons next to each other you have to wrap them in a <CodeTags type=\"secondary\" code=\".button-group\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent type=\"executive\" label=\"Activate\" />{\"\\n\"}\n                <ButtonComponent type=\"guiding\" label=\"Disable\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst Buttons = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">Use our button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\n        <Overview />\n        <DestructiveButton />\n        <DeveloperDocumentation />\n    </DocContainer>\n);\n\nexport default Buttons;\n\n/* for testing */\nexport { Overview, DestructiveButton, DeveloperDocumentation };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}