{"version":3,"sources":["webpack:///./src/App/docutils/ComponentPreview/index.js"],"names":["ComponentPreview","_ref","children","language","removeOuterTag","hideValue","removeList","showCasePanel","showCasePanelAdvanced","showCasePanelSm","codeFigure","dangerousHTML","negative","_removeOuterTag","element","div","document","createElement","innerHTML","renderToStaticMarkup","firstElementChild","firstChild","nodeValue","_removeList","listElements","querySelectorAll","htmlString","forEach","el","concat","CodeFigure","_ref2","code","val","v","setDangerousHtml","map","child","_typeof","jsbeautifier","html_beautify","replace","css","defaultProps","style","react__WEBPACK_IMPORTED_MODULE_0___default","a","className","toUpperCase","split","line","i","Fragment","key","tabs","window","dg","ShowCasePanelAdvanced","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","activeTab","elements","optionsOpen","activeOptions","_inherits","Component","value","init","tabsId","e","_this2","showcasePanel","getElementById","id","preventDefault","setState","prevState","_objectSpread","checkbox","checked","dropdown","radio","querySelector","_this3","filter","option","length","_toConsumableArray","_this4","tab","href","onClick","setActiveTab","cloneElement","component","reduce","acc","currentOption","title","description","options","onChange","setActiveOptions","type","htmlFor","name","values","target","j","defaultChecked","propTypes","PropTypes","oneOf","isRequired","bool","object"],"mappings":"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","file":"scripts/doc-route.chunk_114.js?9bfe7fe1df44aca00bef","sourcesContent":["import React, { Component, cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport jsbeautifier from \"js-beautify\";\nimport { defaultProps } from \"prism-react-renderer\";\n\n// NOTE: dangerousHTML prop is used when wanting to show html in the codefigure without encoding.\n\nconst ComponentPreview = ({ children, language, removeOuterTag, hideValue, removeList, showCasePanel, showCasePanelAdvanced, showCasePanelSm, codeFigure, dangerousHTML, negative }) => {\n    const _removeOuterTag = element => {\n        const div = document.createElement(\"div\");\n\n        div.innerHTML = renderToStaticMarkup(element);\n\n        if (div.firstElementChild) {\n            return div.firstElementChild.innerHTML;\n        } else if (div.firstChild) {\n            return div.firstChild.nodeValue;\n        }\n\n        return \"Check ComponentPreview _removeOuterTag!\";\n    };\n\n    const _removeList = element => {\n        const div = document.createElement(\"div\");\n\n        div.innerHTML = renderToStaticMarkup(element);\n\n        const listElements = div.querySelectorAll(\"li\");\n        let htmlString = \"\";\n\n        listElements.forEach(el => {\n            htmlString += `${el.innerHTML} \\n`;\n        });\n\n        return htmlString;\n    };\n\n    const _removeEmpty = val => {\n        val = val.replace(/=\"\"/g, \"\");\n        val = val.replace(/ class>/g, \">\");\n        val = val.replace(/ class /g, \" \");\n        val = val.replace(/value /g, \"\");\n\n        return val;\n    };\n\n    const setDangerousHtml = val => {\n        let code = \"\";\n\n        if (typeof val.forEach === \"function\") {\n            val.forEach(v => code += `${v}\\n`);\n        } else {\n            code = val;\n        }\n\n        return code;\n    };\n\n    const CodeFigure = ({ children }) => {\n        let code = \"\";\n\n        if (language === \"html\" && dangerousHTML) {\n            code = setDangerousHtml(children);\n        } else if (language === \"html\" && children && typeof children.map === \"function\") {\n            children.map(child => {\n                if (removeOuterTag) {\n                    code += _removeOuterTag(child);\n                } else if (removeList) {\n                    code += _removeList(child);\n                } else {\n                    code += renderToStaticMarkup(child);\n                }\n            });\n\n        } else if (language === \"html\") {\n            if (removeOuterTag) {\n                code += _removeOuterTag(children);\n            } else if (removeList) {\n                code += _removeList(children);\n            } else {\n                code += renderToStaticMarkup(children);\n            }\n        } else {\n            switch (typeof children) {\n                case \"string\":\n                    code = children;\n\n                    break;\n                case \"object\":\n                    children.forEach(child => code += child);\n\n                    break;\n                default:\n                    console.warn(\"CodeFigure: children needs attention!\");\n            }\n        }\n\n        switch (language) {\n            case \"html\":\n                code = jsbeautifier.html_beautify(code);\n                code = _removeEmpty(code);\n\n                if (hideValue) {\n                    code = code.replace(/ value=\"(.*)\"/g, \"\");\n                }\n\n                break;\n            case \"css\":\n                code = jsbeautifier.css(code);\n\n                break;\n            case \"javascript\":\n                // This is not needed, and for some reason crashes after a prod build [EH]\n                // code = jsbeautifier(code);\n                break;\n            default:\n                return \"update switchcase!\";\n        }\n\n        defaultProps.style = \"\";\n\n        return (\n            <figure>\n                <div className=\"code-view\">\n                    <header className=\"code-view-header\">\n                        {language.toUpperCase()}\n                    </header>\n                    <table className=\"code-view-table\">\n                        <tbody>\n                            <tr>\n                                <td className=\"code-view-numbers\">\n                                    <pre>\n                                        {(code).split(\"\\n\").map((line, i) => <React.Fragment key={i}>{i + 1}{\"\\n\"}</React.Fragment>)}\n                                    </pre>\n                                </td>\n                                <td className=\"code-view-code\">\n                                    <pre>\n                                        {(code).split(\"\\n\").map((line, i) => <React.Fragment key={i}>{line}{\"\\n\"}</React.Fragment>)}\n                                    </pre>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </figure>\n        );\n    };\n\n    const ShowCasePanel = () => (\n        <div className={`showcase-panel${showCasePanelSm ? \" showcasepanel-sm\" : \"\"}${negative ? \" showcase-panel-negative\" : \"\"}`}>\n            {children}\n        </div>\n    );\n\n    const { tabs } = window.dg;\n\n    class ShowCasePanelAdvanced extends Component {\n        constructor (props) {\n            super(props);\n            this.state = {\n                activeTab: this.props.showCasePanelAdvanced.elements[0],\n                optionsOpen: false,\n                activeOptions: []\n            };\n        }\n\n        componentDidMount () {\n            tabs.init(this.props.showCasePanelAdvanced.tabsId);\n        }\n\n        setActiveTab (e, i) {\n            const showcasePanel = document.getElementById(this.props.showCasePanelAdvanced.id);\n\n            e.preventDefault();\n\n            this.setState(prevState => ({ ...prevState,\n                activeTab: this.props.showCasePanelAdvanced.elements[i],\n                activeOptions: [] }));\n\n            showcasePanel.querySelectorAll(\"input[type=checkbox]\").forEach(checkbox => checkbox.checked = false);\n            showcasePanel.querySelectorAll(\"select[id]\").forEach(dropdown => dropdown.value = 0);\n            showcasePanel.querySelectorAll(\".radio\").forEach(radio => radio.querySelector(\"input\").checked = (radio.querySelector(\"input\").value === \"0\"));\n\n        }\n\n        setActiveOptions (id, value, checkbox) {\n            if (checkbox) {\n                if (this.state.activeOptions.filter(option => id === option.id).length > 0) {\n                    this.setState(prevState => ({ ...prevState,\n                        activeOptions: this.state.activeOptions.filter(option => id !== option.id) }));\n                } else {\n                    this.setState(prevState => ({ ...prevState,\n                        activeOptions: [...this.state.activeOptions,\n                            {\n                                id,\n                                value\n                            }\n                        ] }));\n                }\n            } else {\n                this.setState(prevState => ({ ...prevState,\n                    activeOptions: [...this.state.activeOptions,\n                        {\n                            id,\n                            value\n                        }\n                    ] }));\n            }\n        }\n\n        render () {\n            return (\n                <>\n                    <div id={this.props.showCasePanelAdvanced.id} className={`showcase-panel showcase-panel-advanced${this.state.optionsOpen ? \" options-active\" : \"\"}`}>\n                        <div id={this.props.showCasePanelAdvanced.tabsId} className=\"tabs tabs-scroll\">\n                            <ul id={`${this.props.showCasePanelAdvanced.tabsId}-ul`}>\n                                {this.props.showCasePanelAdvanced.elements.map((element, i) => <li key={i} className={this.state.activeTab.tab === element.tab ? \"active\" : null}>\n                                    <a href=\"#\" onClick={e => this.setActiveTab(e, i)}>{element.tab}</a>\n                                </li>\n                                )}\n                            </ul>\n                            <div className={`options-open${this.state.optionsOpen ? \" hidden\" : \"\"}`}>\n                                <i className=\"material-icons\" onClick={() => this.setState({ optionsOpen: true })}>menu_open</i>\n                            </div>\n                        </div>\n                        <div className=\"d-flex\">\n                            <div className=\"flex-column flex-fill\">\n                                <div className=\"component-preview\">\n                                    {cloneElement(this.state.activeTab.component,\n                                        this.state.activeOptions.reduce((acc, currentOption) => ({\n                                            ...acc,\n                                            ...currentOption.value\n                                        }), {})\n                                    )}\n                                </div>\n                                <div className=\"component-description\">\n                                    <h3>{this.state.activeTab.title}</h3>\n                                    {this.state.activeTab.description}\n                                </div>\n                            </div>\n                            {<div className={`options${this.state.optionsOpen ? \" active\" : \"\"}`}>\n                                <div className=\"options-header\">\n                                    Options\n                                    <i className=\"material-icons options-close\" onClick={() => this.setState({ optionsOpen: false })}>close</i>\n                                </div>\n                                {this.state.activeTab.options && <div className=\"options-body\">\n                                    {this.state.activeTab.options.checkbox &&\n\n                                        <div className=\"mb-4\">\n                                            {this.state.activeTab.options.checkbox.map((checkbox, i) => (\n                                                <div key={i} className=\"checkbox\" onChange={() => this.setActiveOptions(checkbox.id, checkbox.value, true)}>\n                                                    <input type=\"checkbox\" id={checkbox.id} />\n                                                    <label htmlFor={checkbox.id}>{checkbox.name}</label>\n                                                </div>\n                                            ))}\n                                        </div>\n\n                                    }\n                                    {this.state.activeTab.options.dropdown && this.state.activeTab.options.dropdown.map((dropdown, i) => (\n                                        <div key={i} className=\"mb-4\">\n                                            <h4>{dropdown.title}</h4>\n                                            <select id={dropdown.id} className=\"form-control\" onChange={e => this.setActiveOptions(\n                                                dropdown.id,\n                                                dropdown.values[e.target.value].value\n                                            )}>\n                                                {dropdown.values.map((val, j) => <option key={j} value={j}>{val.name}</option>)}\n                                            </select>\n                                        </div>\n                                    ))}\n                                    {this.state.activeTab.options.radio && this.state.activeTab.options.radio.map((radio, i) => (\n                                        <div key={i}>\n                                            <h4>{radio.title}</h4>\n                                            {radio.values.map((val, j) => (\n                                                <div key={j} className=\"radio\" onChange={e => this.setActiveOptions(\n                                                    radio.id,\n                                                    radio.values[e.target.value].value\n                                                )}>\n                                                    <input\n                                                        type=\"radio\"\n                                                        id={radio.id + val.name.replace(/\\s/g, \"\")}\n                                                        name={radio.id + radio.title.replace(/\\s/g, \"\")}\n                                                        value={j}\n                                                        defaultChecked={j === 0}\n                                                    />\n                                                    <label htmlFor={radio.id + val.name.replace(/\\s/g, \"\")}>{val.name}</label>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    ))}\n                                </div>}\n                            </div>}\n                        </div>\n                    </div>\n                    <CodeFigure >\n                        {cloneElement(this.state.activeTab.component,\n                            this.state.activeOptions.reduce((acc, currentOption) => ({\n                                ...acc,\n                                ...currentOption.value\n                            }), {})\n                        )}\n                    </CodeFigure>\n                </>\n            );\n\n        }\n    }\n\n    return (\n        <>\n            {showCasePanel ? (showCasePanelAdvanced ? <ShowCasePanelAdvanced showCasePanelAdvanced={showCasePanelAdvanced} /> : <ShowCasePanel />) : null}\n            {codeFigure && !showCasePanelAdvanced ? <CodeFigure>{children}</CodeFigure> : null}\n        </>\n    );\n};\n\nComponentPreview.propTypes = {\n    language: PropTypes.oneOf([\"html\", \"javascript\", \"css\"]).isRequired,\n    removeOuterTag: PropTypes.bool,\n    hideValue: PropTypes.bool,\n    removeList: PropTypes.bool,\n    showCasePanel: PropTypes.bool,\n    showCasePanelSm: PropTypes.bool,\n    showCasePanelAdvanced: PropTypes.object,\n    codeFigure: PropTypes.bool,\n    dangerousHTML: PropTypes.bool,\n    negative: PropTypes.bool\n};\n\nexport default ComponentPreview;\n"],"sourceRoot":""}