{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Datepickers/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Checkbox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Radio.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Togglebox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Datepicker.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/FormControlText.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/index.js","webpack://@swedbankpay/design-guide/./src/App/components/InputGroup/index.js","webpack://@swedbankpay/design-guide/./src/App/docutils/NpmInformation/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","AboutDatepickers","id","SimpleDatepicker","type","code","ComponentPreview","language","showCasePanel","codeFigure","Datepicker","label","prefixType","prefixValue","AllowInput","allowinput","InitialValue","value","HumanReadable","fulldate","CustomFormat","format","IncludeTime","time","ShowingMultipleMonths","months","ValidDates","min","max","DateRange","mode","MultipleDates","icon","text","to","Options","className","JavascriptMethods","JavascriptDocs","componentName","open","close","Datepickers","datepicker","DocContainer","docToc","Component","Checkbox","checked","name","disabled","groupTitle","errorMessage","tooltip","optional","required","group","options","attrs","defaultChecked","map","htmlFor","propTypes","PropTypes","require","Radio","Togglebox","labelTop","placeholder","Addon","FormControlText","color","Feedback","InputGroup","pattern","validate","defaultValue","autoComplete","readOnly","validationState","selectOptions","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","successMessage","inputGrpClasses","classnames","selectAttrs","opt","Fragment","hidden","NpmInformation","noInit","dangerousHTML"],"mappings":";2XAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,EAAU,EAAOD,GAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,GAC+C,WAAtB,EAAOqB,SAA2BA,YAEtE,kBACL,OAAOrB,GADF,QAAe,OAAf,aAINsB,OAAOtB,WAAaA,EAhDrB,I,+3DCID,IAAMuB,EAAmB,kBACrB,gCACI,sBAAIC,GAAG,qBAAP,SACA,ueAQFC,EAAmB,kBACrB,gCACI,sBAAID,GAAG,qBAAP,qBACA,qFAC6D,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAK,oBAD7F,iCAC+I,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,gBAD/K,uDAIA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIC,MAAM,OACNC,WAAW,OACXC,YAAY,QACZX,GAAG,yBAMbY,EAAa,kBACf,gCACI,sBAAIZ,GAAG,eAAP,eACA,sFAC8D,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAK,+BAD9F,kFAE4E,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,YAF5G,yCAIA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIC,MAAM,OACNC,WAAW,OACXC,YAAY,QACZX,GAAG,oBACHa,YAAU,OAMpBC,EAAe,kBACjB,gCACI,sBAAId,GAAG,iBAAP,iBACA,wFAA+D,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAM,wCAAhG,KACA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIO,MAAM,aACNN,MAAM,OACNC,WAAW,OACXC,YAAY,QACZX,GAAG,6BAMbgB,EAAgB,kBAClB,gCACI,sBAAIhB,GAAG,kBAAP,uBACA,6FACqE,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAM,qCAEtG,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIO,MAAM,aACNN,MAAM,OACNC,WAAW,OACXC,YAAY,QACZM,UAAQ,EACRjB,GAAG,6BAMbkB,EAAe,kBACjB,gCACI,sBAAIlB,GAAG,iBAAP,iBACA,2DACmC,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAM,+DADpE,8DAEuD,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,YAFvF,+DAIA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIC,MAAM,kBACNM,MAAM,aACNI,OAAO,KACPT,WAAW,OACXC,YAAY,QACZX,GAAG,kBAEP,gBAAC,EAAAQ,WAAD,CACIC,MAAM,gBACNM,MAAM,aACNI,OAAO,KACPT,WAAW,OACXC,YAAY,QACZX,GAAG,kBAEP,gBAAC,EAAAQ,WAAD,CACIC,MAAM,eACNM,MAAM,aACNI,OAAO,KACPT,WAAW,OACXC,YAAY,QACZX,GAAG,kBAEP,gBAAC,EAAAQ,WAAD,CACIC,MAAM,gBACNM,MAAM,aACNI,OAAO,KACPT,WAAW,OACXC,YAAY,QACZX,GAAG,kBAEP,gBAAC,EAAAQ,WAAD,CACIC,MAAM,gBACNM,MAAM,aACNI,OAAO,KACPT,WAAW,OACXC,YAAY,QACZX,GAAG,kBAEP,gBAAC,EAAAQ,WAAD,CACIC,MAAM,qBACNM,MAAM,aACNI,OAAO,UACPT,WAAW,OACXC,YAAY,QACZX,GAAG,0BAMboB,EAAc,kBAChB,gCACI,sBAAIpB,GAAG,gBAAP,gBACA,+EACuD,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAM,iCADxF,kFAE8D,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,0BAF9F,eAIA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIa,MAAI,EACJF,OAAO,KACPV,MAAM,OACNC,WAAW,OACXC,YAAY,QACZX,GAAG,+BAMbsB,EAAwB,kBAC1B,gCACI,sBAAItB,GAAG,2BAAP,2BACA,0GAAiF,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAM,sCAAlH,KACA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIe,OAAO,IACPd,MAAM,OACNC,WAAW,OACXC,YAAY,QACZX,GAAG,kCAMbwB,EAAa,kBACf,gCACI,sBAAIxB,GAAG,eAAP,eACA,2FACmE,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAK,wBADnG,QACgI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,wBADhK,KAGA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIO,MAAM,aACNU,IAAI,aACJC,IAAI,aACJP,OAAO,KACPV,MAAM,OACNC,WAAW,OACXC,YAAY,QACZX,GAAG,8BAMb2B,EAAY,kBACd,gCACI,sBAAI3B,GAAG,cAAP,cACA,qFAC6D,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAM,iCAD9F,KAGA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIiB,IAAI,aACJhB,MAAM,OACNC,WAAW,OACXC,YAAY,QACZX,GAAG,wBACH4B,KAAK,QACLT,OAAO,UAMjBU,EAAgB,kBAClB,gCACI,sBAAI7B,GAAG,kBAAP,kBACA,gCACQ,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAK,yBADxC,OACqE,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,aADrG,iCAGA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAC,WAAD,CACIiB,IAAI,aACJhB,MAAM,OACNC,WAAW,OACXC,YAAY,QACZX,GAAG,wBACH4B,KAAK,WACLT,OAAO,QAGf,gBAAC,UAAD,CAAOjB,KAAK,UAAU4B,KAAK,UAAUC,KAAM,yBAAG,iDAAH,QAAmC,gBAAC,UAAD,CAAU7B,KAAK,YAAYC,KAAK,aAAnE,uEAAoJ,gBAAC,KAAD,CAAS6B,GAAG,eAAZ,SAApJ,2DAM7CC,EAAU,kBACZ,gCACI,sBAAIjC,GAAG,qBAAP,qBACA,sDAA6B,gBAAC,UAAD,CAAUE,KAAK,YAAYC,KAAK,oBAA7D,OAFJ,oGAE6L,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,UAF7N,8BAGI,yBAAO+B,UAAU,uBACb,6BACI,0BACI,uCACA,2CACA,2CAGR,6BACI,0BACI,0BACI,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,2BAEpC,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,UAEpC,iLAIJ,0BACI,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,gCAEpC,2BACA,yIAIJ,0BACI,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,4BAEpC,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,aAEpC,0BACI,4KAGA,iEAGA,sBAAI+B,UAAU,QACV,sBAAIA,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,OAAtD,gBACA,sBAAI+B,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,OAAtD,gBACA,sBAAI+B,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,OAAtD,gBACA,sBAAI+B,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,OAAtD,gBACA,sBAAI+B,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,OAAtD,gBACA,sBAAI+B,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,YAAtD,6BAIZ,0BACI,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,0BAEpC,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,WAEpC,mHAIJ,0BACI,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,4BAEpC,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,OAEpC,6EAIJ,0BACI,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,yBAEpC,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,UAEpC,yDAIJ,0BACI,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,yBAEpC,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,UAEpC,uDAIJ,0BACI,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,8BAEpC,2BACA,4GAIJ,0BACI,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,0BAEpC,0BACI,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,YAEpC,2FAEI,sBAAI+B,UAAU,QACV,sBAAIA,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,WAAtD,4BACA,sBAAI+B,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,aAAtD,kCACA,sBAAI+B,UAAU,SAAQ,gBAAC,UAAD,CAAUhC,KAAK,YAAYC,KAAK,UAAtD,sDAStBgC,EAAoB,kBACtB,gCACI,sBAAInC,GAAG,sBAAP,sBACA,gBAAC,EAAAoC,eAAD,CAAgBC,cAAc,aAAaC,MAAI,EAACC,OAAK,MAIvDC,E,0WACF,WACIC,sB,oBAGJ,WACI,OACI,gBAAC,EAAAC,aAAD,CAAcC,QAAM,GAChB,qBAAGT,UAAU,QAAb,8LAIA,gBAACnC,EAAD,MACA,gBAACE,EAAD,MACA,gBAACW,EAAD,MACA,gBAACI,EAAD,MACA,gBAACF,EAAD,MACA,gBAACI,EAAD,MACA,gBAACE,EAAD,MACA,gBAACE,EAAD,MACA,gBAACE,EAAD,MACA,gBAACG,EAAD,MACA,gBAACE,EAAD,MACA,gBAACI,EAAD,MACA,gBAACE,EAAD,MACA,gBAAC,UAAD,CAAgBE,cAAe,qB,8BAzBrBO,aA+B1B,a,qRCpaA,IAAMC,EAAW,SAAC,GAA6H,IAA3H7C,EAA2H,EAA3HA,GAAI8C,EAAuH,EAAvHA,QAASC,EAA8G,EAA9GA,KAAMC,EAAwG,EAAxGA,SAAUC,EAA8F,EAA9FA,WAAYxC,EAAkF,EAAlFA,MAAOyC,EAA2E,EAA3EA,aAAcC,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASrB,EAAgB,EAAhBA,UACrHsB,EAAQ,CACVtD,KAAM,WACNF,GAAIA,GAAM,KACV+C,OACAC,SAAUA,GAAY,KACtBS,eAAgBX,GAAW,KAC3BO,YAGJ,OACI,gCACKC,EAAQ,4BACL,4BAAUpB,UAAS,wBAAmBgB,EAAe,aAAe,IAAMF,SAAUA,GAChF,8BACKC,EACAG,GAAY,gCAAG,KACZ,2CAEHD,GAAW,gCAAG,KACX,qBAAGjB,UAAU,2BAA2B,eAAa,wBAAwB,wBAAsB,OAAO,KAA1G,eACqB,QAI5BqB,EAAQG,KAAI,WAAgBhF,GAAhB,IAAG+B,EAAH,EAAGA,MAAOT,EAAV,EAAUA,GAAV,OAAsB,uBAAKkC,UAAU,WAAW3C,IAAKb,GAAI,KAClE,6BAAW8E,EAAX,CAAkBxD,GAAIA,KAAO,KAC7B,yBAAO2D,QAAS3D,GAAKS,GAEZ,SAEZyC,EAAe,uBAAKhB,UAAU,aAAa,aAAYgB,GAAgB,OAAe,OAGzF,gCACE,uBAAKhB,UAAS,kBAAaA,EAAY,IAAH,OAAOA,GAAc,IAA3C,OAAgDgB,EAAe,aAAe,KAAO,KAC/F,wBAAWM,GAAU,KACrB,yBAAOG,QAAS3D,GAAKS,GAAe,MAEvCyC,EAAe,uBAAKhB,UAAU,aAAa,aAAYgB,GAAgB,OAAe,QAO3GL,EAASe,UAAY,CACjB5D,GAAI6D,WACJf,QAASe,SACTb,SAAUa,SACVpD,MAAOoD,cAAoB,CACvBA,WACAA,aAEJd,KAAMc,WACNX,aAAcW,WACdC,QAASD,SACTP,MAAOO,SACPZ,WAAYY,WACZN,QAASM,UACTV,QAASU,SACTT,SAAUS,UAGd,O,qRChEA,IAAME,EAAQ,SAAC,GAAqG,IAAnG/D,EAAmG,EAAnGA,GAAI8C,EAA+F,EAA/FA,QAASE,EAAsF,EAAtFA,SAAUvC,EAA4E,EAA5EA,MAAO6C,EAAqE,EAArEA,MAAOL,EAA8D,EAA9DA,WAAYM,EAAkD,EAAlDA,QAASR,EAAyC,EAAzCA,KAAMI,EAAmC,EAAnCA,QAASE,EAA0B,EAA1BA,SAAUnB,EAAgB,EAAhBA,UAC1FsB,EAAQ,CACVtD,KAAM,QACNF,GAAIA,GAAM,KACV+C,KAAMA,GAAQ,KACdC,SAAUA,GAAY,KACtBS,eAAgBX,GAAW,KAC3BO,YAGJ,OACI,gCACKC,EACG,4BAAUpB,UAAS,qBAAgBA,EAAY,IAAH,OAAOA,GAAc,IAAMc,SAAUA,GAC7E,8BACKC,EACAE,GAAW,gCACP,KAAK,qBAAGjB,UAAU,2BAA2B,eAAa,wBAAwB,wBAAsB,OAAO,KAA1G,eACW,OAChB,MAERqB,EAAQG,KAAI,WAAyBhF,GAAzB,IAAG+B,EAAH,EAAGA,MAAOT,EAAV,EAAUA,GAAI8C,EAAd,EAAcA,QAAd,OAA+B,uBAAKZ,UAAU,QAAQ3C,IAAKb,GAAI,KACxE,6BAAW8E,EAAX,CAAkBxD,GAAIA,EAAIyD,eAAgBX,KAAW,KACrD,yBAAOa,QAAS3D,GAAKS,GAAe,UAG1C,gCACE,uBAAKyB,UAAU,SAAS,KACpB,wBAAWsB,GAAU,KACpB/C,EAAQ,yBAAOkD,QAAS3D,GAAKS,GAAiB,KAAMA,EAAQ,KAAO,SAQ5FsD,EAAMH,UAAY,CACd5D,GAAI6D,WACJd,KAAMc,WACNf,QAASe,SACTb,SAAUa,SACVpD,MAAOoD,WACPP,MAAOO,SACPZ,WAAYY,WACZN,QAASM,UACTC,QAASD,SACTV,QAASU,SACT3B,UAAW2B,YAGf,O,sECnDMG,EAAY,SAAC,GAAwD,IAAtDhE,EAAsD,EAAtDA,GAAI8C,EAAkD,EAAlDA,QAASE,EAAyC,EAAzCA,SAAUvC,EAA+B,EAA/BA,MAAO0C,EAAwB,EAAxBA,QAASc,EAAe,EAAfA,SAClDT,EAAQ,CACVtD,KAAM,WACNF,GAAIA,GAAM,KACVgD,SAAUA,GAAY,KACtBS,eAAgBX,GAAW,MAG/B,OACI,uBAAKZ,UAAS,mBAAc+B,EAAW,aAAe,KAAO,KACzD,wBAAWT,GAAU,KACpB/C,EAAQ,yBAAOkD,QAAS3D,GAAK,KACzBS,EAAO,KACP0C,GACG,gCACI,qBAAGjB,UAAU,2BAA2B,eAAa,0BAA0B,wBAAsB,OAAO,KAA5G,eACqB,MAChB,OAEN,KAAMzB,EAAQ,KAAO,OAK5CuD,EAAUJ,UAAY,CAClB5D,GAAI6D,WACJf,QAASe,SACTb,SAAUa,SACVpD,MAAOoD,YAGX,O,4SC9BMrD,EAAa,SAAC,GAAqI,IAAnIW,EAAmI,EAAnIA,OAAQE,EAA2H,EAA3HA,KAAMI,EAAqH,EAArHA,IAAKC,EAAgH,EAAhHA,IAAKH,EAA2G,EAA3GA,OAAQR,EAAmG,EAAnGA,MAAON,EAA4F,EAA5FA,MAAOE,EAAqF,EAArFA,YAAaD,EAAwE,EAAxEA,WAAYO,EAA4D,EAA5DA,SAAUW,EAAkD,EAAlDA,KAAMf,EAA4C,EAA5CA,WAAYwC,EAAgC,EAAhCA,SAAUa,EAAsB,EAAtBA,YAAalE,EAAS,EAATA,GACtIwD,EAAQ,CACVxD,KACAkE,cACAhC,UAAW,eACXhC,KAAM,OACN,kBAAmB,GACnB,yBAA0BiB,GAAU,KACpC,uBAAwBE,GAAQ,KAChC,sBAAuBI,GAAO,KAC9B,sBAAuBC,GAAO,KAC9B,wBAAyBX,GAAS,KAClC,yBAA0BQ,GAAU,KACpC,2BAA4BN,GAAY,KACxC,uBAAwBW,GAAQ,KAChC,6BAA8Bf,GAAc,KAC5C,gBAAiBwC,GAAY,MAGjC,OACI5C,EACI,uBAAKyB,UAAU,cAAc,KACzB,yBAAOyB,QAAS3D,GAAM,MAAOS,GAAe,KAC5C,uBAAKyB,UAAU,eAAe,KACzBvB,EAAc,gBAAC,EAAAwD,MAAD,CAAOjE,KAAOQ,EAAaK,MAAQJ,IAAmB,KAAM,KAC3E,wBAAW6C,GAAU,OAG7B,wBAAWA,IAGvBhD,EAAWoD,UAAY,CACnBzC,OAAQ0C,UAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,YACvDxC,KAAMwC,SACNpC,IAAKoC,WACLnC,IAAKmC,WACLtC,OAAQsC,WACR9C,MAAO8C,WACPpD,MAAOoD,WACP7D,GAAI6D,WACJR,SAAUQ,UAGd,QC5CMO,EAAkB,SAAC,GAAD,IAAGrC,EAAH,EAAGA,KAAMtB,EAAT,EAASA,MAAT,OACpB,uBAAKyB,UAAU,cAAc,KACxBzB,EAAQ,6BAAQA,GAAiB,KAAMA,EAAQ,KAAO,KACvD,wBAAMyB,UAAU,qBAAqBH,GAAa,OAI1DqC,EAAgBR,UAAY,CACxB7B,KAAM8B,sBACNpD,MAAOoD,YAGX,Q,sBCTA,GACIhB,aACArC,aACA4D,kBACAL,UACAC,gB,qICPSG,EAAQ,SAAC,GAAD,IAAGjE,EAAH,EAAGA,KAAMa,EAAT,EAASA,MAAOsD,EAAhB,EAAgBA,MAAOrB,EAAvB,EAAuBA,SAAvB,MACP,WAAT9C,EACG,0BAAQA,KAAK,SAASgC,UAAS,kBAAamC,GAASrB,SAAUA,GAC1DjC,GAEH,wBAAMmB,UAAU,qBAA+B,SAAThC,EAAmB,qBAAGgC,UAAU,yCAAyC,cAAY,QAAQnB,GAAaA,IAGpJuD,EAAW,SAAC,GAAD,IAAGxC,EAAH,EAAGA,KAAH,OACb,wBAAMI,UAAU,yBAAyB,SACrC,qBAAGA,UAAU,iBAAiB,cAAY,QAAQJ,GAAU,SAI9DyC,EAAa,SAAC,GA2Bd,IA1BFvE,EA0BE,EA1BFA,GACAE,EAyBE,EAzBFA,KACAgE,EAwBE,EAxBFA,YACAM,EAuBE,EAvBFA,QACAC,EAsBE,EAtBFA,SACAvC,EAqBE,EArBFA,UACAmB,EAoBE,EApBFA,SACAqB,EAmBE,EAnBFA,aACAC,EAkBE,EAlBFA,aACA3B,EAiBE,EAjBFA,SACA4B,EAgBE,EAhBFA,SACAnE,EAeE,EAfFA,MACAoE,EAcE,EAdFA,gBACAC,EAaE,EAbFA,cACAnE,EAYE,EAZFA,YACAD,EAWE,EAXFA,WACAqE,EAUE,EAVFA,eACAC,EASE,EATFA,aACAC,EAQE,EARFA,YACAC,EAOE,EAPFA,gBACAC,EAME,EANFA,aACAC,EAKE,EALFA,UACAlC,EAIE,EAJFA,aACAmC,EAGE,EAHFA,eACAlC,EAEE,EAFFA,QACAC,EACE,EADFA,SAEMI,EAAQ,CACVtD,KAAMA,GAAQ,KACdgC,UAAW,eACXlC,GAAIA,GAAM,KACVkE,YAAaA,GAAe,KAC5BQ,aAAcA,GAAgB,GAC9B1B,SAAUA,GAAY,KACtB4B,SAAUA,GAAY,KACtBD,aAAcA,GAAgB,KAC9BtB,SAAUA,GAAY,KACtBmB,QAASA,EAAU,GAAK,KACxB,gBAAiBC,EAAW,GAAK,MAG/Ba,EAAkBC,IACpB,cACAV,EAAkB,OAAH,OAAUA,GAAoB,KAC7CM,EAAe,eAAiB,MAG9BK,EAAc,CAChBtD,UAAW,eACXwC,aAAc,GACd1B,SAAUA,GAAY,KACtB4B,SAAUA,GAAY,KACtBvB,SAAUA,GAAY,MAG1B,OACI,uBAAKnB,UAAS,oBAAec,EAAW,YAAc,IAAxC,OAAsD,WAAT9C,GAAoBgD,EAAe,aAAoB,IAApG,OAAyGhB,GAAwB,KAAO,KACjJzB,EAAQ,yBAAOkD,QAAS3D,GAAK,KAAMS,EAA3B,IAAmC2C,GAAY,aAAcD,GAAW,KAC5EA,GACG,qBAAGjB,UAAU,2BAA2B,eAAa,wBAAwB,wBAAsB,OAAO,KAA1G,eACiB,MAAW,MACzB,KAAMzB,EAAQ,KAAO,KAC/BE,GAAeqE,GAAgBG,GAAgBjC,EAC5C,uBAAKhB,UAAWoD,GAAkB,KAC7B3E,EAAc,gBAACwD,EAAD,CAAOjE,KAAMQ,EAAYK,MAAOJ,EAAa0D,MAAOU,EAAgB/B,SAAUA,IAAe,KAAOrC,EAAc,KAAO,KAC9H,aAATT,EACG,2BAAcsD,GACH,WAATtD,EACE,0BAAQgC,UAAU,eAAec,SAAUA,EAAU4B,SAAUA,GAAW,SACrEE,EAAcpB,KAAI,SAAC+B,EAAK/G,GAAN,OACf,gBAAC,EAAAgH,SAAD,CAAUnG,IAAKkG,EAAM/G,GACjB,8BAAS+G,GAAe/G,IAAMoG,EAAclG,OAAS,EAAK,SAAW,OAEzE,QAGR,wBAAW4E,GAClB,KACA2B,EAAe,gBAACb,EAAD,CAAUxC,KAAMqD,IAAmB,KAfvD,IAe8DA,EAAe,KAAO,KAC/EH,EAAe,gBAACb,EAAD,CAAOjE,KAAM+E,EAAalE,MAAOiE,EAAcX,MAAOa,EAAiBlC,SAAUA,IAAe,KAAOgC,EAAe,KAAO,MAGjJ,gCACc,aAAT9E,EACG,2BAAcsD,GACH,WAATtD,EACE,yBAAYsF,EAAc,SACrBtB,GAAe,0BAAQnD,MAAM,GAAGiC,UAAQ,EAAC2C,QAAM,GAAEzB,GACjDY,EAAcpB,KAAI,SAAC+B,EAAK/G,GAAN,OACf,gBAAC,EAAAgH,SAAD,CAAUnG,IAAKkG,EAAM/G,GACjB,0BAAQqC,MAAO0E,GAAMA,GAAe/G,IAAMoG,EAAclG,OAAS,EAAK,SAAW,OAErF,QAGR,wBAAW4E,IAG1B4B,EAAY,uBAAKlD,UAAU,aAAa,eAAcmD,GAAkB,KAAM,aAAYnC,GAAgB,MAAOkC,GAAmB,OAKjJb,EAAWX,UAAY,CACnB1D,KAAM2D,sBACN7D,GAAI6D,WACJK,YAAaL,WACbW,QAASX,WACTY,SAAUZ,SACVR,SAAUQ,SACVa,aAAcb,WACdc,aAAcd,WACdb,SAAUa,SACVe,SAAUf,SACVpD,MAAOoD,WACPgB,gBAAiBhB,UAAgB,CAAC,QAAS,KAC3CiB,cAAejB,UACflD,YAAakD,WACbnD,WAAYmD,UAAgB,CAAC,SAAU,OAAQ,KAC/CkB,eAAgBlB,UAAgB,CAAC,UAAW,cAC5CmB,aAAcnB,WACdoB,YAAapB,UAAgB,CAAC,SAAU,OAAQ,KAChDqB,gBAAiBrB,UAAgB,CAAC,UAAW,cAC7CsB,aAActB,WACduB,UAAWvB,cAAoB,CAC3BA,WACAA,WAEJX,aAAcW,WACdwB,eAAgBxB,WAChB3B,UAAW2B,YAGf,a,6GCjJM+B,EAAiB,SAAC,GAAD,IAAGvD,EAAH,EAAGA,cAAewD,EAAlB,EAAkBA,OAAlB,OACnB,+BACI,4CACA,yBAAG,gBAAC,KAAD,CAAM7D,GAAG,gCAAT,kBAAH,uCAAoG,gBAAC,UAAD,CAAU9B,KAAK,UAAUC,KAAK,8BAAlI,KACA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,aAAaE,YAAU,EAACuF,eAAa,GAAhE,YACmBzD,EADnB,wCACsF,KACjFwD,EAAS,GAAH,UAAWxD,EAAX,cAKnBuD,EAAehC,UAAY,CACvBvB,cAAewB,WACfgC,OAAQhC,UAGZ","file":"scripts/doc-route.chunk_14.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { Component } from \"react\";\nimport { NavHashLink as NavLink } from \"react-router-hash-link\";\n\nimport { ComponentPreview, DocContainer, JavascriptDocs } from \"@docutils\";\nimport { Datepicker as DatepickerComponent } from \"@components/FormComponents\";\nimport Alert from \"@components/Alert\";\nimport CodeTags from \"@components/CodeTags\";\n\nimport { datepicker } from \"@src/scripts/main\";\nimport NpmInformation from \"@docutils/NpmInformation\";\n\nconst AboutDatepickers = () => (\n    <>\n        <h2 id=\"about-datepickers\">About</h2>\n        <p>\n            Datepickers give a visual presentation of days, months and years. By utilizing the datepicker you can be assured the given input is in the format you\n            expect without having to deal with too much client-side validation. Datepickers should be used for recent dates to avoid having the user click a lot of times to find the required date.\n            If you need a date of birth or something similarly far back, an input field with proper validation will be easier to use.\n        </p>\n    </>\n);\n\nconst SimpleDatepicker = () => (\n    <>\n        <h2 id=\"simple-datepicker\">Simple datepicker</h2>\n        <p>\n            A basic datepicker can be made by applying the attribute <CodeTags type=\"secondary\" code=\"data-datepicker\" /> to an input element inside a <CodeTags type=\"secondary\" code=\".form-group\" />.\n            The basic datepicker has a read-only input field.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"simple-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst AllowInput = () => (\n    <>\n        <h2 id=\"allow-input\">Allow input</h2>\n        <p>\n            By default datepickers do not allow input but you can use <CodeTags type=\"secondary\" code=\"data-datepicker-allowinput\" />. When\n            you allow input then the given date has to match the datepicker format (<CodeTags type=\"secondary\" code=\"iso8601\"/> if you have not specified a format).\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"simple-datepicker\"\n                allowinput\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst InitialValue = () => (\n    <>\n        <h2 id=\"initial-value\">Initial value</h2>\n        <p>If you want to set an initial value for your datepicker use <CodeTags type=\"secondary\" code={\"data-datepicker-value=\\\"{your-date}\\\"\"} />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                value=\"1972-12-28\"\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"init-value-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst HumanReadable = () => (\n    <>\n        <h2 id=\"human-readable\">Human readable date</h2>\n        <p>\n            If you wish to make the date more readable to humans you can add <CodeTags type=\"secondary\" code={\"data-datepicker-fulldate=\\\"true\\\"\"} />\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                value=\"1972-12-28\"\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                fulldate\n                id=\"init-value-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst CustomFormat = () => (\n    <>\n        <h2 id=\"custom-format\">Custom format</h2>\n        <p>\n            To use a custom format include <CodeTags type=\"secondary\" code={\"data-datepicker-format=\\\"[nb|sv|da|fi|en|iso8601(default)]\\\"\"} />. If no\n            format is provided then datepicker will default to <CodeTags type=\"secondary\" code=\"iso8601\" />. Same behaviour applies if you try to set an invalid date.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                label=\"nb (norwegian):\"\n                value=\"28.12.1972\"\n                format=\"nb\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"nb-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"sv (swedish):\"\n                value=\"1972-12-28\"\n                format=\"sv\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"sv-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"da (danish):\"\n                value=\"28.12.1972\"\n                format=\"da\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"da-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"fi (finnish):\"\n                value=\"28.12.1972\"\n                format=\"fi\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"fi-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"en (english):\"\n                value=\"28/12/1972\"\n                format=\"en\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"en-datepicker\"\n            />\n            <DatepickerComponent\n                label=\"iso8601 (robotic):\"\n                value=\"1972-12-28\"\n                format=\"iso8601\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"iso8601-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst IncludeTime = () => (\n    <>\n        <h2 id=\"include-time\">Include time</h2>\n        <p>\n            Adding time to your datepicker is as easy as using <CodeTags type=\"secondary\" code={\"data-datepicker-time=\\\"true\\\" \"} />. If you wish to set\n            a default time for the time picker just include it in the <CodeTags type=\"secondary\" code=\"data-datepicker-value\" /> attribute.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                time\n                format=\"nb\"\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"include-time-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst ShowingMultipleMonths = () => (\n    <>\n        <h2 id=\"showing-multiple-months\">Showing multiple months</h2>\n        <p>If you need to show more than one month in your date picker use the attribute <CodeTags type=\"secondary\" code={\"data-datepicker-months=\\\"{number}\\\"\"} />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                months=\"2\"\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"multiple-months-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst ValidDates = () => (\n    <>\n        <h2 id=\"valid-dates\">Valid dates</h2>\n        <p>\n            You can set a range of available dates to select from by using <CodeTags type=\"secondary\" code=\"data-datepicker-min\" /> and <CodeTags type=\"secondary\" code=\"data-datepicker-max\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                value=\"28.12.1972\"\n                min=\"28.12.1972\"\n                max=\"10.05.2017\"\n                format=\"nb\"\n                label=\"Date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"valid-dates-datepicker\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst DateRange = () => (\n    <>\n        <h2 id=\"date-range\">Date range</h2>\n        <p>\n            You can make it possible to select a range of dates with <CodeTags type=\"secondary\" code={\"data-datepicker-mode=\\\"range\\\"\"} />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                min=\"10.12.1972\"\n                label=\"date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"date-range-datepicker\"\n                mode=\"range\"\n                format=\"nb\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst MultipleDates = () => (\n    <>\n        <h2 id=\"multiple-dates\">Multiple dates</h2>\n        <p>\n            Set <CodeTags type=\"secondary\" code=\"data-datepicker-mode\" /> to <CodeTags type=\"secondary\" code=\"multiple\" /> for multiple date selection.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <DatepickerComponent\n                min=\"10.12.1972\"\n                label=\"date\"\n                prefixType=\"icon\"\n                prefixValue=\"event\"\n                id=\"date-range-datepicker\"\n                mode=\"multiple\"\n                format=\"nb\"\n            />\n        </ComponentPreview>\n        <Alert type=\"warning\" icon=\"warning\" text={<p><b>Max number of dates:</b> The <CodeTags type=\"secondary\" code=\"multiple\" /> variation of datepicker does not have an upper limit of dates. Use <NavLink to=\"#date-range\">range</NavLink> if\n                you want to select a continuous range of dates.</p>} />\n\n    </>\n);\n\nconst Options = () => (\n    <>\n        <h2 id=\"available-options\">Available options</h2>\n        <p>Options available through <CodeTags type=\"secondary\" code=\"data-datepicker\" />...</p> Keep in mind that setting any of these values will render them true, so setting an attribute to <CodeTags type=\"secondary\" code=\"false\" /> will still render it true.\n        <table className=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Attribute</th>\n                    <th>Default value</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-value\" />\n                    </td>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"null\" />\n                    </td>\n                    <td>\n                        Value used to initialize calendar. Set this value with the same format currently set for the datepicker (including time if you have enabled that).\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-allowinput\" />\n                    </td>\n                    <td></td>\n                    <td>\n                        This allows the user to write in the input field. The dates given must match the format of the datepicker.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-format\" />\n                    </td>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"iso8601\" />\n                    </td>\n                    <td>\n                        <p>\n                            Format string used for the input field and names for days and months. All have the same time format (HH:mm), and starts the week on monday (1).\n                        </p>\n                        <p>\n                            The following options are available:\n                        </p>\n                        <ul className=\"list\">\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"nb\" />: DD.MM.YYYY</li>\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"sv\" />: YYYY-MM-DD</li>\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"da\" />: DD.MM.YYYY</li>\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"fi\" />: DD.MM.YYYY</li>\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"en\" />: DD/MM/YYYY</li>\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"iso8601\" />: YYYY-MM-DD (default)</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-time\" />\n                    </td>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"false\" />\n                    </td>\n                    <td>\n                        If the calendar shows the current time and allows you to change it using a dropdown.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-months\" />\n                    </td>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"1\" />\n                    </td>\n                    <td>\n                        Number of months to display in the datepicker.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-min\" />\n                    </td>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"null\" />\n                    </td>\n                    <td>\n                        Disallow dates before min.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-max\" />\n                    </td>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"null\" />\n                    </td>\n                    <td>\n                        Disallow dates past max.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-altinput\" />\n                    </td>\n                    <td></td>\n                    <td>\n                        Use a custom format to display the selected date(s) shown in the input field.\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"data-datepicker-mode\" />\n                    </td>\n                    <td>\n                        <CodeTags type=\"secondary\" code=\"single\" />\n                    </td>\n                    <td>\n                        Different variations of date selection. Available options are:\n                        <ul className=\"list\">\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"single\" />User can select one date</li>\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"multiple\" />User can select multiple dates</li>\n                            <li className=\"mb-sm\"><CodeTags type=\"secondary\" code=\"range\" />User can select a range of continuous dates</li>\n                        </ul>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"datepicker\" open close />\n    </>\n);\n\nclass Datepickers extends Component {\n    componentDidMount () {\n        datepicker.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Datepickers makes it easy to get dates from your users. With datepickers you do not have to worry about how your users\n                    write the given date, alleviating the need to do format validation.\n                </p>\n                <AboutDatepickers />\n                <SimpleDatepicker />\n                <AllowInput />\n                <HumanReadable />\n                <InitialValue />\n                <CustomFormat />\n                <IncludeTime />\n                <ShowingMultipleMonths />\n                <ValidDates />\n                <DateRange />\n                <MultipleDates />\n                <Options />\n                <JavascriptMethods />\n                <NpmInformation componentName={\"datepicker\"}/>\n            </DocContainer>\n        );\n    }\n}\n\nexport default Datepickers;\n\n/* For testing */\nexport { AboutDatepickers, SimpleDatepicker, AllowInput, HumanReadable, InitialValue, CustomFormat, IncludeTime, ShowingMultipleMonths, ValidDates, DateRange, MultipleDates, Options, JavascriptMethods };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, tooltip, optional, required, group, options, className }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {optional && <>{\"\\n\"}\n                            <span>(optional)</span>\n                        </>}\n                        {tooltip && <>{\"\\n\"}\n                            <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                    help_outline{\"\\n\"}\n                            </i>\n                        </>}\n                    </legend>\n                    {options.map(({ label, id }, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}\n\n                        </label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${className ? ` ${className}` : \"\"}${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    tooltip: PropTypes.bool,\n    optional: PropTypes.bool\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, tooltip, required, className }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ?\n                <fieldset className={`radio-group${className ? ` ${className}` : \"\"}`} disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {tooltip && <>\n                            {\"\\n\"}<i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}</i>\n                        </>}{\"\\n\"}\n                    </legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool,\n    tooltip: PropTypes.bool,\n    className: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label, tooltip, labelTop }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className={`togglebox${labelTop ? \" label-top\" : \"\"}`}>{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}\n                {label}{\"\\n\"}\n                {tooltip &&\n                    <>\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                        </i>{\"\\n\"}\n                    </>}\n            </label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, placeholder, id }) => {\n    const attrs = {\n        id,\n        placeholder,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    className,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    const selectAttrs = {\n        className: \"form-control\",\n        defaultValue: \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        required: required || null\n    };\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}${className ? className : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select {...selectAttrs}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { ComponentPreview } from \"@docutils\";\nimport CodeTags from \"../../components/CodeTags\";\n\nconst NpmInformation = ({ componentName, noInit }) => (\n    <section>\n        <h3>Usage with NPM</h3>\n        <p><Link to=\"/get-started/for-developers/\">Usage with NPM</Link> will require you to import it from <CodeTags type=\"primary\" code=\"@swedbankpay/design-guide\" />.</p>\n        <ComponentPreview language=\"javascript\" codeFigure dangerousHTML>\n            import &#123; {componentName} &#125; from &quot;@swedbankpay/design-guide&quot;; {\"\\n\"}\n            {noInit ? \"\" : `${componentName}.init()`}\n        </ComponentPreview>\n    </section>\n);\n\nNpmInformation.propTypes = {\n    componentName: PropTypes.string,\n    noInit: PropTypes.bool\n};\n\nexport default NpmInformation;\n"],"sourceRoot":""}