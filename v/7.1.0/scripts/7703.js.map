{"version":3,"sources":["webpack://@swedbankpay/design-guide/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedInquiries/index.js","webpack://@swedbankpay/design-guide/./src/App/Examples/examples/customers/CustomersOverview/index.js","webpack://@swedbankpay/design-guide/./src/App/Examples/examples/customers/constants.js","webpack://@swedbankpay/design-guide/./src/App/components/MediaObject/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Pagination/index.js"],"names":["CustomersDetailedInquiryCard","inquiry","size","className","id","date","icon","heading","numMessages","toString","text","resolved","message","href","CustomersDetailedInquiries","customersDetailedLatestInquiry","customersDetailedPreviousInquiries","map","key","propTypes","PropTypes","isRequired","CustomersOverview","props","state","customerFilter","this","customerFilterField","focus","e","setState","target","value","toLowerCase","ref","input","onChange","updateFilter","type","onClick","resetFilter","disabled","length","scope","customersList","filter","customer","firstName","includes","lastName","location","index","setCustomerIndex","status","statusText","arrows","farArrows","Component","email","phone","default","success","warning","danger","customersDetailedActionList","name","customersDetailedOrders","Array","Math","floor","random","customersDetailedOrdersSteps","title","completed","ongoing","selected","keys","i","MediaObject","imgUrl","textSmall","mediaRight","muted","mediaClasses","classnames","iconClasses","src","headingClasses","mediaHeading","Pagination","items","activeItem","itemLength","paginationClasses","Arrow","active"],"mappings":"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","file":"scripts/7703.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CustomersDetailedDatePickerGroup from \"../CustomersDetailedDatePickerGroup\";\nimport MediaObjectComponent from \"@components/MediaObject\";\n\nconst CustomersDetailedInquiryCard = ({ inquiry, size }) => (\n    <div className=\"card card-secondary\">\n        <header className=\"card-header\">\n            <h4>{`Inquiry: ${inquiry.id} | ${inquiry.date}`}</h4>\n        </header>\n        <div className=\"card-body\">\n            <div className=\"d-none d-sm-block\">\n                <div className=\"d-flex justify-content-around\">\n                    <MediaObjectComponent\n                        size={size}\n                        icon=\"message\"\n                        heading={inquiry.numMessages.toString()}\n                        text=\"messages\"\n                    />\n\n                    <MediaObjectComponent\n                        size={size}\n                        icon={inquiry.resolved ? \"check_circle\" : \"feedback\"}\n                        heading={inquiry.resolved ? \"Resolved\" : \"Unresolved\"}\n\n                    />\n                </div>\n            </div>\n            <div className=\"d-sm-none\">\n                <div className=\"d-flex flex-column\">\n                    <MediaObjectComponent\n                        size=\"sm\"\n                        icon=\"message\"\n                        heading={inquiry.numMessages.toString()}\n                        text=\"messages\"\n                    />\n\n                    <MediaObjectComponent\n                        size=\"sm\"\n                        icon={inquiry.resolved ? \"check_circle\" : \"feedback\"}\n                        heading={inquiry.resolved ? \"Resolved\" : \"Unresolved\"}\n\n                    />\n                </div>\n            </div>\n            <h5>Initial message:</h5>\n            <p>{inquiry.message}</p>\n        </div>\n        <div className=\"card-footer\">\n            <div className=\"footer-link\"><a href=\"#\">See inquiry thread</a></div>\n        </div>\n    </div>\n);\n\nconst CustomersDetailedInquiries = ({ customersDetailedLatestInquiry, customersDetailedPreviousInquiries }) => (\n    <>\n        <h3>Latest inquiry</h3>\n        <CustomersDetailedInquiryCard inquiry={customersDetailedLatestInquiry} size=\"lg\" />\n\n        <h3>Previous inquiries</h3>\n        <CustomersDetailedDatePickerGroup />\n        <div className=\"row\">\n            {customersDetailedPreviousInquiries.map(inquiry => (\n                <div key={inquiry.id} className=\"col-lg-6 d-flex\">\n                    <CustomersDetailedInquiryCard inquiry={inquiry} size=\"sm\" />\n                </div>\n            ))}\n        </div>\n    </>\n);\n\nCustomersDetailedInquiryCard.propTypes = {\n    inquiry: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    }).isRequired,\n    size: PropTypes.string.isRequired\n};\n\nCustomersDetailedInquiries.propTypes = {\n    customersDetailedLatestInquiry: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    }).isRequired,\n    customersDetailedPreviousInquiries: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        numMessages: PropTypes.number.isRequired,\n        resolved: PropTypes.bool.isRequired,\n        message: PropTypes.string.isRequired\n    })).isRequired\n};\n\nexport default CustomersDetailedInquiries;\n\nexport { CustomersDetailedInquiryCard };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PaginationComponent from \"@components/Pagination\";\n\nclass CustomersOverview extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            customerFilter: \"\"\n        };\n    }\n\n    componentDidUpdate () {\n        this.customerFilterField.focus();\n    }\n\n    updateFilter (e) {\n        this.setState({\n            customerFilter: e.target.value.toLowerCase()\n        });\n    }\n\n    resetFilter () {\n        this.setState({\n            customerFilter: \"\"\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"panel panel-brand\">\n                    <header>\n                        <div className=\"row\">\n                            <div className=\"col-lg-4\">\n                                <h2 className=\"panel-title\">Customers</h2>\n                            </div>\n                            <div className=\"col-lg-8\">\n                                <div className=\"input-group\">{\"\\n\"}\n                                    <span className=\"input-group-addon\">{\"\\n\"}\n                                        <i className=\"material-icons\" aria-hidden=\"true\">search</i>\n                                    </span>{\"\\n\"}\n                                    <input ref={input => this.customerFilterField = input} value={this.state.customerFilter} onChange={e => this.updateFilter(e)} type=\"text\" className=\"form-control\" />{\"\\n\"}\n                                    <button type=\"button\" onClick={() => this.resetFilter()} disabled={this.state.customerFilter.length === 0} className=\"btn btn-primary btn-outline\">{\"\\n\"}\n                                        <i className=\"material-icons\" aria-hidden=\"true\">close</i>{\"\\n\"}\n                                    </button>{\"\\n\"}\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                    <div className=\"panel-table\">\n                        <table className=\"table table-hover table-striped\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">ID</th>\n                                    <th scope=\"col\" className=\"d-none d-sm-table-cell\">First name</th>\n                                    <th scope=\"col\" className=\"d-none d-sm-table-cell\">Last name</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\" className=\"d-none d-lg-table-cell\">Delivery status</th>\n                                    <th scope=\"col\" className=\"d-lg-none\" />\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.customersList.filter(\n                                    customer => this.state.customerFilter === \"\" ||\n                                    customer.firstName.toLowerCase().includes(this.state.customerFilter) ||\n                                    customer.lastName.toLowerCase().includes(this.state.customerFilter) ||\n                                    customer.location.toLowerCase().includes(this.state.customerFilter)\n                                )\n                                    .map((customer, index) => (\n                                        <tr key={customer.id} onClick={() => this.props.setCustomerIndex(index)}>\n                                            <th scope=\"row\">{customer.id}</th>\n                                            <td className=\"d-none d-sm-table-cell\">{customer.firstName}</td>\n                                            <td className=\"d-none d-sm-table-cell\">{customer.lastName}</td>\n                                            <td>{customer.location}</td>\n                                            <td className=\"d-none d-lg-table-cell\">\n                                                <span className={`status status-${customer.status}`}>{this.props.statusText[customer.status]}</span>\n                                            </td>\n                                            <td className=\"d-lg-none\">\n                                                <span className={`status status-${customer.status} pl-0`} />\n                                            </td>\n                                        </tr>\n                                    ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <PaginationComponent text=\"1 of 123\" arrows farArrows />\n                </div>\n            </div>\n        );\n    }\n}\n\nCustomersOverview.propTypes = {\n    customersList: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired\n    })).isRequired,\n    statusText: PropTypes.exact({\n        default: PropTypes.string.isRequired,\n        success: PropTypes.string.isRequired,\n        warning: PropTypes.string.isRequired,\n        danger: PropTypes.string.isRequired\n    }).isRequired,\n    setCustomerIndex: PropTypes.func.isRequired\n};\n\nexport default CustomersOverview;\n","// Constants that can be taken out of the index.js file is put here, to keep the index.js file smaller and less confusing\n\nexport const customersList = [\n    {\n        id: \"c1\",\n        firstName: \"Sven\",\n        lastName: \"Svensson\",\n        email: \"sven.svensson@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Visby\",\n        status: \"default\"\n    },\n    {\n        id: \"c2\",\n        firstName: \"Anna\",\n        lastName: \"Svensson\",\n        email: \"anna.svensson@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Stockholm\",\n        status: \"success\"\n    },\n    {\n        id: \"c3\",\n        firstName: \"Ola\",\n        lastName: \"Nordmann\",\n        email: \"ola.nordmann@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Oslo\",\n        status: \"success\"\n    },\n    {\n        id: \"c4\",\n        firstName: \"Kari\",\n        lastName: \"Nordmann\",\n        email: \"kari.nordmann@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Bergen\",\n        status: \"warning\"\n    },\n    {\n        id: \"c5\",\n        firstName: \"Holger\",\n        lastName: \"Danske\",\n        email: \"holger.danske@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Copenhagen\",\n        status: \"danger\"\n    },\n    {\n        id: \"c6\",\n        firstName: \"Matti\",\n        lastName: \"Meikäläinen\",\n        email: \"matti.meikalainen@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Lahti\",\n        status: \"success\"\n    },\n    {\n        id: \"c7\",\n        firstName: \"Helma\",\n        lastName: \"Egilsdóttir\",\n        email: \"helma.egilsdottir@email.com\",\n        phone: \"+47 *** ** ***\",\n        location: \"Reykjavík\",\n        status: \"default\"\n    }\n];\n\nexport const statusText = {\n    default: \"New\",\n    success: \"Delivered\",\n    warning: \"Late\",\n    danger: \"Missing\"\n};\n\nexport const customersDetailedActionList = [\n    {\n        name: \"Edit\",\n        icon: \"edit\"\n    },\n    {\n        name: \"Delete\",\n        icon: \"delete\"\n    }\n];\n\nexport const customersDetailedOrders = [...Array(15)].map(() => (Math.floor(Math.random() * 1000)) + 1000); // Generates 15 random orders with value between 1000 and 2000 to display\n\nexport const customersDetailedOrdersSteps = [\n    {\n        title: \"Check status\",\n        completed: true\n    },\n    {\n        title: \"Confirm status\",\n        ongoing: true,\n        selected: true\n    },\n    {\n        title: \"Handle status\"\n    },\n    {\n        title: \"Complete status\"\n    }\n];\n\nexport const customersDetailedLatestInquiry = {\n    id: \"InquiryID#456\",\n    date: \"24.10.2019\",\n    numMessages: 8,\n    resolved: false,\n    message: \"This is the initial message of the inquiry. The initial message is always sent by the customer. \\\n    It starts an inquiry thread in which the support team can respond to and stay in contact with the customer. \\\n    The inquiry is marked as unresolved until the support staff marks it as resolved.\"\n};\n\n// Generates 15 previous inquiries to display as an example\nexport const customersDetailedPreviousInquiries = [...Array(15).keys()].map(i => ({\n    id: `InquiryID#${i}`,\n    date: `${i + 10}.${Math.floor(10 - i * 0.4) < 10 ? \"0\" : \"\"}${Math.floor(10 - i * 0.4)}.20${19 - i < 10 ? \"0\" : \"\"}${19 - i}`, // Uses simple formulas to generate different dates, to get varied dates\n    numMessages: Math.floor(Math.random() * 20) + 3,\n    resolved: Math.random() > 0.1,\n    message: `This is the initial message of inquiry InquiryID#${i}. This message was sent ${i + 10}.${Math.floor(10 - i * 0.4) < 10 ? \"0\" : \"\"}${Math.floor(10 - i * 0.4)}.20${19 - i < 10 ? \"0\" : \"\"}${19 - i}`\n}));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst MediaObject = ({ size, imgUrl, icon, heading, text, textSmall, mediaRight, muted }) => {\n    const mediaHeading = () => {\n        const headingClasses = classnames(muted ? \"text-muted\" : null);\n\n        switch (size) {\n            case \"sm\":\n                return <h4 className={headingClasses}>{heading}</h4>;\n            case \"lg\":\n                return <h2 className={headingClasses}>{heading}</h2>;\n            default:\n                return <h3 className={headingClasses}>{heading}</h3>;\n        }\n    };\n\n    const mediaClasses = classnames(\n        \"media\",\n        mediaRight ? \"media-right\" : null,\n        size ? `media-${size}` : null\n    );\n\n    const iconClasses = classnames(\n        \"material-icons\",\n        muted ? \"text-muted\" : null\n    );\n\n    return (\n        <div className={mediaClasses}>\n            {(imgUrl || icon) ?\n                <div className=\"media-img\">{\"\\n\"}\n                    {imgUrl ? <> <img src={imgUrl} /> {\"\\n\"} </> : null}\n                    {icon ? <> <i className={iconClasses} aria-hidden=\"true\">{icon}</i> {\"\\n\"} </> : null}\n                </div>\n                : null}\n            <div className=\"media-body\">\n                {mediaHeading()}\n                <p>{textSmall ? <small>{text}</small> : text}</p>\n            </div>\n        </div>\n    );\n};\n\nMediaObject.propTypes = {\n    size: PropTypes.oneOf([\"sm\", \"lg\"]),\n    imgUrl: PropTypes.string,\n    icon: PropTypes.string,\n    heading: PropTypes.string.isRequired,\n    text: PropTypes.string,\n    textSmall: PropTypes.bool,\n    mediaRight: PropTypes.bool,\n    muted: PropTypes.bool\n};\n\nexport default MediaObject;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Pagination = ({ type, items, text, arrows, farArrows }) => {\n    let activeItem = -1;\n    const itemLength = items ? items.length - 1 : -2;\n\n    const paginationClasses = classnames(\n        \"pagination\",\n        type ? `pagination-${type}` : \"\"\n    );\n\n    const Arrow = ({ type }) => {\n        let disabled = false;\n\n        if (type === \"start\" || type === \"back\") {\n            disabled = activeItem === 0;\n        } else if (type === \"forward\" || type === \"end\") {\n            disabled = activeItem === itemLength;\n        }\n\n        return (\n            <li className={`arrow-${type}`} aria-label={type} >{\"\\n\"}\n                {disabled ? <span></span> : <a href=\"#\"></a>}{\"\\n\"}\n            </li>\n        );\n    };\n\n    return (\n        <ul className={paginationClasses}>\n            {farArrows ? <Arrow type=\"start\" /> : null}\n            {arrows ? <Arrow type=\"back\" /> : null}\n            {items ? items.map(({ name, href, active }, i) => {\n                if (active) { activeItem = i; }\n\n                return (\n                    <li key={i} className={`${active ? \"active\" : \"\"}`}>{\"\\n\"}\n                        <a href={href}>{name}</a>{\"\\n\"}\n                    </li>\n                );\n            }) : null}\n            {text ? <li>{\"\\n\"}<span className=\"text\">{text}</span>{\"\\n\"}</li> : null}\n            {arrows ? <Arrow type=\"forward\" /> : null}\n            {farArrows ? <Arrow type=\"end\" /> : null}\n        </ul>\n    );\n};\n\nPagination.propTypes = {\n    type: PropTypes.oneOf([\"bullets\", \"simple\"]),\n    items: PropTypes.array,\n    text: PropTypes.string,\n    arrows: PropTypes.bool,\n    farArrows: PropTypes.bool\n};\n\nexport default Pagination;\n"],"sourceRoot":""}