{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/Patterns/components/LoginForm/index.js","webpack://@swedbankpay/design-guide/./src/App/components/ActionLink/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Button/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Checkbox.js","webpack://@swedbankpay/design-guide/./src/App/components/InputGroup/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Link/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","LoginForm","additionalText","alternativeLogins","checkboxId","defaultEmail","defaultPassword","emailId","emailLabel","error","helpDesk","logo","passwordId","passwordLabel","placeholder","productLabel","title","brand","process","emailProps","defaultValue","id","label","type","passwordProps","errorMessage","helpBlock","validationState","AlternativeLogins","linkText","className","icon","text","fullWidth","src","size","alt","protoTypes","PropTypes","ActionLink","props","link","otherProps","actionLinkClasses","classnames","newTab","multiline","disabled","attrs","href","rel","target","ActionLinkContent","badge","smallText","propTypes","Button","name","value","loading","btnType","pullRight","input","active","bankId","btnClasses","role","tabIndex","onClick","e","preventDefault","isRequired","loader","Checkbox","checked","groupTitle","tooltip","optional","required","group","options","defaultChecked","map","htmlFor","require","Addon","color","Feedback","InputGroup","pattern","validate","autoComplete","readOnly","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","successMessage","inputGrpClasses","selectAttrs","opt","Fragment","hidden","Link","leftIcon","rightIcon","smallFont","bright","linkClasses","fontSize"],"mappings":"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","file":"scripts/doc-route.chunk_78.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ActionLink from \"@components/ActionLink\";\nimport Alert from \"@components/Alert\";\nimport Button from \"@components/Button\";\nimport Checkbox from \"@components/FormComponents/Checkbox\";\nimport InputGroup from \"@components/InputGroup\";\nimport LinkComponent from \"@components/Link\";\nimport Logotype from \"@components/Logotype\";\n\nconst LoginForm = ({ additionalText,\n    alternativeLogins,\n    checkboxId,\n    defaultEmail,\n    defaultPassword,\n    emailId,\n    emailLabel,\n    error,\n    helpDesk,\n    logo,\n    passwordId,\n    passwordLabel,\n    placeholder,\n    productLabel,\n    title }) => {\n\n    const basename = process.env.basename;\n    const brand = process.env.brand;\n\n    const emailProps = {\n        defaultValue: defaultEmail ? \"name@mail.com\" : null,\n        id: emailId,\n        label: emailLabel ? emailLabel : \"Email\",\n        placeholder: placeholder ? placeholder : null,\n        type: \"email\"\n    };\n\n    const passwordProps = {\n        defaultValue: defaultPassword ? \"qwerty1234\" : null,\n        errorMessage: error ? \"Incorrect password\" : null,\n        id: passwordId,\n        helpBlock: error ? error : false,\n        label: passwordLabel ? passwordLabel : \"Password\",\n        type: \"password\",\n        validationState: error ? \"error\" : null\n    };\n\n    const AlternativeLogins = () => (\n        <>\n            <ActionLink linkText=\"Login with Azure\" />{\"\\n\"}\n            <ActionLink linkText=\"Login with Curity\" />\n            <div className=\"row no-gutters align-items-center mb-3\">\n                <hr className=\"col-5 border-top\" />{\"\\n\"}\n                <span className=\"col-2 text-center\">or</span>\n                <hr className=\"col-5 border-top\" />\n            </div>\n        </>\n    );\n\n    return (\n        <>\n            {productLabel && <span className=\"extra-small text-secondary-light-1\">{productLabel}</span>}{\"\\n\"}\n            {title && <span className={`${title} mb-4 mt-2 d-block`}>Log in</span>}{\"\\n\"}\n            {alternativeLogins && <AlternativeLogins />}\n            {error && <Alert icon=\"cancel\" type=\"danger\" text={<p><b>Error.</b> Incorrect password</p>}/>}\n            <InputGroup {...emailProps}/>\n            <InputGroup {...passwordProps}/>\n            <div className=\"d-sm-flex d-block justify-content-between mb-3\">\n                <Checkbox id={checkboxId} label=\"Remember me\"/>{\"\\n\"}\n                <LinkComponent linkText=\"Forgot your password?\" className=\"d-block mb-3\"/>\n            </div>{\"\\n\"}\n            <Button type=\"primary\" label=\"Log in\" fullWidth/>\n            {additionalText &&\n                <p className=\"small mt-3\">\n                    {helpDesk && <>\n                        <LinkComponent linkText=\"Contact helpDesk\" /> if you are having trouble signing in.\n                    </>}\n                    {additionalText}\n                </p>}{\"\\n\"}\n            {logo &&\n            <Logotype type=\"vertical d-none d-sm-block mx-auto mt-5\" src={`${basename}designguide/assets/${brand}-logo-v.svg`} size=\"lg\" alt={`${brand}-logo`} />}\n        </>);\n};\n\nLoginForm.protoTypes = {\n    additionalText: PropTypes.string,\n    alternativeLogins: PropTypes.bool,\n    checkboxId: PropTypes.string,\n    defaultEmail: PropTypes.string,\n    defaultPassword: PropTypes.string,\n    emailLabel: PropTypes.string,\n    emailId: PropTypes.string,\n    error: PropTypes.bool,\n    helpDesk: PropTypes.bool,\n    logo: PropTypes.bool,\n    passwordLabel: PropTypes.string,\n    placeholder: PropTypes.string,\n    productLabel: PropTypes.string,\n    title: PropTypes.string\n};\n\nexport default LoginForm;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst ActionLink = props => {\n    const { link, ...otherProps } = props;\n    const actionLinkClasses = classnames(\n        \"action-link\",\n        otherProps.newTab ? \"action-link-new-tab\" : null,\n        otherProps.multiline ? \"multiline\" : null,\n        otherProps.disabled ? \"disabled\" : null,\n        otherProps.className ? otherProps.className : null\n    );\n\n    const attrs = {\n        href: link ? link : \"#\",\n        rel: otherProps.newTab ? \"noopener noreferrer\" : null,\n        target: otherProps.newTab ? \"_blank\" : null\n    };\n\n    return (\n        <>\n            <a className={actionLinkClasses} {...attrs}>{\"\\n\"}\n                <ActionLinkContent {...otherProps}/>\n            </a>\n        </>\n    );\n};\n\nconst ActionLinkContent = ({ linkText, badge, smallText, multiline }) => (\n    <>\n        {multiline ?\n            <>\n                <div className=\"d-flex flex-column\"> {\"\\n\"}\n                    <span className=\"action-link-multiline\"> {\"\\n\"}\n                        <span>{\"\\n\"}<span className=\"action-link-label\">{linkText}</span>{\"\\n\"} {badge ? <span className={`badge ${badge.type}`}>{badge.text}</span> : <></>}{\"\\n\"}</span>\n                        <span className=\"small-text\">{smallText}</span>{\"\\n\"}\n                    </span>\n                </div>\n            </>\n            :\n            <div className=\"d-flex flex-column\">{\"\\n\"}\n                <span className=\"action-link-content\">{\"\\n\"}\n                    <span className={`action-link-label ${badge ? \"\" : \"no-badge\"}`}>{linkText}</span>{\"\\n\"}\n                    {badge ? <span className={`badge ${badge.type}`}>{badge.text}</span> : null}\n                </span>{\"\\n\"}\n            </div>\n        }\n    </>\n);\n\nActionLink.propTypes = {\n    props: PropTypes.shape({\n        linkText: PropTypes.string.isRequired,\n        badge: PropTypes.shape({\n            type: PropTypes.string.isRequired,\n            text: PropTypes.string.isRequired\n        }),\n        smallText: PropTypes.string,\n        multiline: PropTypes.bool,\n        newTab: PropTypes.bool,\n        link: PropTypes.string\n    })\n};\n\nActionLinkContent.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    badge: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }),\n    smallText: PropTypes.string,\n    multiline: PropTypes.bool,\n    newTab: PropTypes.bool\n};\n\nexport default ActionLink;\n\nexport { ActionLinkContent };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, className, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        className ? className : null,\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs} onClick={e => e.preventDefault()}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, tooltip, optional, required, group, options, className }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {optional && <>{\"\\n\"}\n                            <span>(optional)</span>\n                        </>}\n                        {tooltip && <>{\"\\n\"}\n                            <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                    help_outline{\"\\n\"}\n                            </i>\n                        </>}\n                    </legend>\n                    {options.map(({ label, id }, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}\n\n                        </label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${className ? ` ${className}` : \"\"}${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    tooltip: PropTypes.bool,\n    optional: PropTypes.bool\n};\n\nexport default Checkbox;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    className,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    const selectAttrs = {\n        className: \"form-control\",\n        defaultValue: \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        required: required || null\n    };\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}${className ? className : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select {...selectAttrs}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Link = ({ linkText, leftIcon, rightIcon, smallFont, bright, className }) => {\n    const linkClasses = classnames(\n        leftIcon || rightIcon ? \"icon-link\" : null,\n        smallFont ? \"small\" : null,\n        bright ? \"bright\" : null,\n        className ? className : null\n    );\n\n    return (\n        <>\n            <a href=\"\" className={linkClasses} onClick={e => e.preventDefault()}>\n                {leftIcon && <>\n                    {\"\\n\"}<i className=\"material-icons\" aria-hidden=\"true\">\n                        {leftIcon}</i>\n                </>}\n                {leftIcon || rightIcon ? <>\n                    {\"\\n\"}<span className={(leftIcon ? \"ml-2\" : null) || (rightIcon ? \"mr-2\" : null)}>\n                        {linkText}</span>{\"\\n\"}</> : linkText}\n                {rightIcon && <>\n                    <i className=\"material-icons\" aria-hidden=\"true\">{rightIcon}</i>{\"\\n\"}</>}\n            </a>\n        </>\n    );\n};\n\nLink.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    leftIcon: PropTypes.string,\n    rightIcon: PropTypes.string,\n    fontSize: PropTypes.string,\n    bright: PropTypes.bool\n};\n\nexport default Link;\n"],"sourceRoot":""}