{"version":3,"sources":["webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Expandable/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Expandable/index.js","webpack://@swedbankpay/design-guide/./src/App/docutils/NpmInformation/index.js"],"names":["items","id","title","subtitle","content","Overview","type","code","ComponentPreview","language","showCasePanel","codeFigure","ExpandableGroup","className","JavascriptMethods","JavascriptDocs","componentName","open","close","useEffect","expandable","DocContainer","docToc","ExpandablePlaceholder","Array","isArray","map","i","key","NpmInformation","noInit","to","dangerousHTML","propTypes","PropTypes"],"mappings":"6SASMA,EAAQ,CACV,CACIC,GAAI,QACJC,MAAO,WACPC,SAAU,cACVC,QAAS,mbAEb,CACIH,GAAI,QACJC,MAAO,WACPC,SAAU,cACVC,QAAS,mbAEb,CACIH,GAAI,QACJC,MAAO,WACPC,SAAU,cACVC,QAAS,obAIXC,EAAW,kBACb,gCACI,sBAAIJ,GAAG,YAAP,YACA,yFACiE,gBAAC,UAAD,CAAUK,KAAK,YAAYC,KAAK,uBADjG,uBAEY,gBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,qBAF5C,uCAIA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAqBX,MAAOA,OAKlCY,EAAkB,kBACpB,gCACI,sBAAIX,GAAG,oBAAP,oBACA,sDAC8B,gBAAC,UAAD,CAAUK,KAAK,YAAYC,KAAK,sBAD9D,2DAIA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,uBAAKE,UAAU,oBACX,gBAAC,UAAD,CAAqBb,MAAOA,QAMtCc,EAAoB,kBACtB,gCACI,sBAAIb,GAAG,sBAAP,sBACA,gBAAC,EAAAc,eAAD,CAAgBC,cAAc,aAAaC,MAAI,EAACC,OAAK,MAoB7D,UAhBmB,WAGf,OAFAC,gBAAU,WAAQC,sBAAsB,IAGpC,gBAAC,EAAAC,aAAD,CAAcC,QAAM,GAChB,qBAAGT,UAAU,QAAb,mEAGA,gBAACR,EAAD,MACA,gBAACO,EAAD,MACA,gBAACE,EAAD,MACA,gBAAC,UAAD,CAAgBE,cAAe,kB,6GC1ErCO,EAAwB,kBAC1B,uBAAKV,UAAU,cACX,0BAAQA,UAAU,qBACd,iDACA,sDAEJ,uBAAKA,UAAU,mBACX,gDA6BZ,UAvBmB,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAH,OACfA,GACOwB,MAAMC,QAAQzB,GACXA,EAAM0B,KAAI,WAAmCC,GAAnC,IAAGzB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAASH,EAA7B,EAA6BA,GAA7B,OACR,uBAAK2B,IAAKD,EAAGd,UAAU,cAAc,KACjC,0BAAQP,KAAK,SAASO,UAAU,oBAAoB,gBAAc,QAAQ,gBAAeZ,GAAK,KAC1F,wBAAMY,UAAU,uBACXX,GACG,KACR,yBAAOW,UAAU,uBACZV,GACI,MAEb,uBAAKU,UAAU,kBAAkBZ,GAAIA,GACjC,yBAAIG,QAMlB,gBAACmB,EAAD,Q,6GC5BJM,EAAiB,SAAC,GAAD,IAAGb,EAAH,EAAGA,cAAec,EAAlB,EAAkBA,OAAlB,OACnB,+BACI,4CACA,yBAAG,gBAAC,KAAD,CAAMC,GAAG,gCAAT,kBAAH,uCAAoG,gBAAC,UAAD,CAAUzB,KAAK,UAAUC,KAAK,8BAAlI,KACA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,aAAaE,YAAU,EAACqB,eAAa,GAAhE,YACmBhB,EADnB,wCACsF,KACjFc,EAAS,GAAH,UAAWd,EAAX,cAKnBa,EAAeI,UAAY,CACvBjB,cAAekB,WACfJ,OAAQI,UAGZ","file":"scripts/doc-route.chunk_16.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { ComponentPreview, DocContainer, JavascriptDocs } from \"@docutils\";\nimport ExpandableComponent from \"@components/Expandable\";\nimport CodeTags from \"@components/CodeTags\";\n\nimport { expandable } from \"@src/scripts/main\";\nimport NpmInformation from \"@docutils/NpmInformation\";\n\nconst items = [\n    {\n        id: \"exp-1\",\n        title: \"My title\",\n        subtitle: \"My subtitle\",\n        content: \"Proident cupidatat irure excepteur id minim dolore mollit amet reprehenderit consectetur aliqua officia Lorem elit. Cupidatat ea tempor ut esse. Aliquip exercitation in nisi reprehenderit anim Lorem. Excepteur nostrud officia irure tempor aute ipsum. Voluptate nisi incididunt proident enim reprehenderit fugiat fugiat magna sit reprehenderit Lorem anim. Aute commodo cillum nisi consectetur amet eiusmod do tempor incididunt anim.\"\n    },\n    {\n        id: \"exp-2\",\n        title: \"My title\",\n        subtitle: \"My subtitle\",\n        content: \"Proident cupidatat irure excepteur id minim dolore mollit amet reprehenderit consectetur aliqua officia Lorem elit. Cupidatat ea tempor ut esse. Aliquip exercitation in nisi reprehenderit anim Lorem. Excepteur nostrud officia irure tempor aute ipsum. Voluptate nisi incididunt proident enim reprehenderit fugiat fugiat magna sit reprehenderit Lorem anim. Aute commodo cillum nisi consectetur amet eiusmod do tempor incididunt anim.\"\n    },\n    {\n        id: \"exp-3\",\n        title: \"My title\",\n        subtitle: \"My subtitle\",\n        content: \"Proident cupidatat irure excepteur id minim dolore mollit amet reprehenderit consectetur aliqua officia Lorem elit. Cupidatat ea tempor ut esse. Aliquip exercitation in nisi reprehenderit anim Lorem. Excepteur nostrud officia irure tempor aute ipsum. Voluptate nisi incididunt proident enim reprehenderit fugiat fugiat magna sit reprehenderit Lorem anim. Aute commodo cillum nisi consectetur amet eiusmod do tempor incididunt anim.\"\n    }\n];\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>\n            The expandable component shows only what is contained in the <CodeTags type=\"secondary\" code=\".expandable-header\" /> when it is\n            closed. <CodeTags type=\"secondary\" code=\".expandable-body\" /> will be visible in its open state.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ExpandableComponent items={items} />\n        </ComponentPreview>\n    </>\n);\n\nconst ExpandableGroup = () => (\n    <>\n        <h2 id=\"expandable-group\">Expandable Group</h2>\n        <p>\n            If you use a wrapper with <CodeTags type=\"secondary\" code=\".expandable-group\"/> then only one expandable can be open at the\n            same time.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"expandable-group\">\n                <ExpandableComponent items={items} />\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"expandable\" open close />\n    </>\n);\n\nconst Expandable = () => {\n    useEffect(() => { expandable.init(); }, []);\n\n    return (\n        <DocContainer docToc>\n            <p className=\"lead\">\n                Expandables toggle between hiding and showing content on click.\n            </p>\n            <Overview />\n            <ExpandableGroup />\n            <JavascriptMethods />\n            <NpmInformation componentName={\"expandable\"}/>\n        </DocContainer>\n    );\n};\n\nexport default Expandable;\n\n/* For testing */\nexport { Overview, ExpandableGroup };\n","import React from \"react\";\n\nconst ExpandablePlaceholder = () => (\n    <div className=\"expandable\">\n        <button className=\"expandable-header\">\n            <span>Placeholder title</span>\n            <small>Placeholder subtitle</small>\n        </button>\n        <div className=\"expandable-body\">\n            <p>Placeholder text</p>\n        </div>\n    </div>\n);\n\n/* The expandable component acceps either an array or a single object [AW] */\nconst Expandable = ({ items }) => (\n    items\n        ? (Array.isArray(items)\n            ? items.map(({ title, subtitle, content, id }, i) => (\n                <div key={i} className=\"expandable\">{\"\\n\"}\n                    <button type=\"button\" className=\"expandable-header\" aria-expanded=\"false\" aria-controls={id}>{\"\\n\"}\n                        <span className=\"expandable-headline\">\n                            {title}\n                        </span>{\"\\n\"}\n                        <small className=\"expandable-subtitle\">\n                            {subtitle}\n                        </small>{\"\\n\"}\n                    </button>\n                    <div className=\"expandable-body\" id={id}>\n                        <p>{content}</p>\n                    </div>\n                </div>\n            )) :\n            <ExpandablePlaceholder />\n        )\n        : <ExpandablePlaceholder />\n);\n\nexport default Expandable;\n\nexport { ExpandablePlaceholder };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { ComponentPreview } from \"@docutils\";\nimport CodeTags from \"../../components/CodeTags\";\n\nconst NpmInformation = ({ componentName, noInit }) => (\n    <section>\n        <h3>Usage with NPM</h3>\n        <p><Link to=\"/get-started/for-developers/\">Usage with NPM</Link> will require you to import it from <CodeTags type=\"primary\" code=\"@swedbankpay/design-guide\" />.</p>\n        <ComponentPreview language=\"javascript\" codeFigure dangerousHTML>\n            import &#123; {componentName} &#125; from &quot;@swedbankpay/design-guide&quot;; {\"\\n\"}\n            {noInit ? \"\" : `${componentName}.init()`}\n        </ComponentPreview>\n    </section>\n);\n\nNpmInformation.propTypes = {\n    componentName: PropTypes.string,\n    noInit: PropTypes.bool\n};\n\nexport default NpmInformation;\n"],"sourceRoot":""}