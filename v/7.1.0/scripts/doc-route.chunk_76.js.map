{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/Identity/identity/Typography/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Button/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","basename","process","Typefaces","className","id","href","Desktop","to","Mobile","Code","ComponentPreview","language","showCasePanel","codeFigure","type","code","title","target","rel","Headings","HeroTitle","Lead","Inline","TextUtilities","Abbreviations","Blockquotes","BlockquotesText","BlockquoteWithSourceText","AkkuratMono","icon","label","useEffect","expandable","DocContainer","Button","name","value","loading","disabled","btnType","fullWidth","pullRight","input","active","size","bankId","btnClasses","classnames","attrs","defaultValue","role","tabIndex","onClick","e","preventDefault","propTypes","PropTypes","isRequired","loader"],"mappings":"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","file":"scripts/doc-route.chunk_76.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport Button from \"@components/Button\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst basename = process.env.basename;\nconst brand = process.env.brand;\n\nimport { expandable } from \"@src/scripts/main\";\n\nconst Typefaces = () => (\n    <section className=\"typography-typefaces\">\n        <h2 id=\"typefaces\">Typefaces</h2>\n        <div className=\"illustration mb-3\">\n            <div className=\"swedbank-headline\">\n                Ag\n                <span>Swedbank Headline</span>\n            </div>\n            <div className=\"arial\">\n                Ag\n                <span>Arial</span>\n            </div>\n            <div className=\"akkurat-mono\">\n                Ag\n                <span>Akkurat Mono</span>\n            </div>\n        </div>\n\n        <a href={`${basename}release/fonts/Fonts.zip`} className=\"icon-link\">\n            <i className=\"material-icons\" aria-hidden=\"true\">download</i>\n            <span className=\"ml-2\">Download all Swedbank Pay typefaces</span>\n        </a>\n\n        <h3>Area of usages</h3>\n        <ul className=\"list list-bullet\">\n            <li><span className=\"swedbank-headline\">Swedbank Headline</span> – used for headlines and lead texts</li>\n            <li><span className=\"arial font-weight-bold\">Arial</span> – used for sub headlines and body texts</li>\n            <li><span className=\"akkurat-mono\">Akkurat Mono</span> – used for code examples and snippets</li>\n        </ul>\n\n        <h3>Be respectful of content hierarchy</h3>\n        <p>\n            In order for us to create good and accessible structure in our products, it’s mandatory to include heading levels.\n            No more than one h1 should be present on the page and if you have used h2 and want to show hierarchy in content, h3 should be used next and so on.\n        </p>\n    </section>\n);\n\nconst Desktop = () => (\n    <section className=\"typography-desktop\">\n        <h2 id=\"desktop-text-styles\">Desktop text styles</h2>\n        <p>\n            Our desktop text styles are meant to be used in all desktop and tablet sizes. The text should break to mobile styles at viewport width 767 px.\n            See all the <Link to=\"/identity/grid\">breakpoints in the Grid section</Link>.\n        </p>\n\n        <table className=\"table table-plain typography-table\">\n            <thead>\n                <tr>\n                    <th>Desktop text preview</th>\n                    <th>Typeface</th>\n                    <th>Size</th>\n                    <th>Line-height</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><span className=\"hero\">Hero</span></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>56 px</td>\n                    <td>72 px</td>\n                </tr>\n                <tr>\n                    <td><h1 className=\"m-0\">Title 1</h1></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>40 px</td>\n                    <td>48 px</td>\n                </tr>\n                <tr>\n                    <td><h2>Title 2</h2></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>24 px</td>\n                    <td>32 px</td>\n                </tr>\n                <tr>\n                    <td><h3>Title 3</h3></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>20 px</td>\n                    <td>24 px</td>\n                </tr>\n                <tr>\n                    <td><h4>Title 4</h4></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>16 px</td>\n                    <td>20 px</td>\n                </tr>\n                <tr>\n                    <td><h5>Title 5</h5></td>\n                    <td>Arial bold</td>\n                    <td>14 px</td>\n                    <td>20 px</td>\n                </tr>\n                <tr>\n                    <td><h6>TITLE 6</h6></td>\n                    <td>Arial regular</td>\n                    <td>12 px</td>\n                    <td>16 px</td>\n                </tr>\n                <tr>\n                    <td><small>Small text</small></td>\n                    <td>Arial regular</td>\n                    <td>14 px</td>\n                    <td>20 px</td>\n                </tr>\n                <tr>\n                    <td><span className=\"extra-small\">Extra small text</span></td>\n                    <td>Arial regular</td>\n                    <td>12 px</td>\n                    <td>16 px</td>\n                </tr>\n            </tbody>\n        </table>\n    </section>\n);\n\nconst Mobile = () => (\n    <section>\n        <h2 id=\"mobile-text-styles\">Mobile text styles</h2>\n        <p>\n            Our mobile text styles are meant to be used in all mobile views.\n            The text should break to desktop styles at viewport width 768 px. See all the <Link to=\"/identity/grid\">breakpoints in the Grid section</Link>.\n        </p>\n\n        <table className=\"table table-plain typography-table mobile\">\n            <thead>\n                <tr>\n                    <th>Mobile text preview</th>\n                    <th>Typeface</th>\n                    <th>Size</th>\n                    <th>Line-height</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><span className=\"hero\">Hero</span></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>40 px</td>\n                    <td>48 px</td>\n                </tr>\n                <tr>\n                    <td><h1 className=\"m-0\">Title 1</h1></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>24 px</td>\n                    <td>32 px</td>\n                </tr>\n                <tr>\n                    <td><h2>Title 2</h2></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>20 px</td>\n                    <td>24 px</td>\n                </tr>\n                <tr>\n                    <td><h3>Title 3</h3></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>18 px</td>\n                    <td>24 px</td>\n                </tr>\n                <tr>\n                    <td><h4>Title 4</h4></td>\n                    <td>Swedbank Headline Bold</td>\n                    <td>16 px</td>\n                    <td>20 px</td>\n                </tr>\n                <tr>\n                    <td><h5>Title 5</h5></td>\n                    <td>Arial bold</td>\n                    <td>14 px</td>\n                    <td>20 px</td>\n                </tr>\n                <tr>\n                    <td><h6>TITLE 6</h6></td>\n                    <td>Arial regular</td>\n                    <td>12 px</td>\n                    <td>16 px</td>\n                </tr>\n                <tr>\n                    <td>Body</td>\n                    <td>Arial regular</td>\n                    <td>16 px</td>\n                    <td>24 px</td>\n                </tr>\n                <tr>\n                    <td><small>Small text</small></td>\n                    <td>Arial regular</td>\n                    <td>14 px</td>\n                    <td>20 px</td>\n                </tr>\n                <tr>\n                    <td><span className=\"extra-small\">Extra small text</span></td>\n                    <td>Arial regular</td>\n                    <td>12 px</td>\n                    <td>16 px</td>\n                </tr>\n            </tbody>\n        </table>\n    </section>\n);\n\nconst Code = () => (\n    <section>\n        <h2 id=\"how-it-works-in-code\">How it works in code</h2>\n\n        <h3>Headings</h3>\n        <p>Swedbank Pay Design Guide provides basic styling on all headings (h1-h6).</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1>Heading h1</h1>\n            <h2>Heading h2</h2>\n            <h3>Heading h3</h3>\n            <h4>Heading h4</h4>\n            <h5>Heading h5</h5>\n            <h6>Heading h6</h6>\n        </ComponentPreview>\n        <p>The classes <CodeTags type=\"secondary\" code=\".h1\" /> through <CodeTags type=\"secondary\" code=\".h6\" /> are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"h1\">.h1 heading</p>\n            <p className=\"h2\">.h2 heading</p>\n            <p className=\"h3\">.h3 heading</p>\n            <p className=\"h4\">.h4 heading</p>\n            <p className=\"h5\">.h5 heading</p>\n            <p className=\"h6\">.h6 heading</p>\n        </ComponentPreview>\n\n        <h3>Hero title</h3>\n        <p>The class <CodeTags type=\"secondary\" code=\".hero\" /> can be used to achieve the big and bold hero title styling.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1 className=\"hero\">Hero title</h1>\n            <p className=\"hero\">Hero title</p>\n        </ComponentPreview>\n\n        <h3>Lead</h3>\n        <p>Make a paragraph stand out by using <CodeTags type=\"secondary\" code=\".lead\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"lead\">This is a leading paragraph which for instance can be used as an introduction.</p>\n        </ComponentPreview>\n\n        <h3>Inline text elements</h3>\n        <p>Styling for common inline HTML5 elements.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n            <p><u>This line of text will render as underlined</u></p>\n            <p><small>This line of text is meant to be treated as fine print.</small></p>\n            <p><strong>This line rendered as bold text.</strong></p>\n            <p><b>This line really stands out.</b></p>\n            <p><em>This line rendered as italicized text.</em></p>\n            <p><i>This is the last line, it too will render as italicized text.</i></p>\n        </ComponentPreview>\n        <p>\n            The <CodeTags type=\"secondary\" code=\".mark\" /> and <CodeTags type=\"secondary\" code=\".small\" /> classes are also available to apply the same styles\n            as <CodeTags type=\"primary\" code={\"<mark>\"} /> and <CodeTags type=\"primary\" code={\"<small>\"} /> while\n            avoiding any unwanted semantic implications that the tags would bring.\n        </p>\n        <p>\n            While not shown above, feel free to use <CodeTags type=\"primary\" code={\"<b>\"} /> and <CodeTags type=\"primary\" code={\"<i>\"} /> in\n            HTML5. <CodeTags type=\"primary\" code={\"<b>\"} /> is meant to highlight words or phrases without conveying additional importance\n            while <CodeTags type=\"primary\" code={\"<i>\"} /> is mostly for voice, technical terms, etc.\n        </p>\n\n        <h3>Text utilities</h3>\n        <p>Change text color with our <Link to=\"/utilities/colors\">color utilities</Link>.</p>\n\n        <h3>Abbreviations</h3>\n        <p>Stylized implementation of HTML’s <CodeTags type=\"primary\" code={\"<abbr>\"} /> element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.</p>\n        <p>Add <CodeTags type=\"secondary\" code=\".initialism\" /> to an abbreviation for a slightly smaller font-size.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p><abbr title=\"Laugh Out Loud\">LOL</abbr></p>\n            <p><abbr title=\"HyperText Markup Language\" className=\"initialism\">HTML</abbr></p>\n        </ComponentPreview>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr\" target=\"_blank\" rel=\"noopener noreferrer\">Read more</a> about abbreviations.</p>\n\n        <h3>Blockquotes</h3>\n        <p>For quoting blocks of content from another source within your document. Wrap <CodeTags type=\"primary\" code={\"<blockquote>\"} /> or <CodeTags type=\"secondary\" code=\".blockquote\" /> around any HTML as the quote.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <blockquote className=\"blockquote\">\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n            </blockquote>\n        </ComponentPreview>\n\n        <h4>Naming a source</h4>\n        <p>Add a <CodeTags type=\"primary\" code={\"<footer>\"} /> for identifying the source. Wrap the name of the source work in <CodeTags type=\"primary\" code={\"<cite>\"} />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <blockquote className=\"blockquote\">\n                <p>\n                    Better learn balance. Balance is key. Balance good, karate good. Everything good. Balance bad, better pack up, go home. Understand?\n                </p>\n                <footer><cite title=\"The Karate Kid (1984)\">Mr. Miyagi</cite></footer>\n            </blockquote>\n        </ComponentPreview>\n    </section>\n);\n\nconst Headings = () => (\n    <>\n        <h2 id=\"headings\">Headings</h2>\n        <p>{process.env.brandTitle} Design Guide provides basic styling on all headings (h1-h6).</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1>Heading h1</h1>\n            <h2>Heading h2</h2>\n            <h3>Heading h3</h3>\n            <h4>Heading h4</h4>\n            <h5>Heading h5</h5>\n            <h6>Heading h6</h6>\n        </ComponentPreview>\n        <p>The classes <CodeTags type=\"secondary\" code=\".h1\" /> through <CodeTags type=\"secondary\" code=\".h6\" /> are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"h1\">.h1 heading</p>\n            <p className=\"h2\">.h2 heading</p>\n            <p className=\"h3\">.h3 heading</p>\n            <p className=\"h4\">.h4 heading</p>\n            <p className=\"h5\">.h5 heading</p>\n            <p className=\"h6\">.h6 heading</p>\n        </ComponentPreview>\n    </>\n);\n\nconst HeroTitle = () => (\n    <>\n        <h2 id=\"hero-title\">Hero title</h2>\n        <p>The class <CodeTags type=\"secondary\" code=\".hero\" /> can be used to achieve the big and bold hero title styling.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1 className=\"hero\">Hero title</h1>\n            <p className=\"hero\">Hero title</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Lead = () => (\n    <>\n        <h2 id=\"lead\">Lead</h2>\n        <p>Make a paragraph stand out by using <CodeTags type=\"secondary\" code=\".lead\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"lead\">This is a leading paragraph which for instance can be used as an introduction.</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Inline = () => (\n    <>\n        <h2 id=\"inline-text-elements\">Inline text elements</h2>\n        <p>Styling for common inline HTML5 elements.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n            <p><u>This line of text will render as underlined</u></p>\n            <p><small>This line of text is meant to be treated as fine print.</small></p>\n            <p><strong>This line rendered as bold text.</strong></p>\n            <p><b>This line really stands out.</b></p>\n            <p><em>This line rendered as italicized text.</em></p>\n            <p><i>This is the last line, it too will render as italicized text.</i></p>\n        </ComponentPreview>\n        <p>\n            The <CodeTags type=\"secondary\" code=\".mark\" /> and <CodeTags type=\"secondary\" code=\".small\" /> classes are also available to apply the same styles\n            as <CodeTags type=\"primary\" code={\"<mark>\"} /> and <CodeTags type=\"primary\" code={\"<small>\"} /> while\n            avoiding any unwanted semantic implications that the tags would bring.\n        </p>\n        <p>\n        While not shown above, feel free to use <CodeTags type=\"primary\" code={\"<b>\"} /> and <CodeTags type=\"primary\" code={\"<i>\"} /> in\n        HTML5. <CodeTags type=\"primary\" code={\"<b>\"} /> is meant to highlight words or phrases without conveying additional importance\n        while <CodeTags type=\"primary\" code={\"<i>\"} /> is mostly for voice, technical terms, etc.\n        </p>\n    </>\n);\n\nconst TextUtilities = () => (\n    <>\n        <h2 id=\"text-utilities\">Text utilities</h2>\n        <p>Change text color with our <Link to=\"/utilities/colors\">color utilities</Link>.</p>\n    </>\n);\n\nconst Abbreviations = () => (\n    <>\n        <h2 id=\"abbreviations\">Abbreviations</h2>\n        <p>Stylized implementation of HTML’s <CodeTags type=\"primary\" code={\"<abbr>\"} /> element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.</p>\n        <p>Add <CodeTags type=\"secondary\" code=\".initialism\" /> to an abbreviation for a slightly smaller font-size.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p><abbr title=\"Laugh Out Loud\">LOL</abbr></p>\n            <p><abbr title=\"HyperText Markup Language\" className=\"initialism\">HTML</abbr></p>\n        </ComponentPreview>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr\" target=\"_blank\" rel=\"noopener noreferrer\">Read more</a> about abbreviations.</p>\n    </>\n);\n\nconst Blockquotes = () => {\n    const BlockquotesText = () => (\n        <>\n            <h2 id=\"blockquotes\">Blockquotes</h2>\n            <p>For quoting blocks of content from another source within your document. Wrap <CodeTags type=\"primary\" code={\"<blockquote>\"} /> or <CodeTags type=\"secondary\" code=\".blockquote\" /> around any HTML as the quote.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    const BlockquoteWithSourceText = () => (\n        <>\n            <h3>Naming a source</h3>\n            <p>Add a <CodeTags type=\"primary\" code={\"<footer>\"} /> for identifying the source. Wrap the name of the source work in <CodeTags type=\"primary\" code={\"<cite>\"} />.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>\n                        Better learn balance. Balance is key. Balance good, karate good. Everything good. Balance bad, better pack up, go home. Understand?\n                    </p>\n                    <footer><cite title=\"The Karate Kid (1984)\">Mr. Miyagi</cite></footer>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    return (\n        <>\n            <BlockquotesText />\n            <BlockquoteWithSourceText />\n        </>\n    );\n};\n\nconst AkkuratMono = () => (\n    <>\n        <h2 id=\"akkurat-mono\">Akkurat Mono</h2>\n        <p>The Akkurat Mono font should be used when code is to be presented, for instance with code tags.</p>\n\n        <h3>Download</h3>\n        <div className=\"slab slab-default slab-elevated\">\n            <p>Before downloading the Akkurat Mono font, make sure to understand the correct usages of Akkurat Mono.</p>\n            <Button type=\"primary\" icon=\"file_download\" href={`${basename}release/fonts/AkkuratMono.zip`} label=\"Akkurat Mono\" />\n        </div>\n    </>\n);\n\nconst Typography = () => {\n\n    useEffect(() => { expandable.init(); });\n\n    return (\n        <DocContainer>\n            {brand === \"swedbankpay\" ?\n                <>\n                    <section id=\"intro\">\n                        <p className=\"lead\">\n                            The main font for Swedbank Pay is Swedbank Headline Bold, a custom made typeface with an open, welcoming visual voice.\n                            In addition Arial is used for non-print body text.\n                        </p>\n                    </section>\n                    <Typefaces />\n                    <Desktop />\n                    <Mobile />\n                    <Code />\n                </>\n                :\n                <>\n                    <Headings />\n                    <HeroTitle />\n                    <Lead />\n                    <Inline />\n                    <TextUtilities />\n                    <Abbreviations />\n                    <Blockquotes />\n                    <AkkuratMono />\n                </>\n            }\n        </DocContainer>\n    );\n};\n\nexport default Typography;\n\n/* For testing */\nexport { Typefaces, Desktop, Mobile, Code, Headings, HeroTitle, Lead, Inline, TextUtilities, Abbreviations, Blockquotes, AkkuratMono };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, className, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        className ? className : null,\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs} onClick={e => e.preventDefault()}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport default Button;\n"],"sourceRoot":""}