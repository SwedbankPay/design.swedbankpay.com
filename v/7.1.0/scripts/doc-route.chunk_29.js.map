{"version":3,"sources":["webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Rangeslider/constants.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Rangeslider/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Rangeslider/index.js","webpack://@swedbankpay/design-guide/./src/App/docutils/NpmInformation/index.js"],"names":["howToUse","type","component","Rangeslider","label","min","max","value","text","valueLabelPostfix","valueLabelPrefix","className","sliderShowCase","id","elements","options","checkbox","title","inputs","name","tooltip","radio","values","disabled","description","Overview","ComponentPreview","language","showCasePanel","showCasePanelAdvanced","codeFigure","to","map","i","key","DisableState","ContentGuidelines","DeveloperDocumentation","CodeTags","code","href","useEffect","rangeslider","DocContainer","NpmInformation","componentName","step","attrs","defaultValue","htmlFor","propTypes","PropTypes","noInit","dangerousHTML"],"mappings":"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","file":"scripts/doc-route.chunk_29.js","sourcesContent":["import React from \"react\";\nimport Rangeslider from \"@components/Rangeslider\";\n\nexport const howToUse = [\n    {\n        type: \"success\",\n        component: <Rangeslider label=\"Label\" min={0} max={200} value={100}/>,\n        text: <p>Do use <b>sliders</b> for content with numeric values.</p>\n    },\n    {\n        type: \"success\",\n        component: <Rangeslider label=\"Label\" min={0} max={100} value={50} valueLabelPostfix=\"%\"/>,\n        text: <p>The <b>sliders</b> component also have a post label for special symbols to help the user easier understand the slider value. It could be shown as above with the percentage symbol.</p>\n    },\n    {\n        type: \"success\",\n        component: <Rangeslider label=\"Label\" min={0} max={200} value={100} valueLabelPrefix=\"$\" />,\n        text: <p>It also have a pre label for other symbols such as currency e.g. €, $ and £.</p>\n    },\n    {\n        type: \"error\",\n        component: <Rangeslider label=\"Label\" value={50} />,\n        text: <p>Don’t modify and remove label and maximum/minimum indicators as this makes it harder for user to grasp the content and context of use.</p>\n    },\n    {\n        type: \"error\",\n        component:\n            <div>\n                <div className=\"rangeslider\">\n                    <input type=\"range\"/>\n                    <div className=\"d-flex justify-content-between\">\n                        <p className=\"rangeslider-label\">Label</p>\n                        <output className=\"value-label px-2 align-items-center\">\n                            Average\n                        </output>\n                    </div>\n                    <div className=\"value-range\">\n                        <small>Poor</small>\n                        <small>Great</small>\n                    </div>\n                </div>\n            </div>,\n        text: <p>Don’t use sliders for content without numeric values.</p>\n    }\n];\n\nexport const sliderShowCase = {\n    id: \"no-tabs\",\n    elements: [\n        {\n            component: <Rangeslider label=\"Label\" min={0} max={100} value={50}/>,\n            options: {\n                checkbox: [\n                    {\n                        title: \"Label add on\",\n                        inputs: [\n                            {\n                                id: \"help_icon\",\n                                name: \"With help icon\",\n                                value: {\n                                    tooltip: true\n                                }\n                            }\n                        ]\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"unit_radio\",\n                        title: \"Unit value\",\n                        values: [\n                            {\n                                name: \"Default\",\n                                value: {\n                                    valueLabelPrefix: \"\",\n                                    valueLabelPostfix: \"\"\n                                }\n                            },\n                            {\n                                name: \"Currency\",\n                                value: {\n                                    valueLabelPrefix: \"$\"\n                                }\n                            },\n                            {\n                                name: \"Percent\",\n                                value: {\n                                    valueLabelPostfix: \"%\"\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        id: \"state_radio\",\n                        title: \"State modifiers\",\n                        values: [\n                            {\n                                name: \"Enabled\",\n                                value: {\n                                    disabled: false\n                                }\n                            },\n                            {\n                                name: \"Disabled\",\n                                value: {\n                                    disabled: true\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Slider\",\n            description: \"The slider component has a label which decribes the intent of the slider. It also has a minimum and maximum range which displays the range which user can pick inbetween. By holding and draging the circle indicator along the line, the user can see the value change and update in real time.\"\n        }\n    ]\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport { howToUse, sliderShowCase } from \"./constants\";\nimport CodeTags from \"@components/CodeTags\";\nimport RangesliderComponent from \"~/src/App/components/Rangeslider\";\n\nimport { rangeslider } from \"@src/scripts/main\";\nimport NpmInformation from \"@docutils/NpmInformation\";\n\nconst Overview = () => (\n    <section>\n        <h2 id=\"overview\">Overview</h2>\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={sliderShowCase} codeFigure />\n\n        <h3>When to consider something else</h3>\n        <ul className=\"list list-bullet\">\n            <li>Use a <Link to=\"/components/input-field\">text input</Link> instead when the user needs to select specific number.</li>\n        </ul>\n\n        <h3>How to use sliders</h3>\n\n        {howToUse.map(({ type, component, text }, i) => (\n            <React.Fragment key={i}>\n                <div className={`slab slab-plain slab-border-${type} h-100 mb-2`}>\n                    <h3 className=\"mt-0\">Do{type === \"error\" && \"n’t\"}</h3>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"py-3 col-12 col-lg-8\">\n                            {component}\n                        </div>\n                    </div>\n                </div>\n                {text}\n            </React.Fragment>\n        ))}\n        <DisableState/>\n    </section>\n);\n\nconst ContentGuidelines = () => (\n    <section>\n        <h2 id=\"content-guidelines\">Content guidelines</h2>\n\n        <div className=\"slab slab-plain h-100 mb-2\">\n            <div className=\"d-flex flex-column align-items-center\">\n                <div className=\"py-3 col-12 col-lg-8\">\n                    <div>\n                        <div className=\"rangeslider\">\n                            <input type=\"range\"/>\n                            <div className=\"d-flex justify-content-between\">\n                                <p className=\"rangeslider-label\">Label</p>\n                                <output className=\"value-label px-2 align-items-center\">\n                                    Selected Value\n                                </output>\n                            </div>\n                            <div className=\"value-range\">\n                                <small>Minimum Value</small>\n                                <small>Maximum Value</small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <ul className=\"list list-bullet\">\n            <li>The <b>label</b> should clearly explain the context of the slider</li>\n            <li>Make sure to align the <b>values</b> so that they all follow the same structure and not mixed values or symbols</li>\n        </ul>\n    </section>\n);\n\nconst DeveloperDocumentation = () => (\n    <section>\n        <h2 id=\"developer-documentation mb-3\">Developer documentation</h2>\n        <h3>Javascript methods</h3>\n        <p className=\"my-3\">Use <CodeTags type=\"secondary\" code=\"dg.rangeslider.init()\"/> to <a href=\"/get-started/for-developers\" >initialize</a> all rangesliders.</p>\n        <p>Or <CodeTags type=\"secondary\" code='dg.rangeslider.init(\"component-id\")'/> to initialize one specific component.</p>\n    </section>\n);\n\nconst DisableState = () => (\n    <>\n        <h3>Disabled state</h3>\n        <p>Disable a slider by adding <CodeTags type=\"primary\" code=\"disabled\"/> attribute to the desired slider. </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className = \"d-flex flex-column align-items-center\">\n                <div className=\"py-3 col-12 col-lg-8\">\n                    <RangesliderComponent label=\"Label\" min={0} max={100} value={50} disabled/>\n                </div>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst Rangeslider = () => {\n    useEffect(() => {\n        rangeslider.init();\n    });\n\n    return (\n        <DocContainer>\n            <p className=\"lead\">The slider component lets the user increase and decrease the value by moving the slider along a horizontal line and lets the user choose a value</p>\n            <Overview />\n            <ContentGuidelines />\n            <DeveloperDocumentation />\n            <NpmInformation componentName={\"rangeslider\"}/>\n        </DocContainer>\n    );\n};\n\nexport default Rangeslider;\n\nexport { Overview, ContentGuidelines, DeveloperDocumentation };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ label, name, min, max, step, value, disabled, valueLabelPrefix, valueLabelPostfix, tooltip }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    return (\n        <div className=\"rangeslider\">{\"\\n\"}\n            <input {...attrs}/>{\"\\n\"}\n            <div className=\"d-flex justify-content-between\">{\"\\n\"}\n                <label htmlFor=\"rangeslider\" className=\"rangeslider-label\">{\"\\n\"}\n                    {label}{\"\\n\"}\n                    {tooltip &&\n                        <>\n                            <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                            </i>{\"\\n\"}\n                        </>}\n                </label>{\"\\n\"}\n                <output className=\"value-label\" >{\"\\n\\t\\t\"}\n                    <p>{\"\\n\\t\\t\\t\"}\n                        {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                        <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                        {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n                    </p>\n                </output>\n            </div>\n            <div className=\"value-range\">{\"\\n\"}\n                <small>{valueLabelPrefix ? valueLabelPrefix : null}{min}{valueLabelPostfix ? valueLabelPostfix : null}</small>{\"\\n\"}\n                <small>{valueLabelPrefix ? valueLabelPrefix : null}{max}{valueLabelPostfix ? valueLabelPostfix : null}</small>{\"\\n\"}\n            </div>\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { ComponentPreview } from \"@docutils\";\nimport CodeTags from \"../../components/CodeTags\";\n\nconst NpmInformation = ({ componentName, noInit }) => (\n    <section>\n        <h3>Usage with NPM</h3>\n        <p><Link to=\"/get-started/for-developers/\">Usage with NPM</Link> will require you to import it from <CodeTags type=\"primary\" code=\"@swedbankpay/design-guide\" />.</p>\n        <ComponentPreview language=\"javascript\" codeFigure dangerousHTML>\n            import &#123; {componentName} &#125; from &quot;@swedbankpay/design-guide&quot;; {\"\\n\"}\n            {noInit ? \"\" : `${componentName}.init()`}\n        </ComponentPreview>\n    </section>\n);\n\nNpmInformation.propTypes = {\n    componentName: PropTypes.string,\n    noInit: PropTypes.bool\n};\n\nexport default NpmInformation;\n"],"sourceRoot":""}