{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/components/InputGroup/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","Addon","type","value","color","disabled","className","Feedback","icon","InputGroup","id","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","tooltip","optional","attrs","inputGrpClasses","classnames","selectAttrs","htmlFor","map","opt","Fragment","hidden","propTypes","PropTypes"],"mappings":"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","file":"scripts/doc-route.chunk_110.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    className,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    const selectAttrs = {\n        className: \"form-control\",\n        defaultValue: \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        required: required || null\n    };\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}${className ? className : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select {...selectAttrs}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport default InputGroup;\n"],"sourceRoot":""}