{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedSettings/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Checkbox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Radio.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Togglebox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Datepicker.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/FormControlText.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/index.js","webpack://@swedbankpay/design-guide/./src/App/components/InputGroup/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","className","Togglebox","id","checked","label","keys","map","item","Checkbox","type","selectOptions","prefixValue","name","disabled","groupTitle","errorMessage","tooltip","optional","required","group","options","attrs","defaultChecked","htmlFor","propTypes","PropTypes","require","Radio","labelTop","Datepicker","format","time","min","max","months","value","prefixType","fulldate","mode","allowinput","placeholder","Addon","FormControlText","text","color","Feedback","icon","InputGroup","pattern","validate","defaultValue","autoComplete","readOnly","validationState","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","successMessage","inputGrpClasses","classnames","selectAttrs","opt","Fragment","hidden"],"mappings":"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","file":"scripts/doc-route.chunk_48.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\n\nimport { Togglebox, Checkbox } from \"@components/FormComponents\";\nimport InputGroup from \"@components/InputGroup\";\n\nconst CustomersDetailedSettings = () => (\n    <>\n        <h3>Notifications</h3>\n        <div className=\"row justify-content-around mt-3\">\n            <div className=\"col-lg-auto m-2\">\n                <div className=\"d-flex flex-column\">\n                    <Togglebox id=\"customers-detailed-settings-toggle-1\" checked label=\"Delivery status changes\" />\n                    <Togglebox id=\"customers-detailed-settings-toggle-3\" label=\"Critical delivery messages\" />\n                </div>\n            </div>\n            <div className=\"col-lg-auto m-2\">\n                <Togglebox id=\"customers-detailed-settings-toggle-2\" label=\"New inquiry messages\" />\n                <Togglebox id=\"customers-detailed-settings-toggle-4\" checked label=\"Inquiry status changes\" />\n            </div>\n        </div>\n        <h3>Newsletter and information</h3>\n        <div className=\"row mt-4\">\n            {[...Array(7).keys()].map(item => (\n                <div key={item} className=\"col-lg-3 col-md-4 col-sm-6\">\n                    <Checkbox id={`customers-detailed-settings-checkbox-${item}`} checked label={`Subscription #${item + 1}`} />\n                </div>\n            ))}\n        </div>\n\n        <h3>Customer type</h3>\n        <InputGroup\n            type=\"select\"\n            selectOptions={[\"Long-term contract\", \"Short-term contract\", \"One time purchase\"]}\n            prefixValue=\"Type\"\n        />\n\n        <button className=\"btn btn-primary\">Save</button>\n    </>\n);\n\nexport default CustomersDetailedSettings;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, tooltip, optional, required, group, options, className }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {optional && <>{\"\\n\"}\n                            <span>(optional)</span>\n                        </>}\n                        {tooltip && <>{\"\\n\"}\n                            <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                    help_outline{\"\\n\"}\n                            </i>\n                        </>}\n                    </legend>\n                    {options.map(({ label, id }, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}\n\n                        </label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${className ? ` ${className}` : \"\"}${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    tooltip: PropTypes.bool,\n    optional: PropTypes.bool\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, tooltip, required, className }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ?\n                <fieldset className={`radio-group${className ? ` ${className}` : \"\"}`} disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {tooltip && <>\n                            {\"\\n\"}<i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}</i>\n                        </>}{\"\\n\"}\n                    </legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool,\n    tooltip: PropTypes.bool,\n    className: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label, tooltip, labelTop }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className={`togglebox${labelTop ? \" label-top\" : \"\"}`}>{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}\n                {label}{\"\\n\"}\n                {tooltip &&\n                    <>\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                        </i>{\"\\n\"}\n                    </>}\n            </label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, placeholder, id }) => {\n    const attrs = {\n        id,\n        placeholder,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    className,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    const selectAttrs = {\n        className: \"form-control\",\n        defaultValue: \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        required: required || null\n    };\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}${className ? className : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select {...selectAttrs}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport default InputGroup;\n"],"sourceRoot":""}