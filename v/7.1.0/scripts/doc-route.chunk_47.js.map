{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedDatePickerGroup/index.js","webpack://@swedbankpay/design-guide/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedOrders/index.js","webpack://@swedbankpay/design-guide/./src/App/components/ActionLink/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Checkbox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Radio.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Togglebox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Datepicker.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/FormControlText.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/index.js","webpack://@swedbankpay/design-guide/./src/App/components/InputGroup/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Steps/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","useEffect","datepicker","className","Datepicker","value","label","prefixType","prefixValue","fulldate","id","CustomersDetailedOrders","customersDetailedOrdersSteps","customersDetailedOrders","linkText","smallText","multiline","steps","vertical","map","order","propTypes","PropTypes","title","ongoing","completed","selected","isRequired","ActionLink","props","link","otherProps","actionLinkClasses","classnames","newTab","disabled","attrs","href","rel","target","ActionLinkContent","badge","type","text","Checkbox","checked","name","groupTitle","errorMessage","tooltip","optional","required","group","options","defaultChecked","htmlFor","require","Radio","Togglebox","labelTop","format","time","min","max","months","mode","allowinput","placeholder","Addon","FormControlText","color","Feedback","icon","InputGroup","pattern","validate","defaultValue","autoComplete","readOnly","validationState","selectOptions","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","successMessage","inputGrpClasses","selectAttrs","opt","Fragment","hidden","DefaultSteps","subtitle","StepsContent","index","RenderSteps","clickable","RenderStepsNav","clickableItem","some","item","arrowLeft","arrowRight","Steps","stepsClasses"],"mappings":"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","file":"scripts/doc-route.chunk_47.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { useEffect } from \"react\";\n\nimport { Datepicker as DatepickerComponent } from \"@components/FormComponents\";\n\nimport { datepicker } from \"@src/scripts/main\";\n\nconst CustomersDetailedDatePickerGroup = () => {\n\n    useEffect(() => {\n        datepicker.init();\n    });\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <DatepickerComponent\n                    value=\"2000-01-01\"\n                    label=\"From:\"\n                    prefixType=\"icon\"\n                    prefixValue=\"event\"\n                    fulldate\n                    id=\"init-value-datepicker-from\"\n                />\n            </div>\n            <div className=\"col-sm-6\">\n                <DatepickerComponent\n                    value=\"2020-01-01\"\n                    label=\"To:\"\n                    prefixType=\"icon\"\n                    prefixValue=\"event\"\n                    fulldate\n                    id=\"init-value-datepicker-to\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default CustomersDetailedDatePickerGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CustomersDetailedDatePickerGroup from \"../CustomersDetailedDatePickerGroup\";\nimport StepsComponent from \"@components/Steps\";\nimport ActionLinkComponent from \"@components/ActionLink\";\n\nconst CustomersDetailedOrders = ({ customersDetailedOrdersSteps, customersDetailedOrders }) => (\n    <>\n        <h3>Latest order</h3>\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n                <div className=\"slab border slab-elevated\">\n                    <h5>Order: OrderID#123456</h5>\n                    <p>Price: £ 1994</p>\n                    <p>Date: 22.10.2019</p>\n                    <p>Product ID: ProductID#321</p>\n                    <p>Product name: Product name ABC</p>\n                    <p>Addtional information: Description of the product and/or additional comments from the customer with regards to the order or product.</p>\n                    <ActionLinkComponent linkText=\"Edit order\" smallText=\"OrderID#123456\" multiline={true} />\n                </div>\n            </div>\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n                <h5>Detailed internal status:</h5>\n                <StepsComponent steps={customersDetailedOrdersSteps} vertical />\n            </div>\n        </div>\n\n        <h3>Previous orders</h3>\n        <CustomersDetailedDatePickerGroup />\n        {customersDetailedOrders.map((order, i) => (\n            <div key={i} className=\"slab border slab-elevated\">\n                <div className=\"d-flex\">\n                    <div className=\"flex-grow-1\">\n                        <div className=\"flex-column\">\n                            <p className=\"font-weight-bold\">\n                                {`OrderID#${i}: `}\n                            </p>\n                            <p>\n                                {`ProductID#${i * 5} Product name XYZ${i}`}\n                            </p>\n                        </div>\n                    </div>\n                    <div>\n                        <p className=\"font-weight-bold text-nowrap\">£ {order}</p>\n                    </div>\n                </div>\n                <ActionLinkComponent linkText=\"Edit order\" smallText={`OrderID#${i}:`} multiline={true} />\n            </div>\n        ))}\n    </>\n);\n\nCustomersDetailedOrders.propTypes = {\n    customersDetailedOrdersSteps: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        ongoing: PropTypes.bool,\n        completed: PropTypes.bool,\n        selected: PropTypes.bool\n    })).isRequired,\n    customersDetailedOrders: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nexport default CustomersDetailedOrders;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst ActionLink = props => {\n    const { link, ...otherProps } = props;\n    const actionLinkClasses = classnames(\n        \"action-link\",\n        otherProps.newTab ? \"action-link-new-tab\" : null,\n        otherProps.multiline ? \"multiline\" : null,\n        otherProps.disabled ? \"disabled\" : null,\n        otherProps.className ? otherProps.className : null\n    );\n\n    const attrs = {\n        href: link ? link : \"#\",\n        rel: otherProps.newTab ? \"noopener noreferrer\" : null,\n        target: otherProps.newTab ? \"_blank\" : null\n    };\n\n    return (\n        <>\n            <a className={actionLinkClasses} {...attrs}>{\"\\n\"}\n                <ActionLinkContent {...otherProps}/>\n            </a>\n        </>\n    );\n};\n\nconst ActionLinkContent = ({ linkText, badge, smallText, multiline }) => (\n    <>\n        {multiline ?\n            <>\n                <div className=\"d-flex flex-column\"> {\"\\n\"}\n                    <span className=\"action-link-multiline\"> {\"\\n\"}\n                        <span>{\"\\n\"}<span className=\"action-link-label\">{linkText}</span>{\"\\n\"} {badge ? <span className={`badge ${badge.type}`}>{badge.text}</span> : <></>}{\"\\n\"}</span>\n                        <span className=\"small-text\">{smallText}</span>{\"\\n\"}\n                    </span>\n                </div>\n            </>\n            :\n            <div className=\"d-flex flex-column\">{\"\\n\"}\n                <span className=\"action-link-content\">{\"\\n\"}\n                    <span className={`action-link-label ${badge ? \"\" : \"no-badge\"}`}>{linkText}</span>{\"\\n\"}\n                    {badge ? <span className={`badge ${badge.type}`}>{badge.text}</span> : null}\n                </span>{\"\\n\"}\n            </div>\n        }\n    </>\n);\n\nActionLink.propTypes = {\n    props: PropTypes.shape({\n        linkText: PropTypes.string.isRequired,\n        badge: PropTypes.shape({\n            type: PropTypes.string.isRequired,\n            text: PropTypes.string.isRequired\n        }),\n        smallText: PropTypes.string,\n        multiline: PropTypes.bool,\n        newTab: PropTypes.bool,\n        link: PropTypes.string\n    })\n};\n\nActionLinkContent.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    badge: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }),\n    smallText: PropTypes.string,\n    multiline: PropTypes.bool,\n    newTab: PropTypes.bool\n};\n\nexport default ActionLink;\n\nexport { ActionLinkContent };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, tooltip, optional, required, group, options, className }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {optional && <>{\"\\n\"}\n                            <span>(optional)</span>\n                        </>}\n                        {tooltip && <>{\"\\n\"}\n                            <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                    help_outline{\"\\n\"}\n                            </i>\n                        </>}\n                    </legend>\n                    {options.map(({ label, id }, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}\n\n                        </label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${className ? ` ${className}` : \"\"}${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object\n    ]),\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    tooltip: PropTypes.bool,\n    optional: PropTypes.bool\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, tooltip, required, className }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ?\n                <fieldset className={`radio-group${className ? ` ${className}` : \"\"}`} disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {tooltip && <>\n                            {\"\\n\"}<i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}</i>\n                        </>}{\"\\n\"}\n                    </legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool,\n    tooltip: PropTypes.bool,\n    className: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label, tooltip, labelTop }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className={`togglebox${labelTop ? \" label-top\" : \"\"}`}>{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}\n                {label}{\"\\n\"}\n                {tooltip &&\n                    <>\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                        </i>{\"\\n\"}\n                    </>}\n            </label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, placeholder, id }) => {\n    const attrs = {\n        id,\n        placeholder,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    className,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    const selectAttrs = {\n        className: \"form-control\",\n        defaultValue: \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        required: required || null\n    };\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}${className ? className : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select {...selectAttrs}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst DefaultSteps = [\n    {\n        title: \"Step one\",\n        subtitle: \"24.12.17 12:10\",\n        completed: true\n    },\n    {\n        title: \"Step two\",\n        ongoing: true\n    },\n    {\n        title: \"Step three\",\n        selected: true\n    },\n    {\n        title: \"Step four\"\n    }\n];\n\nconst StepsContent = ({ completed, subtitle, title, index }) => (\n    <>\n        {completed ? <><div className=\"material-icons steps-icon\" >check</div>{ \"\\n\" }</> : <div className=\"steps-number\">{index + 1}</div>}\n        {title}\n        {subtitle ? <>{ \"\\n\" }<div className=\"steps-sub-title\">{subtitle}</div></> : null}\n    </>\n);\n\nconst RenderSteps = ({ steps }) => (\n    <>\n        {steps.map(({ title, subtitle, completed, ongoing, selected, clickable }, i) => (\n            <li key={i} className={classnames(completed ? \"steps-completed\" : null,\n                ongoing ? \"steps-ongoing\" : null,\n                selected ? \"steps-selected\" : null)}>\n                { clickable ?\n                    <>{ \"\\n\" } <a><StepsContent completed={completed} subtitle={subtitle} title={title} index={i}/></a> { \"\\n\" } </>\n                    :\n                    <StepsContent completed={completed} subtitle={subtitle} title={title} index={i}/>\n                }\n            </li>\n        ))}\n    </>\n);\n\nconst RenderStepsNav = ({ steps }) => {\n    if (!steps) {\n        return null;\n    }\n\n    const clickableItem = steps.some(item => item.clickable);\n\n    const arrowLeft = clickableItem ? <div className=\"material-icons steps-nav-left\">keyboard_arrow_left</div> : null;\n    const arrowRight = clickableItem ? <div className=\"material-icons steps-nav-right\">keyboard_arrow_right</div> : null;\n\n    return <>\n        <div className=\"steps-responsive\">\n            { arrowLeft }\n            <div className=\"steps-responsive-text\">Step 2</div>\n            { arrowRight }\n        </div>\n    </>;\n};\n\nconst Steps = ({ steps, vertical }) => {\n    const stepsClasses = classnames(\n        \"steps\",\n        vertical ? \"steps-vertical\" : null,\n    );\n\n    return (<div className={stepsClasses}>\n        <ol>\n            {steps ? <RenderSteps steps={steps} /> : <RenderSteps steps={DefaultSteps} />}\n        </ol>\n        <RenderStepsNav steps={steps} />\n    </div>);\n};\n\nSteps.propTypes = {\n    steps: PropTypes.array,\n    vertical: PropTypes.bool,\n    clickable: PropTypes.bool\n};\n\nexport default Steps;\n\n// exporting for testing purposes\nexport { DefaultSteps };\n"],"sourceRoot":""}