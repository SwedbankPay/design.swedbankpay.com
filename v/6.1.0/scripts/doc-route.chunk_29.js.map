{"version":3,"sources":["webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/RadioButton/constants.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/RadioButton/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Radio.js"],"names":["radiobuttonShowCase","id","elements","component","Radio","groupTitle","name","options","label","checked","group","radio","title","values","value","disabled","description","doOptions","dontOptions","HowTo","className","Overview","ComponentPreview","language","showCasePanel","showCasePanelAdvanced","codeFigure","to","ContentGuidelines","DeveloperDocumentation","CodeTags","type","code","removeOuterTag","DocContainer","attrs","defaultChecked","required","map","i","key","htmlFor","propTypes","PropTypes","require"],"mappings":"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","file":"scripts/doc-route.chunk_29.js","sourcesContent":["import React from \"react\";\nimport Radio from \"@components/FormComponents/Radio\";\n\nconst options = [\n    {\n        id: \"radio-example-1\",\n        label: \"Radio button label\",\n        checked: true\n    },\n    {\n        id: \"radio-example-2\",\n        label: \"Radio button label\"\n    },\n    {\n        id: \"radio-example-3\",\n        label: \"Radio button label\"\n    }\n];\n\nexport const radiobuttonShowCase = {\n    id: \"no-tabs\",\n    elements: [\n        {\n            component: <Radio groupTitle=\"Group heading\" name=\"radio-group-example\" options={options} group/>,\n            options: {\n                radio: [\n                    {\n                        id: \"state_radio\",\n                        title: \"State modifiers\",\n                        values: [\n                            {\n                                name: \"Enabled\",\n                                value: {\n                                    disabled: false\n                                }\n                            },\n                            {\n                                name: \"Disabled\",\n                                value: {\n                                    disabled: true\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Radio button group\",\n            description: \"The default setup of the radio button group always has a label on top which describes the checkbox group and each individual radio button is then followed by a label which clearly describes what the options and what selecting an option entails. In a radio button group one choice is always selected by default\"\n        }\n    ]\n};\n\nexport const doOptions = [\n    {\n        id: \"radio-do-example-1\",\n        label: \"Debit card\",\n        checked: true\n    },\n    {\n        id: \"radio-do-example-2\",\n        label: \"Credit card\"\n    },\n    {\n        id: \"radio-do-example-3\",\n        label: \"Gift card\"\n    }\n];\n\nexport const dontOptions = [\n    {\n        id: \"radio-dont-example-1\",\n        label: \"Choose a later date for delivery\"\n    },\n    {\n        id: \"radio-dont-example-2\",\n        label: \"Instant delivery\"\n    },\n    {\n        id: \"radio-dont-example-3\",\n        label: \"4-7days delivery\"\n    }\n];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport Radio from \"@components/FormComponents/Radio\";\nimport { radiobuttonShowCase, doOptions, dontOptions } from \"./constants\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst HowTo = () => (\n    <section>\n        <h3>How to setup radio button group</h3>\n        <div className=\"row\">\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-success\">\n                    <span className=\"h3\">Do</span>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 pb-5\">\n                            <Radio groupTitle=\"Card type\" name=\"radio-do-example\" options={doOptions} group/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-error h-100\">\n                    <span className=\"h3\">Don&#x27;t</span>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 w-50\">\n                            <Radio groupTitle=\"Card type\" name=\"radio-dont-example\" options={dontOptions} group/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={radiobuttonShowCase} codeFigure />\n\n        <h3>When to consider something else</h3>\n        <ul className=\"list list-bullet\">\n            <li>\n                When you want to present multiple choices where the user can select one or more choice at the same time, the <Link to=\"/components/checkbox\">checkbox</Link> component should be used instead of radio buttons.\n            </li>\n        </ul>\n\n        <HowTo />\n    </>\n);\n\nconst ContentGuidelines = () => (\n    <>\n        <h2 id=\"content-guidelines\">Content guidelines</h2>\n        <ul className=\"list list-bullet\">\n            <li>The <b>Group heading</b> for the radio button group should be descriptive, explaining the context and what actions the user is choosing from. </li>\n            <li>The <b>radio button label</b> should be short, to the point and clearly explain the option. It is also preferred to have fewer than three words per label as longer words could extend a label to multiple rows which could disrupt the reading experience.</li>\n        </ul>\n    </>\n);\n\nconst DeveloperDocumentation = () => (\n    <section>\n        <h2>Developer documentation</h2>\n        <span className=\"h3 d-inline-block mt-3\">Disabled state</span>\n        <p>Disable a radio button by adding <CodeTags type=\"primary\" code=\"disabled\"/> attribute to the desired radio button. You can also disable the <CodeTags type=\"secondary\" code=\".form-group\"/> or <CodeTags type=\"primary\" code=\"fieldset\"/> in which the radio button is located, refer to <Link to=\"/components/forms\">forms</Link> for more info.</p>\n\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"d-flex justify-content-center\">\n                <Radio id=\"radio-example-10\" label=\"Radio button label\" name=\"radio-example\" disabled checked/>\n            </div>\n        </ComponentPreview>\n    </section>\n);\n\nconst RadioButton = () => (\n    <DocContainer>\n        <p className=\"lead\">The radio button component should be used when the user are presented with a list of options where only one choice can be selected.</p>\n        <Overview />\n        <ContentGuidelines />\n        <DeveloperDocumentation />\n    </DocContainer>\n);\n\nexport default RadioButton;\n\n/* for testing */\nexport { Overview, ContentGuidelines, DeveloperDocumentation, HowTo };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, required }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className=\"radio-group\" disabled={disabled}>\n                    <legend>{groupTitle}</legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n            </form>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool\n};\n\nexport default Radio;\n"],"sourceRoot":""}