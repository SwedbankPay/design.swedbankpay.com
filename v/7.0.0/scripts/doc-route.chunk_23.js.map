{"version":3,"sources":["webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Loader/constants.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Loader/index.js"],"names":["Loader","inverted","size","backgroundDark","className","loaderShowCase","id","elements","component","options","radio","title","values","name","value","description","howToUse","contents","type","maxWidth","content","disabled","to","Overview","ComponentPreview","language","showCasePanel","showCasePanelAdvanced","codeFigure","removeOuterTag","map","i","key","DocContainer","docToc"],"mappings":"8OAGMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,eAAnB,OACX,uBAAKC,UAAS,kCAA6BD,EAAiB,QAAU,GAAxD,sDACV,uBAAKC,UAAS,gBAAWH,EAAW,mBAAqB,IAA3C,OAAgDC,EAAO,IAAH,OAAOA,GAAS,QAI7EG,EAAiB,CAC1BC,GAAI,UACJC,SAAU,CACN,CACIC,UAAW,gBAACR,EAAD,MACXS,QAAS,CACLC,MAAO,CACH,CACIJ,GAAI,cACJK,MAAO,QACPC,OAAQ,CACJ,CACIC,KAAM,WAEV,CACIA,KAAM,WACNC,MAAO,CACHb,UAAU,EACVE,gBAAgB,MAKhC,CACIG,GAAI,aACJK,MAAO,OACPC,OAAQ,CACJ,CACIC,KAAM,UACNC,MAAO,CACHZ,KAAM,KAGd,CACIW,KAAM,QACNC,MAAO,CACHZ,KAAM,kBAO9BS,MAAO,SACPI,YAAa,kGAKZC,EAAW,CACpB,CACIC,SAAU,CACN,CACIC,KAAM,UACNC,UAAU,EACVC,QACA,uBAAKhB,UAAU,+CACX,qBAAGA,UAAU,qBAAoB,sGACjC,uBAAKA,UAAU,cAI3BW,YAAa,sHAEjB,CACIE,SAAU,CACN,CACIC,KAAM,UACNE,QACA,0BAAQhB,UAAU,4BAAlB,oBACI,uBAAKA,UAAU,uBAGvB,CACIc,KAAM,QACNE,QACI,uBAAKhB,UAAU,UACX,0BAAQiB,UAAQ,EAACjB,UAAU,+BAA3B,oBAEI,qBAAGA,UAAU,wBAEjB,uBAAKA,UAAU,0CAI/BW,YAAa,qGAAoE,gBAAC,KAAD,CAAMO,GAAG,uBAAT,UAApE,iECzFfC,EAAW,kBACb,2BAASjB,GAAG,wBACR,sBAAIA,GAAG,YAAP,YACA,gBAAC,EAAAkB,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,sBAAuBtB,EAAgBuB,YAAU,EAACC,gBAAc,IAEhH,2BAASvB,GAAG,sBACR,0DACA,uBAAKF,UAAU,OACVY,EAASc,KAAI,WAA4BC,GAA5B,IAAGd,EAAH,EAAGA,SAAUF,EAAb,EAAaA,YAAb,OACV,gBAAC,WAAD,CAAgBiB,IAAKD,GAChBd,EAASa,KAAI,WAA8BC,GAA9B,IAAGb,EAAH,EAAGA,KAAME,EAAT,EAASA,QAASD,EAAlB,EAAkBA,SAAlB,OACV,uBAAKa,IAAKD,EAAG3B,UAAS,cAASe,EAAW,KAAO,MAC7C,uBAAKa,IAAKD,EAAG3B,UAAS,sCAAiCc,IACnD,wBAAMd,UAAU,MAAe,YAATc,EAAqB,KAAO,SAClD,uBAAKd,UAAU,oEACVgB,QAKjB,qBAAGhB,UAAU,OAAOW,WAiB5C,EATe,kBACX,gBAAC,EAAAkB,aAAD,CAAcC,QAAM,GAChB,qBAAG9B,UAAU,QAAb,0JAGA,gBAACmB,EAAD","file":"scripts/doc-route.chunk_23.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Loader = ({ inverted, size, backgroundDark }) => (\n    <div className={`loader-preview-container${backgroundDark ? \" dark\" : \"\"} d-flex justify-content-center align-items-center`}>\n        <div className={`loader${inverted ? \" loader-inverted\" : \"\"}${size ? ` ${size}` : \"\"}`}></div>\n    </div>\n);\n\nexport const loaderShowCase = {\n    id: \"no-tabs\",\n    elements: [\n        {\n            component: <Loader />,\n            options: {\n                radio: [\n                    {\n                        id: \"color_radio\",\n                        title: \"Color\",\n                        values: [\n                            {\n                                name: \"Default\"\n                            },\n                            {\n                                name: \"Inverted\",\n                                value: {\n                                    inverted: true,\n                                    backgroundDark: true\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        id: \"size_radio\",\n                        title: \"Size\",\n                        values: [\n                            {\n                                name: \"Default\",\n                                value: {\n                                    size: \"\"\n                                }\n                            },\n                            {\n                                name: \"Small\",\n                                value: {\n                                    size: \"loader-sm\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Loader\",\n            description: \"Loading spinners should be used when the wait time is anticipated to extend over one second.\"\n        }\n    ]\n};\n\nexport const howToUse = [\n    {\n        contents: [\n            {\n                type: \"success\",\n                maxWidth: true,\n                content:\n                <div className=\"d-flex flex-column align-items-center col-5\">\n                    <p className=\"text-align-center\"><b>Opening BankID app on your mobile device, please don&apos;t close this window</b></p>\n                    <div className=\"loader\"></div>\n                </div>\n            }\n        ],\n        description: \"If the anticipated waiting time is long, itâ€™s recommended to show a text explaining what is happening to the user.\"\n    },\n    {\n        contents: [\n            {\n                type: \"success\",\n                content:\n                <button className=\"btn btn-primary disabled\">ID authentication\n                    <div className=\"loader loader-sm\"></div>\n                </button>\n            },\n            {\n                type: \"error\",\n                content:\n                    <div className=\"d-flex\">\n                        <button disabled className=\"btn btn-primary btn-bank-id\">\n                            ID authentication\n                            <i className=\"bank-id bank-id-se\"></i>\n                        </button>\n                        <div className=\"loader loader-sm align-self-center\"></div>\n                    </div>\n            }\n        ],\n        description: <>If the loading is contextual to a certain button on the page, the <Link to=\"/components/buttons\">button</Link> loading state can be used instead of the loader component.</>\n    }\n];\n","import React from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport { loaderShowCase, howToUse } from \"./constants\";\n\nconst Overview = () => (\n    <section id=\"loader-page-overview\">\n        <h2 id=\"overview\">Overview</h2>\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={loaderShowCase} codeFigure removeOuterTag/>\n\n        <section id=\"loaders-how-to-use\">\n            <h3>How to use loader in context</h3>\n            <div className=\"row\">\n                {howToUse.map(({ contents, description }, i) => (\n                    <React.Fragment key={i}>\n                        {contents.map(({ type, content, maxWidth }, i) => (\n                            <div key={i} className={`col-${maxWidth ? \"12\" : \"6\"}`}>\n                                <div key={i} className={`slab slab-plain slab-border-${type}`}>\n                                    <span className=\"h3\">{type === \"success\" ? \"Do\" : \"Don't\"}</span>\n                                    <div className=\"d-flex justify-content-center px-3 h-100 align-items-center pb-5\">\n                                        {content}\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                        <p className=\"m-3\">{description}</p>\n                    </React.Fragment>\n                ))}\n            </div>\n        </section>\n    </section>\n);\n\nconst Loader = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">\n            The loader component should be used when the site or application is performing computation, notifying   the user that their action is being processed.\n        </p>\n        <Overview />\n    </DocContainer>\n);\n\nexport default Loader;\n\n/* For testing */\nexport { Overview };\n"],"sourceRoot":""}