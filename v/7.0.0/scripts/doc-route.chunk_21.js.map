{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Links/constants.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Links/index.js","webpack://@swedbankpay/design-guide/./src/App/components/ActionLink/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Button/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Checkbox.js","webpack://@swedbankpay/design-guide/./src/App/components/InputGroup/index.js","webpack://@swedbankpay/design-guide/./src/App/components/Link/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","ShowcaseComponent","rightIcon","leftIcon","linkText","smallFont","backgroundDark","bright","standalone","disabled","className","Link","ShowcaseActionComponent","badge","smallText","multiline","newTab","guidelinesContent","slabs","type","content","text","overviewLinks","id","tabsId","elements","tab","component","options","checkbox","title","inputs","name","value","radio","values","description","overviewActionLinks","Overview","ComponentPreview","language","showCasePanel","showCasePanelAdvanced","codeFigure","removeOuterTag","to","href","CodeTags","code","ActionLink","label","placeholder","Checkbox","Button","fullWidth","ContentGuidelines","map","DocContainer","docToc","props","link","otherProps","actionLinkClasses","classnames","attrs","rel","target","ActionLinkContent","propTypes","PropTypes","icon","loading","btnType","pullRight","input","active","size","bankId","btnClasses","defaultValue","role","tabIndex","onClick","e","preventDefault","isRequired","loader","checked","groupTitle","errorMessage","tooltip","optional","required","group","defaultChecked","htmlFor","require","Addon","color","Feedback","InputGroup","pattern","validate","autoComplete","readOnly","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","successMessage","inputGrpClasses","opt","Fragment","hidden","linkClasses","fontSize"],"mappings":"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","file":"scripts/doc-route.chunk_21.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport Link from \"@components/Link\";\nimport ActionLink from \"~/src/App/components/ActionLink\";\n\nconst ShowcaseComponent = ({ rightIcon, leftIcon, linkText, smallFont, backgroundDark, bright, standalone, disabled }) => (\n    <div className={`loader-preview-container${backgroundDark ? \" dark\" : \"\"} d-flex justify-content-center align-items-center`}>\n        {standalone ? <>\n            <Link rightIcon={rightIcon} leftIcon={leftIcon} linkText={linkText} smallFont={smallFont} bright={bright} disabled={disabled}/>{\"\\n\"}</> :\n            <><p className={`mt-3 ${backgroundDark ? \"text-white\" : \"\"} ${smallFont ? \"small-text\" : \"\"}`}>Paragraph text with a <Link rightIcon={rightIcon} leftIcon={leftIcon} linkText={linkText} smallFont={smallFont} bright={bright} disabled={disabled}/> </p> {\"\\n\"}</>}\n    </div>\n);\n\nconst ShowcaseActionComponent = ({ badge, smallText, multiline, newTab, disabled }) => (\n    <div className=\"d-flex flex-column w-100\">\n        <ActionLink linkText=\"Pay now\" className={` ${badge ? \"badge badge-default badge-number\" : null}`} badge={badge} smallText={smallText} multiline={multiline} newTab={newTab} disabled={disabled}/>{\"\\n\"}\n        <ActionLink linkText=\"Pay on the settlement date\" className={`${badge ? \"badge badge-default badge-number\" : null}`} badge={badge} smallText={smallText} multiline={multiline} newTab={newTab} disabled={disabled}/>{\"\\n\"}\n        <ActionLink linkText=\"Add to my credit\" className={`${badge ? \"badge badge-default badge-number\" : null}`} badge={badge} smallText={smallText} multiline={multiline} newTab={newTab} disabled={disabled}/>{\"\\n\"}\n    </div>\n);\n\nexport const guidelinesContent = [\n    {\n        slabs: [\n            {\n                type: \"success\",\n                content: <Link linkText=\"Read our terms and conditions\"/>\n            },\n            {\n                type: \"error\",\n                content: <p className=\" mb-0 justify-content-center\"><Link linkText=\"Click here\" /> to read our term and conditions.</p>\n            },\n        ],\n        text: \"Avoid using \\\"click here\\\", links should not need supporting copy to make sense.\"\n    },\n    {\n        slabs: [\n            {\n                type: \"success\",\n                content: <Link linkText=\"View our opening hours\"/>\n            },\n            {\n                type: \"error\",\n                content: <Link linkText=\"View more\"/>\n            }\n        ],\n        text: \"Make sure the link makes it clear what content the link goes to.\"\n    },\n    {\n        slabs: [\n            {\n                type: \"success\",\n                content: <p className=\"mb-0 justify-content-center\">Here you can <Link linkText=\"read about the browsers we recommend\"/>.</p>\n            },\n            {\n                type: \"error\",\n                content: <Link linkText=\"Here you can read about the browsers we recommend\"/>\n            }\n        ],\n        text: \"Make links as short as possible whilst still making them clear. Don't include several sentences or preceding articles or punctuation marks.\"\n    }\n];\n\nexport const overviewLinks = {\n    id: \"overviewLinks\",\n    tabsId: \"overviewLinksTabs\",\n    elements: [\n        {\n            tab: \"Inline\",\n            component: <ShowcaseComponent linkText=\"Inline link\"/>,\n            options: {\n                checkbox: [\n                    {\n                        title: \"Alternatives\",\n                        inputs: [\n                            {\n                                id: \"external_link\",\n                                name: \"External link\",\n                                value: {\n                                    rightIcon: \"launch\"\n                                }\n                            },\n                            {\n                                id: \"dark_theme_color\",\n                                name: \"Dark theme\",\n                                value: {\n                                    backgroundDark: true,\n                                    bright: true\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        title: \"State modifier\",\n                        inputs: [\n                            {\n                                id: \"state_modifier\",\n                                name: \"Disabled\",\n                                value: {\n                                    disabled: true\n                                }\n                            }\n                        ]\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"font_size_radio\",\n                        title: \"Font size\",\n                        values: [\n                            {\n                                name: \"Normal\",\n                                value: {\n                                    smallFont: false\n                                }\n                            },\n                            {\n                                name: \"Small\",\n                                value: {\n                                    smallFont: true\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Inline links\",\n            description: \"Inline links appear within paragraphs or sentences. They’re used to direct users to content that’s not directly related to the journey they’re on. If a link is directing the user to an external web page, this should be indicated using an icon and the page should open in a new window. The font size should match the font size of the text it is inline with.\"\n        },\n        {\n            tab: \"Standalone\",\n            component: <ShowcaseComponent linkText=\"Standalone link\" standalone/>,\n            options: {\n                checkbox: [\n                    {\n                        title: \"Alternatives\",\n                        inputs: [\n                            {\n                                id: \"dark_theme_color\",\n                                name: \"Dark theme\",\n                                value: {\n                                    backgroundDark: true,\n                                    bright: true\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        title: \"State modifier\",\n                        inputs: [\n                            {\n                                id: \"state_modifier\",\n                                name: \"Disabled\",\n                                value: {\n                                    disabled: true\n                                }\n                            }\n                        ]\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"font_size_radio\",\n                        title: \"Font size\",\n                        values: [\n                            {\n                                name: \"Normal\",\n                                value: {\n                                    smallFont: false\n                                }\n                            },\n                            {\n                                name: \"Small\",\n                                value: {\n                                    smallFont: true\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        id: \"radio_badge_choice\",\n                        title: \"With icon\",\n                        values: [\n                            {\n                                name: \"None\",\n                                value: {\n                                    leftIcon: null\n                                }\n                            },\n                            {\n                                name: \"New tab\",\n                                value: {\n                                    leftIcon: \"launch\"\n                                }\n                            },\n                            {\n                                name: \"Back\",\n                                value: {\n                                    leftIcon: \"arrow_back_ios\"\n                                }\n                            }\n\n                        ]\n                    }\n                ]\n            },\n            title: \"Standalone links\",\n            description: \"Standalone links are separate to paragraph content and appear on there own. They can be user with a leading icon to further convey the result of clicking the link. Links with icons are not underlined.\"\n        }\n    ]\n};\n\nexport const overviewActionLinks = {\n    id: \"no-tabs\",\n    elements: [\n        {\n            component: <ShowcaseActionComponent linkText=\"Pay now\"/>,\n            options: {\n                checkbox: [\n                    {\n                        title: \"Modifiers\",\n                        inputs: [\n                            {\n                                id: \"infoText\",\n                                name: \"Info text\",\n                                value: {\n                                    smallText: \"Pay your invoices in your tempo\",\n                                    multiline: true\n                                }\n                            },\n                            {\n                                id: \"badge\",\n                                name: \"With Badge\",\n                                value: {\n                                    badge:\n                                        {\n                                            type: \"badge-default\",\n                                            text: \"40\"\n                                        }\n                                }\n                            },\n                            {\n                                id: \"externalLink\",\n                                name: \"External link\",\n                                value: {\n                                    newTab: true\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        title: \"State modifier\",\n                        inputs: [\n                            {\n                                id: \"state_modifiers\",\n                                name: \"Disabled\",\n                                value: {\n                                    disabled: true\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Action links\",\n            description: <>\n                <p>Actions links can be customized in a few different ways to fit different contexts. Default styling contains a heading and an arrow icon. It can be modified be adding an info text that will give more information or with a number badge. If a the link is directing the user to an external web page or opens up a new tab, this should be indicated using an new tab icon instead of the arrow.  </p>\n            </>\n        }\n    ]\n};\n","import React from \"react\";\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport ActionLinkComponent from \"@components/ActionLink\";\nimport LinkComponent from \"@components/Link\";\nimport ButtonComponent from \"@components/Button\";\nimport InputComponent from \"@components/InputGroup\";\nimport CheckboxComponent from \"@components/FormComponents/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport { overviewLinks, overviewActionLinks, guidelinesContent } from \"./constants\";\nimport CodeTags from \"~/src/App/components/CodeTags\";\n\nconst Overview = () => (\n    <section>\n        <h2 id=\"links\">Links</h2>\n        <p>Links should be used when you want to direct a user to a new section, page or website. They can be used on their own or inline within paragraphs.</p>\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={overviewLinks} codeFigure removeOuterTag/>\n\n        <span className=\"h3 d-inline-block mt-3\">When to consider something else</span>\n        <ul className=\"list list-bullet\">\n            <li>\n                Use a <Link to=\"/components/buttons\">button</Link> instead of a link for actions. As a general rule, if the user is making changes to the back or front-end of the site when clicking, you should use a button. If the user is being directed to a different page, you can use link.\n            </li>\n            <li>\n                If you have a collection of links and want to highlight and make them appear more as call to actions consider using <a href=\"#action-link\">action links</a>\n            </li>\n        </ul>\n        <h3>How to use links</h3>\n\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <div className=\"slab slab-plain slab-border-error pb-5 h100\" >\n                    <h4>Don&apos;t</h4>\n                    <div className=\"loader-preview-container d-flex justify-content-center align-items-center mt-3 pt-3\">\n                        <p>Paragraph text with a <LinkComponent linkText=\"Inline link\" leftIcon=\"edit\"/>.</p>\n                    </div>\n                </div>\n                <p>Don&apos;t use a leading icon or strip the underline from an inline link. </p>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <div className=\"slab slab-plain slab-border-success pb-5 h100\" >\n                    <h4>Do</h4>\n                    <div className=\"d-flex justify-content-center mt-4 mb-4\">\n                        <div className=\"link-dark-background py-5 px-5\">\n                            <LinkComponent linkText=\"Standalone link\" bright/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-lg-6\">\n                <div className=\"slab slab-plain slab-border-error pb-5 h100\">\n                    <h4>{\"Don't\"}</h4>\n                    <div className=\"d-flex justify-content-center mt-4 mb-4\">\n                        <div className=\"link-dark-background p-5\">\n                            <LinkComponent linkText=\"Standalone link\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <p className=\"mt-3\">If the background is too dark for the regular link color add <CodeTags type=\"secondary\" code=\".bright\"/>.</p>\n    </section>\n);\n\nconst ActionLink = () => (\n    <section id=\"action-link-container\">\n        <h2 id=\"action-links\">Action links</h2>\n        <p>Although links are to be used for navigation and not actions we sometimes have a need to highlight links and make them appear more as call to actions. In this case Action links, that will redirect the user to perform an action on another page, can be used. Actions links are normally used in a collection consisting of a few different action links with equally important actions to be made.</p>\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={overviewActionLinks} codeFigure removeOuterTag/>\n        <span className=\"h3 d-inline-block mt-3\">When to consider something else</span>\n        <ul className=\"list list-bullet\">\n            <li>\n                Use a <Link to=\"/components/buttons\">button</Link> instead of a link an action. As a general rule, if the user is making changes to the back or front-end of the site when clicking, you should use a button. If the user is being directed to a different page, you can use link.\n            </li>\n            <li>\n                Use a standalone <Link to=\"/components/links\">link</Link> instead of a action link if you don&apos;t need to highlight and make the links appear more as call to actions.\n            </li>\n        </ul>\n        <h3>How to use action links</h3>\n        <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <div className=\"slab slab-plain slab-border-success h-100\" >\n                    <h4>Do</h4>\n                    <div className=\"d-flex justify-content-center mt-4 mb-2 flex-column\">\n                        <InputComponent type=\"text\" label=\"Name\"/>\n                        <InputComponent type=\"text\" label=\"Email\" placeholder=\"name@email.com\"/>\n                        <CheckboxComponent label=\"I agree to terms of use\" id=\"terms-success-example\"/>\n                        <ButtonComponent type=\"primary\" label=\"Submit\" fullWidth/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-lg-6\">\n                <div className=\"slab slab-plain slab-border-error h-100\">\n                    <h4>Don&apos;t</h4>\n                    <div className=\"d-flex justify-content-center mt-4 mb-2 flex-column\">\n                        <InputComponent type=\"text\" label=\"Name\"/>\n                        <InputComponent type=\"text\" label=\"Email\" placeholder=\"name@email.com\"/>\n                        <CheckboxComponent label=\"I agree to terms of use\" id=\"terms-error-example\"/>\n                        <ActionLinkComponent linkText=\"Submit\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <p className=\"mt-3\">Use a <Link to=\"/components/buttons\">button</Link> instead of an action link for an action like for instance submitting a form.</p>\n    </section>\n);\n\nconst ContentGuidelines = () => (\n    <section id=\"link-content-guidelines-container\">\n        <h2 id=\"content-guidelines\">Content guidelines</h2>\n        {guidelinesContent.map(({ slabs, text }, i) => (\n            <div className=\"row\" key={i}>\n                {slabs.map(({ content, type }) => (\n                    <div className=\"col-lg-6\" key={content}>\n                        <div className={`slab slab-plain slab-border-${type} h-100 pb-5`} >\n                            <h4>{type === \"success\" ? \"Do\" : \"Don't\"}</h4>\n                            <div className=\"d-flex justify-content-center mb-2  h-100 align-items-center\">\n                                {content}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n                <div className=\"col-12 pb-4 pt-2\">\n                    {text}\n                </div>\n            </div>\n        ))}\n    </section>\n);\n\nconst Links = () => (\n    <DocContainer docToc>\n        <section id=\"link-doc\">\n            <p className=\"lead\">\n                Links are used as navigational elements and can be used on their own or inline within paragraphs of text.\n            </p>\n            <Overview/>\n            <ActionLink/>\n            <ContentGuidelines/>\n        </section>\n    </DocContainer>\n);\n\nexport default Links;\n\n/* for testing */\nexport { Overview, ActionLink, ContentGuidelines };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst ActionLink = props => {\n    const { link, ...otherProps } = props;\n    const actionLinkClasses = classnames(\n        \"action-link\",\n        otherProps.newTab ? \"action-link-new-tab\" : null,\n        otherProps.multiline ? \"multiline\" : null,\n        otherProps.disabled ? \"disabled\" : null\n    );\n\n    const attrs = {\n        href: link ? link : \"#\",\n        rel: otherProps.newTab ? \"noopener noreferrer\" : null,\n        target: otherProps.newTab ? \"_blank\" : null\n    };\n\n    return (\n        <>\n            <a className={actionLinkClasses} {...attrs}>{\"\\n\"}\n                <ActionLinkContent {...otherProps}/>\n            </a>\n        </>\n    );\n};\n\nconst ActionLinkContent = ({ linkText, badge, smallText, multiline }) => (\n    <>\n        {multiline ?\n            <>\n                <div className=\"d-flex flex-column\"> {\"\\n\"}\n                    <span className=\"action-link-multiline\"> {\"\\n\"}\n                        <span>{\"\\n\"}<span className=\"action-link-label\">{linkText}</span>{\"\\n\"} {badge ? <span className={`badge ${badge.type}`}>{badge.text}</span> : <></>}{\"\\n\"}</span>\n                        <span className=\"small-text\">{smallText}</span>{\"\\n\"}\n                    </span>\n                </div>\n            </>\n            :\n            <div className=\"d-flex flex-column\">\n                <span className=\"action-link-content\"><span className={`action-link-label ${badge ? \"\" : \"no-badge\"}`}>{linkText}</span> {badge ? <span className={`badge ${badge.type}`}>{badge.text}</span> : <></>}</span>\n            </div>\n        }\n    </>\n);\n\nActionLink.propTypes = {\n    props: PropTypes.shape({\n        linkText: PropTypes.string.isRequired,\n        badge: PropTypes.shape({\n            type: PropTypes.string.isRequired,\n            text: PropTypes.string.isRequired\n        }),\n        smallText: PropTypes.string,\n        multiline: PropTypes.bool,\n        newTab: PropTypes.bool,\n        link: PropTypes.string\n    })\n};\n\nActionLinkContent.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    badge: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }),\n    smallText: PropTypes.string,\n    multiline: PropTypes.bool,\n    newTab: PropTypes.bool\n};\n\nexport default ActionLink;\n\nexport { ActionLinkContent };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs} onClick={e => e.preventDefault()}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, tooltip, optional, required, group, options }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend className = \"d-flex align-items-center\">\n                        {groupTitle} {optional && <span className = \"ml-1\">(optional)</span>}\n                        {tooltip &&\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                            help_outline{\"\\n\"}</i>}{\"\\n\"}\n                    </legend>\n                    {options.map(({ label, id }, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}\n\n                        </label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    tooltip: PropTypes.bool,\n    optional: PropTypes.bool\n};\n\nexport default Checkbox;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" defaultValue=\"placeholder\" disabled={disabled} readOnly={readOnly} required={required}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"placeholder\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Link = ({ linkText, leftIcon, rightIcon, smallFont, bright, disabled }) => {\n    const linkClasses = classnames(\n        leftIcon || rightIcon ? \"icon-link\" : null,\n        smallFont ? \"small\" : null,\n        bright ? \"bright\" : null,\n        disabled ? \"disabled\" : null\n    );\n\n    return (\n        <>\n            <a href=\"\" className={linkClasses} onClick={e => e.preventDefault()}>\n                {leftIcon && <>\n                    {\"\\n\"}<i className=\"material-icons\" aria-hidden=\"true\">\n                        {leftIcon}</i>\n                </>}\n                {leftIcon || rightIcon ? <>\n                    {\"\\n\"}<span className={(leftIcon ? \"ml-2\" : null) || (rightIcon ? \"mr-2\" : null)}>\n                        {linkText}</span>{\"\\n\"}</> : linkText}\n                {rightIcon && <>\n                    <i className=\"material-icons\" aria-hidden=\"true\">{rightIcon}</i>{\"\\n\"}</>}\n            </a>\n        </>\n    );\n};\n\nLink.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    leftIcon: PropTypes.string,\n    rightIcon: PropTypes.string,\n    fontSize: PropTypes.string,\n    bright: PropTypes.bool\n};\n\nexport default Link;\n"],"sourceRoot":""}