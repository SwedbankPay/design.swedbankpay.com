{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Select/constants.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Select/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Checkbox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Radio.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Togglebox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Datepicker.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/FormControlText.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/index.js","webpack://@swedbankpay/design-guide/./src/App/components/InputGroup/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","selectOverview","id","elements","component","InputGroup","type","label","placeholder","selectOptions","options","checkbox","title","inputs","name","value","tooltip","optional","radio","values","disabled","errorMessage","validationState","helpBlock","required","description","whenToUse","lead","content","correct","className","Radio","checked","text","to","Datepicker","prefixType","prefixValue","keys","slice","WhenToUse","map","Overview","ComponentPreview","language","codeFigure","showCasePanel","showCasePanelAdvanced","ContentGuidelines","DeveloperDocumentation","CodeTags","code","defaultValue","hidden","DocContainer","Checkbox","groupTitle","group","attrs","defaultChecked","htmlFor","propTypes","PropTypes","require","Togglebox","labelTop","format","time","min","max","months","fulldate","mode","allowinput","Addon","FormControlText","color","Feedback","icon","pattern","validate","autoComplete","readOnly","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","successMessage","inputGrpClasses","classnames","opt","Fragment"],"mappings":"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","file":"scripts/doc-route.chunk_31.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport InputGroup from \"@components/InputGroup\";\nimport Radio from \"@components/FormComponents/Radio\";\nimport { Datepicker } from \"@components/FormComponents\";\nimport { Link } from \"react-router-dom\";\n\nexport const selectOverview = {\n    id: \"no-tabs\",\n    elements: [\n        {\n            component: <InputGroup type=\"select\" label=\"Label\" placeholder={\"Select option\"} selectOptions={[\"Blueberry\", \"Blackberry\", \"Berryberry\"]} />,\n            options: {\n                checkbox: [\n                    {\n                        title: \"Label add on\",\n                        inputs: [\n                            {\n                                id: \"help_icon\",\n                                name: \"Help icon\",\n                                value: {\n                                    tooltip: true\n                                }\n                            },\n                            {\n                                id: \"optional\",\n                                name: \"Is optional\",\n                                value: {\n                                    optional: true\n                                }\n                            }\n                        ]\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"state_radio\",\n                        title: \"State modifiers\",\n                        values: [\n                            {\n                                name: \"Default\",\n                                value: {\n                                    disabled: false\n                                }\n                            },\n                            {\n                                name: \"Error\",\n                                value: {\n                                    errorMessage: \"Descriptive helpful error message.\",\n                                    validationState: \"error\",\n                                    helpBlock: true,\n                                    required: true\n                                }\n                            },\n                            {\n                                name: \"Disabled\",\n                                value: {\n                                    disabled: true\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Select\",\n            description: \"The select component looks similar to an input field in terms of structure, both with a label and placeholder text. But it does function differently and when activated expands and displays a list of options.\"\n        }\n    ]\n};\n\nexport const whenToUse = {\n    lead: \"The select component should be used sparsely, often times there are better and more intuitive ways to present choices for the user.\",\n    content: [\n        {\n            correct:\n                <div className=\"pb-3\">\n                    <p>Background color</p>\n                    <Radio id=\"radio-example-1\" label=\"Blue\" name=\"radio-example\" checked/>\n                    <Radio id=\"radio-example-2\" label=\"Red\" name=\"radio-example\"/>\n                </div>,\n            selectOptions: [\"Blue\", \"Red\"],\n            placeholder: \"Select color\",\n            label: \"Background color\",\n            text: <p>In the example above, when there are very few choices, they should not be hidden inside a select list as this makes it harder for user to get an overview. Use <Link to=\"/components/radio-button\">radio buttons</Link> instead.</p>\n        },\n        {\n            correct: <Datepicker label=\"Birthday\" prefixType=\"icon\" prefixValue=\"event\" placeholder=\"DD/MM/YYY\" />,\n            selectOptions: [...Array(32).keys()].slice(1),\n            placeholder: \"Select day\",\n            label: \"Day\",\n            text: <p>Instead of using a dropdown input for selecting a day of the month. It is better to use a <Link to=\"/components/datepickers\">datepicker</Link> to let user select the right date faster.</p>\n        },\n        {\n            correct: <InputGroup type=\"text\" label=\"Number of drinks\" placeholder=\"4\"/>,\n            selectOptions: [1, 2, 3, 4],\n            placeholder: \"Select number\",\n            label: \"Number of drinks\",\n            text: <p>Instead of using a dropdown input that will force the user to choose from a set of predefined options it is sometimes better to use an <Link to=\"/components/forms\">input field</Link> where the user can type their answer .</p>\n        }\n    ]\n};\n","import React from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport InputGroup from \"@components/InputGroup\";\nimport { selectOverview, whenToUse } from \"./constants\";\nimport CodeTags from \"@components/CodeTags\";\nimport { Link } from \"react-router-dom\";\n\nconst WhenToUse = () => (\n    <>\n        <p>{whenToUse.lead}</p>\n        {whenToUse.content.map(({ correct, placeholder, selectOptions, label, text }, i) => (\n            <React.Fragment key={i}>\n                <div className=\"row wrong mb-3\">\n                    <div className=\"col-12 col-sm-6 mb-2\">\n                        <div className=\"px-4 slab slab-plain slab-border-success h-100 d-flex flex-column mb-2\">\n                            <span className=\"h4\">Do</span>\n                            {correct}\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-sm-6\">\n                        <div className=\"px-4 slab slab-plain slab-border-error h-100 mb-2 d-flex flex-column\">\n                            <span className=\"h4\">Don&#x27;t</span>\n                            <div >\n                                <InputGroup type=\"select\" label={label} placeholder={placeholder} selectOptions={selectOptions} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {text}\n            </React.Fragment>\n        ))}\n\n    </>\n);\n\nconst Overview = () => (\n    <section>\n        <h2 id=\"overview\">Overview</h2>\n        <ComponentPreview language=\"html\" codeFigure showCasePanel showCasePanelAdvanced={selectOverview} />\n\n        {/*\n            Will be back in a later release\n\n        <h3>When to consider something else</h3>\n        <ul className=\"pl-3\">\n            <li>To present a list of possible navigation options or actions that for example effects the filtering of the page, use the <Link to=\"/components/dropdown-menu\">Dropdown menu</Link> component instead of a Select. </li>\n        </ul> */}\n\n        <h3>When to consider something else</h3>\n\n        <WhenToUse />\n\n    </section>\n);\n\nconst ContentGuidelines = () => (\n    <section>\n        <h2 id=\"content-guidelines\">Content guidelines</h2>\n\n        <div className=\"d-flex justify-content-center slab slab-plain px-5 pt-5 pb-4 no-pointer-events\">\n            <InputGroup type=\"select\" label=\"Label\" placeholder=\"Placeholder text\" selectOptions={[]} helpBlock/>\n        </div>\n        <ul className=\"pl-3\">\n            <li>The <b>Label</b> should be short, concise and to the point describing the functionality </li>\n            <li>The <b>Placeholder text</b> should begin with the verb {\"\\\"\"}Select..{\"\\\"\"} preferably followed by what type of options the user is choosing from.</li>\n        </ul>\n    </section>\n);\n\nconst DeveloperDocumentation = () => (\n    <section>\n        <h2 id=\"developer-documentation\">Developer documentation</h2>\n        <span className=\"h4 mt-3\">Error state</span>\n\n        <p>If the user don’t select any option in a select that is required to be filled, an error message should be displayed. Add the <CodeTags type=\"secondary\" code=\".has-error\"/> class to the <CodeTags type=\"primary\" code=\"form-group\"/> element, and insert the error message in the attribute <CodeTags type=\"primary\" code=\"data-error\"/> in the <CodeTags type=\"primary\" code=\"help-block\"/> element. </p>\n\n        <ComponentPreview language=\"html\" codeFigure showCasePanel>\n            <form className=\"no-pointer-events\">\n                <div className=\"form-group has-error\">{\"\\n\"}\n                    <label>{\"\\n\"}\n                            Label{\"\\n\"}\n                    </label>{\"\\n\"}\n                    <select className=\"form-control\" defaultValue=\"placeholder\" required>{\"\\n\"}\n                        <option value=\"placeholder\" disabled hidden>Select option</option>{\"\\n\"}\n                    </select>\n                    <div className=\"help-block\" data-error=\"Descriptive helpful error message.\"></div>\n                </div>\n            </form>\n        </ComponentPreview>\n\n        <span className=\"h4\">Disabled state</span>\n        <p>Disable a select by adding the <CodeTags type=\"primary\" code=\"disabled\"/> attribute to the desired select and the <CodeTags type=\"primary\" code=\"form-group\"/> where the select resides.</p>\n        <ComponentPreview language=\"html\" codeFigure showCasePanel>\n            <InputGroup type=\"select\" label=\"Label\" placeholder=\"Select option\" selectOptions={[]} disabled />\n        </ComponentPreview>\n    </section>\n);\n\nconst Select = () => (\n    <DocContainer>\n        <section id=\"select-doc\">\n            <p className=\"lead\">The select component is used in forms and allows the user to select a desired value. When activated the component expands and presents a scrollable list of pre-defined options which user can choose from.</p>\n            <Overview />\n            <ContentGuidelines />\n            <DeveloperDocumentation />\n        </section>\n    </DocContainer>\n);\n\nexport default Select;\n\nexport { Overview, WhenToUse, ContentGuidelines, DeveloperDocumentation };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, tooltip, optional, required, group, options }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend className = \"d-flex align-items-center\">\n                        {groupTitle} {optional && <span className = \"ml-1\">(optional)</span>}\n                        {tooltip &&\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                            help_outline{\"\\n\"}</i>}{\"\\n\"}\n                    </legend>\n                    {options.map(({ label, id }, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}\n\n                        </label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    tooltip: PropTypes.bool,\n    optional: PropTypes.bool\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, tooltip, required }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className=\"radio-group\" disabled={disabled}>\n                    <legend className=\"d-flex align-items-center\">{groupTitle}\n                        {tooltip &&\n                            <>{\"\\n\"}<i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}</i>\n                            </>}{\"\\n\"}\n                    </legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n            </form>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool,\n    tooltip: PropTypes.bool\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label, tooltip, labelTop }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className={`togglebox${labelTop ? \" label-top\" : \"\"}`}>{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}\n                {label}{\"\\n\"}\n                {tooltip &&\n                    <>\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                        </i>{\"\\n\"}\n                    </>}\n            </label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, placeholder, id }) => {\n    const attrs = {\n        id,\n        placeholder,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" defaultValue=\"placeholder\" disabled={disabled} readOnly={readOnly} required={required}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"placeholder\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n"],"sourceRoot":""}