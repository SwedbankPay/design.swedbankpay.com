{"version":3,"sources":["webpack://design.swedbankpay.com/./src/App/ComponentsDocumentation/components/ActionList/index.js","webpack://design.swedbankpay.com/./src/App/components/ActionList/index.js"],"names":["actionList","window","dg","items","name","icon","Overview","id","ComponentPreview","language","showCasePanel","codeFigure","Anchorpoints","type","code","classNames","JavascriptMethods","JavascriptDocs","componentName","open","close","ActionList","init","DocContainer","docToc","className","Component","ActionListToggle","aria-haspopup","aria-hidden","toggleBtn","aria-labelledby","Array","isArray","map","i","Fragment","key","href","onClick","e","preventDefault","Icon","propTypes","PropTypes","isRequired"],"mappings":"kmDAMQA,EAAeC,OAAOC,GAAtBF,WAEFG,EAAQ,CACV,CACIC,KAAM,eACNC,KAAM,YAEV,CACID,KAAM,aACNC,KAAM,mBAEV,CACID,KAAM,eACNC,KAAM,cAEV,CACID,KAAM,WACNC,KAAM,eAIRC,EAAW,kBACb,gCACI,sBAAIC,GAAG,YAAP,YACA,0CACA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAqBR,MAAOA,OAKlCS,EAAe,kBACjB,gCACI,sBAAIL,GAAG,gBAAP,gBACA,gIACA,sCACA,sCAAa,gBAAC,UAAD,CAAUM,KAAK,YAAYC,KAAK,qBAA7C,qEACA,gBAAC,EAAAN,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAqBI,WAAW,kBAAkBZ,MAAOA,KAE7D,0CACA,sCAAa,gBAAC,UAAD,CAAUU,KAAK,YAAYC,KAAK,yBAA7C,yEACA,gBAAC,EAAAN,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAqBI,WAAW,sBAAsBZ,MAAOA,KAEjE,yCACA,sCAAa,gBAAC,UAAD,CAAUU,KAAK,YAAYC,KAAK,wBAA7C,wEACA,gBAAC,EAAAN,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAqBI,WAAW,qBAAqBZ,MAAOA,OAKlEa,EAAoB,kBACtB,gCACI,sBAAIT,GAAG,sBAAP,sBACA,gBAAC,EAAAU,eAAD,CAAgBC,cAAc,aAAaC,MAAI,EAACC,OAAK,MAIvDC,E,0WACF,WACIrB,EAAWsB,S,oBAGf,WACI,OACI,gBAAC,EAAAC,aAAD,CAAcC,QAAM,GAChB,qBAAGC,UAAU,QAAb,+IAGA,gBAACnB,EAAD,MACA,gBAACM,EAAD,MACA,gBAACI,EAAD,Y,8BAbSU,aAmBzB,a,uFChFMC,EAAmB,kBACrB,gCACI,0BAAQpB,GAAG,mBAAmBM,KAAK,SAASY,UAAU,gBAAgBG,gBAAc,QAAQ,KACxF,qBAAGH,UAAU,iBAAiBI,cAAY,QAA1C,aAA+D,MACzD,OAIZR,EAAa,SAAC,GAAD,IAAGd,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,WAAYe,EAAnB,EAAmBA,UAAW3B,EAA9B,EAA8BA,MAA9B,OACf,gCACI,uBAAKI,GAAIA,EAAIkB,UAAS,qBAAgBV,EAAa,IAAH,OAAOA,GAAe,KAAO,KACxEe,EAAY,gCAAGA,EAAW,MAAW,gBAACH,EAAD,MACtC,uBAAKF,UAAU,cAAcM,kBAAgB,oBAAoB,KAEzDC,MAAMC,QAAQ9B,GAASA,EAAM+B,KAAI,WAAiBC,GAAjB,IAAG/B,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OAC7B,gBAAC,EAAA+B,SAAD,CAAUC,IAAKF,GACX,qBAAGG,KAAK,IAAIC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,mBACvBpC,EAAO,gBAAC,EAAAqC,KAAD,CAAM7B,KAAMR,IAAU,KAAMD,GACnC,SAER,SAOzBiB,EAAWsB,UAAY,CACnBpC,GAAIqC,WACJ7B,WAAY6B,WACZzC,MAAOyC,YAAkBA,UAAgB,CACrCxC,KAAMwC,sBACNvC,KAAMuC,cACNC,YAGR","file":"scripts/doc-route.chunk_2.2a6d403b7a2c9a4e8157.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport ActionListComponent from \"@components/ActionList\";\nimport { ComponentPreview, DocContainer, JavascriptDocs } from \"@docutils\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst { actionList } = window.dg;\n\nconst items = [\n    {\n        name: \"Add bookmark\",\n        icon: \"bookmark\"\n    },\n    {\n        name: \"Add client\",\n        icon: \"business_center\"\n    },\n    {\n        name: \"Add document\",\n        icon: \"add_circle\"\n    },\n    {\n        name: \"Add user\",\n        icon: \"person_add\"\n    }\n];\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>Action lists.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionListComponent items={items} />\n        </ComponentPreview>\n    </>\n);\n\nconst Anchorpoints = () => (\n    <>\n        <h2 id=\"anchorpoints\">Anchorpoints</h2>\n        <p>You can change where the action list will have its anchor, by default the anchor will be top right.</p>\n        <h3>Top left</h3>\n        <p>Use class <CodeTags type=\"secondary\" code=\".anchor-top-left\" /> to anchor action-list button to the top left corner of the menu.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionListComponent classNames=\"anchor-top-left\" items={items} />\n        </ComponentPreview>\n        <h3>Bottom right</h3>\n        <p>Use class <CodeTags type=\"secondary\" code=\".anchor-bottom-right\" /> to anchor action-list button to the bottom right corner of the menu.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionListComponent classNames=\"anchor-bottom-right\" items={items} />\n        </ComponentPreview>\n        <h3>Bottom left</h3>\n        <p>Use class <CodeTags type=\"secondary\" code=\".anchor-bottom-left\" /> to anchor action-list button to the bottom left corner of the menu.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionListComponent classNames=\"anchor-bottom-left\" items={items} />\n        </ComponentPreview>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"actionList\" open close />\n    </>\n);\n\nclass ActionList extends Component {\n    componentDidMount () {\n        actionList.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Action lists are small menus that remain hidden until clicked. In these you can put page links or anchors that trigger an action elsewhere.\n                </p>\n                <Overview />\n                <Anchorpoints />\n                <JavascriptMethods />\n            </DocContainer>\n        );\n    }\n}\n\nexport default ActionList;\n\n/* For testing */\nexport { Overview, Anchorpoints, JavascriptMethods };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Icon } from \"@docutils\";\n\nconst ActionListToggle = () => (\n    <>\n        <button id=\"actionListToggle\" type=\"button\" className=\"action-toggle\" aria-haspopup=\"true\">{\"\\n\"}\n            <i className=\"material-icons\" aria-hidden=\"true\">more_vert</i>{\"\\n\"}\n        </button>{\"\\n\"}\n    </>\n);\n\nconst ActionList = ({ id, classNames, toggleBtn, items }) => (\n    <>\n        <div id={id} className={`action-list${classNames ? ` ${classNames}` : \"\"}`}>{\"\\n\"}\n            {toggleBtn ? <>{toggleBtn}{\"\\n\"}</> : <ActionListToggle />}\n            <div className=\"action-menu\" aria-labelledby=\"actionListToggle\">{\"\\n\"}\n                {\n                    Array.isArray(items) ? items.map(({ name, icon }, i) => (\n                        <Fragment key={i}>\n                            <a href=\"#\" onClick={e => e.preventDefault()}>\n                                {icon ? <Icon type={icon}/> : null}{name}\n                            </a>{\"\\n\"}\n                        </Fragment>\n                    )) : null\n                }\n            </div>\n        </div>\n    </>\n);\n\nActionList.propTypes = {\n    id: PropTypes.string,\n    classNames: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        icon: PropTypes.string\n    })).isRequired\n};\n\nexport default ActionList;\n"],"sourceRoot":""}