{"version":3,"sources":["webpack://design.swedbankpay.com/./src/App/ComponentsDocumentation/components/Alerts/index.js"],"names":["alert","window","dg","BasicUsage","id","ComponentPreview","language","showCasePanel","codeFigure","type","text","AlertWithIcon","to","icon","ClosingTheAlert","code","close","className","data-alert-close","ExtendedUsage","ComplexAlert","headerText","JavascriptMethods","JavascriptDocs","componentName","Alerts","init","DocContainer","docToc","Component"],"mappings":"mrDAOQA,EAAUC,OAAOC,GAAjBF,MAEFG,EAAa,kBACf,gCACI,sBAAIC,GAAG,eAAP,eACA,qGACA,gBAAC,EAAAC,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAgBC,KAAK,UAAUC,KAAK,6BAA8B,OAClE,gBAAC,UAAD,CAAgBD,KAAK,cAAcC,KAAK,kCAAmC,OAC3E,gBAAC,UAAD,CAAgBD,KAAK,UAAUC,KAAK,6BAA8B,OAClE,gBAAC,UAAD,CAAgBD,KAAK,SAASC,KAAK,+BAKzCC,EAAgB,kBAClB,gCACI,sBAAIP,GAAG,SAAP,SACA,4FAAmE,gBAAC,KAAD,CAAMQ,GAAG,qBAAT,QAAnE,KACA,gBAAC,EAAAP,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAgBC,KAAK,UAAUC,KAAK,wCAAwCG,KAAK,iBAAkB,OACnG,gBAAC,UAAD,CAAgBJ,KAAK,cAAcC,KAAK,6CAA6CG,KAAK,SAAU,OACpG,gBAAC,UAAD,CAAgBJ,KAAK,UAAUC,KAAK,wCAAwCG,KAAK,YAAa,OAC9F,gBAAC,UAAD,CAAgBJ,KAAK,SAASC,KAAK,uCAAuCG,KAAK,aAKrFC,EAAkB,kBACpB,gCACI,sBAAIV,GAAG,qBAAP,qBACA,oGAC4E,2BACxE,gBAAC,UAAD,CAAUK,KAAK,UAAUM,KAAM,6FAEnC,gBAAC,EAAAV,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAgBC,KAAK,UAAUC,KAAK,wCAAwCM,OAAK,EAACH,KAAK,iBAAkB,OACzG,gBAAC,UAAD,CAAgBJ,KAAK,cAAcC,KAAK,6CAA6CM,OAAK,EAACH,KAAK,SAAU,OAC1G,gBAAC,UAAD,CAAgBJ,KAAK,UAAUC,KAAK,wCAAwCM,OAAK,EAACH,KAAK,YAAa,OACpG,gBAAC,UAAD,CAAgBJ,KAAK,SAASC,KAAK,uCAAuCM,OAAK,EAACH,KAAK,WAEzF,mDACA,6FAAoE,gBAAC,UAAD,CAAUJ,KAAK,YAAYM,KAAM,4BAArG,2BACA,gBAAC,EAAAV,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,UAAD,CAAgBJ,GAAG,kBAAkBK,KAAK,UAAUC,KAAK,qCAAqCG,KAAK,iBAAkB,OACrH,0BAAQJ,KAAK,SAASQ,UAAU,kBAAkBC,mBAAiB,mBAAnE,kBAKNC,EAAgB,kBAClB,gCACI,sBAAIf,GAAG,kBAAP,kBACA,0CAAiB,gBAAC,UAAD,CAAUK,KAAK,YAAYM,KAAK,mBAAjD,+FACA,wFAA+D,gBAAC,UAAD,CAAUN,KAAK,YAAYM,KAAK,gBAA/F,KACA,gBAAC,EAAAV,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,gBAAC,EAAAY,aAAD,CAAcX,KAAK,UAAUI,KAAK,eAAeQ,WAAW,WAAWL,OAAK,GACxE,0DACI,2BADJ,gCAEA,2BACA,uDAMVM,EAAoB,kBACtB,gCACI,sBAAIlB,GAAG,sBAAP,sBACA,gBAAC,EAAAmB,eAAD,CAAgBC,cAAc,YAIhCC,E,0WACF,WACIzB,EAAM0B,S,oBAGV,WACI,OACI,gBAAC,EAAAC,aAAD,CAAcC,QAAM,GAChB,qBAAGX,UAAU,QAAb,4HACA,gBAACd,EAAD,MACA,gBAACQ,EAAD,MACA,gBAACG,EAAD,MACA,gBAACK,EAAD,MACA,gBAACG,EAAD,Y,8BAbKO,aAmBrB","file":"scripts/doc-route.chunk_3.ecc5825e030c144045bf.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer, JavascriptDocs } from \"@docutils\";\nimport AlertComponent, { ComplexAlert } from \"@components/Alert\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst { alert } = window.dg;\n\nconst BasicUsage = () => (\n    <>\n        <h2 id=\"basic-usage\">Basic usage</h2>\n        <p>The default behavior of the alert present itself in a box with a border.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"success\" text=\"This is a success alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"informative\" text=\"This is an informative alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert!\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert!\" />\n        </ComponentPreview>\n    </>\n);\n\nconst AlertWithIcon = () => (\n    <>\n        <h2 id=\"icons\">Icons</h2>\n        <p>To use an alert with an icon... Read more about icon usage here <Link to=\"/core/iconography\">here</Link>.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"success\" text=\"This is a success alert with an icon!\" icon=\"check_circle\" />{\"\\n\\n\"}\n            <AlertComponent type=\"informative\" text=\"This is an informative alert with an icon!\" icon=\"info\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert with an icon!\" icon=\"warning\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert with an icon!\" icon=\"error\" />\n        </ComponentPreview>\n    </>\n);\n\nconst ClosingTheAlert = () => (\n    <>\n        <h2 id=\"closing-the-alert\">Closing the alert</h2>\n        <p>\n            To add a close-button, add the following code inside your alert-element:<br/>\n            <CodeTags type=\"primary\" code={\"<a href=\\\"#\\\" data-alert-close><i class=\\\"material-icons\\\" aria-hidden=\\\"true\\\">close</i></a>\"} />\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent type=\"success\" text=\"This is a success alert with an icon!\" close icon=\"check_circle\" />{\"\\n\\n\"}\n            <AlertComponent type=\"informative\" text=\"This is an informative alert with an icon!\" close icon=\"info\" />{\"\\n\\n\"}\n            <AlertComponent type=\"warning\" text=\"This is a warning alert with an icon!\" close icon=\"warning\" />{\"\\n\\n\"}\n            <AlertComponent type=\"danger\" text=\"This is a danger alert with an icon!\" close icon=\"error\" />\n        </ComponentPreview>\n        <h3>External close button</h3>\n        <p>To add an external close-button for your alert add the attribute <CodeTags type=\"secondary\" code={\"data-alert-close=\\\"{id}\\\"\"} /> to the button element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <AlertComponent id=\"alert-success-1\" type=\"success\" text=\"Press the button below to close me\" icon=\"check_circle\" />{\"\\n\\n\"}\n            <button type=\"button\" className=\"btn btn-primary\" data-alert-close=\"alert-success-1\">Close alert</button>\n        </ComponentPreview>\n    </>\n);\n\nconst ExtendedUsage = () => (\n    <>\n        <h2 id=\"extended-usage\">Extended usage</h2>\n        <p>By adding the <CodeTags type=\"secondary\" code=\".alert-complex\" /> class, alerts can contain additional HTML elements like headings, paragraphs and dividers.</p>\n        <p>Make sure to wrap the content in a container with the class <CodeTags type=\"secondary\" code=\".alert-body\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ComplexAlert type=\"success\" icon=\"check_circle\" headerText=\"Success!\" close>\n                <p>PDF was successfully uploaded.\n                    <br />Some additional information.</p>\n                <hr/>\n                <p>By the way, great job!</p>\n            </ComplexAlert>\n        </ComponentPreview>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"alert\" />\n    </>\n);\n\nclass Alerts extends Component {\n    componentDidMount () {\n        alert.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.</p>\n                <BasicUsage />\n                <AlertWithIcon />\n                <ClosingTheAlert />\n                <ExtendedUsage />\n                <JavascriptMethods />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Alerts;\n\n/* For testing */\nexport { BasicUsage, AlertWithIcon, ClosingTheAlert, ExtendedUsage, JavascriptMethods };\n"],"sourceRoot":""}