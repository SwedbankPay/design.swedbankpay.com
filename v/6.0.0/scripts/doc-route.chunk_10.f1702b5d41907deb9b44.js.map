{"version":3,"sources":["webpack://design.swedbankpay.com/./src/App/ComponentsDocumentation/components/Checkbox/constants.js","webpack://design.swedbankpay.com/./src/App/ComponentsDocumentation/components/Checkbox/index.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Checkbox.js"],"names":["checkboxShowCase","id","elements","component","Checkbox","groupTitle","name","options","label","group","radio","title","values","value","disabled","errorMessage","description","guidelineOptions","developerDocOptions","doOptions","dontOptions","HowTo","className","Overview","ComponentPreview","language","showCasePanel","showCasePanelAdvanced","to","ContentGuidelines","DeveloperDocumentation","CodeTags","type","code","codeFigure","removeOuterTag","DocContainer","checked","required","attrs","defaultChecked","map","i","key","htmlFor","data-error","propTypes","PropTypes","require"],"mappings":"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","file":"scripts/doc-route.chunk_10.f1702b5d41907deb9b44.js","sourcesContent":["import React from \"react\";\nimport Checkbox from \"@components/FormComponents/Checkbox\";\n\nconst options = [\n    {\n        id: \"radio-example-1\",\n        label: \"Checkbox label\"\n    },\n    {\n        id: \"radio-example-2\",\n        label: \"Checkbox label\"\n    },\n    {\n        id: \"radio-example-3\",\n        label: \"Checkbox label\"\n    }\n];\n\nexport const checkboxShowCase = {\n    id: \"no-tabs\",\n    elements: [\n        {\n            component: <Checkbox groupTitle=\"Group heading\" name=\"checkbox-group-example\" options={options} group />,\n            options: {\n                radio: [\n                    {\n                        id: \"state_radio\",\n                        title: \"State modifiers\",\n                        values: [\n                            {\n                                name: \"Enabled\",\n                                value: {\n                                    disabled: false\n                                }\n                            },\n                            {\n                                name: \"Disabled\",\n                                value: {\n                                    disabled: true\n                                }\n                            },\n                            {\n                                name: \"Error\",\n                                value: {\n                                    errorMessage: \"Descriptive helpful error message.\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Checkbox group\",\n            description: \"The default setup of the checkbox group always has a label on top which describes the checkbox group and each individual checkbox is then followed by a label which clearly describes what the options and what checking the box represents\"\n        }\n    ]\n};\n\nexport const guidelineOptions = [\n    {\n        id: \"radio-guidelines-example-1\",\n        label: \"Checkbox label\"\n    },\n    {\n        id: \"radio-guidelines-example-2\",\n        label: \"Checkbox label\"\n    },\n    {\n        id: \"radio-guidelines-example-3\",\n        label: \"Checkbox label\"\n    }\n];\n\nexport const developerDocOptions = [\n    {\n        id: \"error-example-1\",\n        label: \"Checkbox label\"\n    },\n    {\n        id: \"error-example-2\",\n        label: \"Checkbox label\"\n    },\n    {\n        id: \"error-example-3\",\n        label: \"Checkbox label\"\n    }\n];\n\nexport const doOptions = [\n    {\n        id: \"radio-do-example-1\",\n        label: \"Small\"\n    },\n    {\n        id: \"radio-do-example-2\",\n        label: \"Medium\"\n    },\n    {\n        id: \"radio-do-example-3\",\n        label: \"Large\"\n    }\n];\n\nexport const dontOptions = [\n    {\n        id: \"radio-dont-example-1\",\n        label: \"Super duper tiny small\"\n    },\n    {\n        id: \"radio-dont-example-2\",\n        label: \"Large\"\n    },\n    {\n        id: \"radio-dont-example-3\",\n        label: \"Small\"\n    }\n];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport CheckboxComponent from \"@components/FormComponents/Checkbox\";\nimport CodeTags from \"@components/CodeTags\";\nimport { checkboxShowCase, guidelineOptions, developerDocOptions, doOptions, dontOptions } from \"./constants\";\n\nconst HowTo = () => (\n    <section>\n        <h3>How to setup checkbox groups</h3>\n        <div className=\"row\">\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-success h-100\">\n                    <span className=\"h3\">Do</span>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 pb-5\">\n                            <CheckboxComponent groupTitle=\"Button size\" name=\"radio-guidelines\" options={doOptions} group />\n                        </div>\n                        <p>Short and concise, similar length on the text is always preferred when setting up a checkbox group. Try to sort the options in a logical order.</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-error\">\n                    <span className=\"h3\">Don&#x27;t</span>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 pb-5 w-50\">\n                            <CheckboxComponent groupTitle=\"Button size\" name=\"radio-guidelines\" options={dontOptions} group />\n                        </div>\n                        <p>Avoid having labels longer than the rest when possible and displaying options without order.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nconst Overview = () => (\n    <section>\n        <h2 id=\"overview\">Overview</h2>\n\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={checkboxShowCase} />\n\n        <h3>When to consider something else</h3>\n        <ul className=\"list list-bullet\">\n            <li>\n            When you want to present multiple choices where the user can only select one specific choice, the <Link to=\"/components/radiobutton\">radio button</Link> component should be used instead of checkboxes.\n            </li>\n        </ul>\n\n        <HowTo />\n    </section>\n);\n\nconst ContentGuidelines = () => (\n    <section>\n        <h2 id=\"content-guidelines\">Content guidelines</h2>\n        <div className=\"slab slab-plain\">\n            <div className=\"d-flex flex-column align-items-center py-5\">\n                <CheckboxComponent groupTitle=\"Group heading\" name=\"radio-guidelines\" options={guidelineOptions} group />\n            </div>\n        </div>\n        <ul className=\"list list-bullet\">\n            <li>The <b>Group heading</b> for the radio button group should be descriptive, explaining the context and what actions the user is choosing from. </li>\n            <li>The <b>radio button label</b> should be short, to the point and clearly explain the option. It is also preferred to have fewer than three words per label as longer words could extend a label to multiple rows which could disrupt the reading experience.</li>\n        </ul>\n    </section>\n);\n\nconst DeveloperDocumentation = () => (\n    <section>\n        <h2 id=\"developer-documentation\">Developer documentation</h2>\n        <span className=\"h3 d-inline-block mt-3\">Disabled state</span>\n        <p>Disable a checkbox by adding <CodeTags type=\"primary\" code={\"disabled\"} /> attribute to the desired Checkbox. You can also disable the <CodeTags type=\"secondary\" code={\".form-group\"} /> or <CodeTags type=\"primary\" code={\"fieldset\"} /> in which the checkbox is located, refer to <Link to=\"/components/forms\">forms</Link> for more info.</p>\n\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"d-flex justify-content-center\">\n                <CheckboxComponent id=\"disabled-example\" label=\"Checkbox label\" disabled/>\n            </div>\n        </ComponentPreview>\n\n        <span className=\"h3 d-inline-block mt-3\">Error state</span>\n        <p>Insert the error message in the attribute <CodeTags type=\"primary\" code={\"data-error\"} /> in the <CodeTags type=\"secondary\" code={\".help-block\"} /> element. </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"w-50 m-auto pl-5\">\n                <CheckboxComponent groupTitle=\"Group heading\" name=\"checkbox-group-example\" options={developerDocOptions} group errorMessage=\"Descriptive helpful error message.\" />\n            </div>\n        </ComponentPreview>\n    </section>\n);\n\nconst Checkbox = () => (\n    <DocContainer>\n        <p className=\"lead\">The checkbox component should be used when the user are presented with a list of options where one or multiple options can be selected by the user.</p>\n        <Overview />\n        <ContentGuidelines />\n        <DeveloperDocumentation />\n    </DocContainer>\n);\n\nexport default Checkbox;\n\n/* for testing */\nexport { Overview, ContentGuidelines, DeveloperDocumentation, HowTo };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, required, group, options }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend>{groupTitle}</legend>\n                    {options.map(({label, id}, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array\n};\n\nexport default Checkbox;\n"],"sourceRoot":""}