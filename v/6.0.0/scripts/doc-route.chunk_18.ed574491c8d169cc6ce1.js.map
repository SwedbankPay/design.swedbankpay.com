{"version":3,"sources":["webpack://design.swedbankpay.com/./node_modules/classnames/index.js","webpack://design.swedbankpay.com/./src/App/ComponentsDocumentation/components/Forms/index.js","webpack://design.swedbankpay.com/./src/App/components/Button/index.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Checkbox.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Radio.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Togglebox.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Datepicker.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/FormControlText.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/index.js","webpack://design.swedbankpay.com/./src/App/components/InputGroup/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","validation","dg","Overview","id","type","code","to","ComponentPreview","language","showCasePanel","codeFigure","onSubmit","e","preventDefault","className","autoComplete","label","helpBlock","placeholder","Checkbox","btnType","FormGrid","Validation","noValidate","data-validate","action","required","prefixType","prefixValue","successMessage","errorMessage","data-disable-invalid","UsageWithFieldsets","StaticText","FormControlText","text","DisabledFormComponents","Togglebox","disabled","checked","Radio","name","selectOptions","JavascriptMethods","JavascriptDocs","componentName","Forms","init","DocContainer","docToc","Component","Button","value","href","icon","loading","fullWidth","pullRight","input","active","size","bankId","btnClasses","classnames","attrs","defaultValue","role","tabIndex","onClick","aria-hidden","propTypes","PropTypes","isRequired","loader","groupTitle","group","options","defaultChecked","map","htmlFor","data-error","require","tooltip","labelTop","data-tooltip","data-tooltip-position","Datepicker","format","time","min","max","months","fulldate","mode","allowinput","Addon","color","Feedback","InputGroup","pattern","validate","readOnly","validationState","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","optional","inputGrpClasses","opt","Fragment","hidden","data-success"],"mappings":"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","file":"scripts/doc-route.chunk_18.ed574491c8d169cc6ce1.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer, JavascriptDocs } from \"@docutils\";\nimport InputGroup from \"@components/InputGroup\";\nimport Button from \"@components/Button\";\nimport { Checkbox, FormControlText, Radio, Togglebox } from \"@components/FormComponents\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst { validation } = window.dg;\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>\n            Use <CodeTags type=\"primary\" code={\"<input>\"} /> in combination with <CodeTags type=\"primary\" code={\"<form-group>\"} />s and/or <CodeTags type=\"primary\" code={\"<form>\"} />s to\n            show a collection of related inputs. <CodeTags type=\"primary\" code={\"<form-group>\"} />s can contain more than just an input, like a <CodeTags type=\"primary\" code={\"<label>\"} /> or\n            <CodeTags type=\"primary\" code={\"<help-block>\"} />s.\n        </p>\n        <p>\n            <b>Note:</b> On larger screens, <CodeTags type=\"primary\" code={\"<input>\"} /> should not be wider than half the\n            page. <CodeTags type=\"primary\" code={\"<input>\"} /> should take the available width on smaller screen sizes. <Link to=\"/core/grid\">Grid</Link> can\n            be used to achieve this behavior.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <InputGroup\n                            id=\"your-name\"\n                            type=\"text\"\n                            autoComplete=\"name\"\n                            label=\"Name\"\n                            helpBlock=\"Your first and last name\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <InputGroup\n                            id=\"email-address\"\n                            type=\"text\"\n                            label=\"Email\"\n                            autoComplete=\"email\"\n                            placeholder=\"name@mail.com\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <InputGroup\n                            id=\"phone-number\"\n                            type=\"text\"\n                            label=\"Phone number\"\n                            autoComplete=\"phone\"\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <Checkbox label={\"Subscribe to our Shovels and Tapestry catalogue\"} id=\"subscribe-checkbox\" />\n                </div>{\"\\n\"}\n                <Button type=\"primary\" label=\"Submit\" btnType=\"submit\" />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst FormGrid = () => (\n    <>\n        <h2 id=\"form-grid\">Form grid</h2>\n        <p>\n            You can use the grid system to customize how forms are displayed. Just wrap your form elements in a row container to have two or more input elements next to eachother horizontally.\n            Remember to add <CodeTags type=\"secondary\" code=\".col-{your_size}\"/> to the forms.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <div className=\"row\">\n                    <div className=\"col-5\">\n                        <InputGroup\n                            id=\"grid-first-name\"\n                            type=\"text\"\n                            autoComplete=\"given-name\"\n                            label=\"First name\"\n                        />\n                    </div>\n                    <div className=\"col-5\">\n                        <InputGroup\n                            id=\"grid-last-name\"\n                            type=\"text\"\n                            label=\"Last name\"\n                            autoComplete=\"family-name\"\n                        />\n                    </div>\n                    <div className=\"col-2\">\n                        <div className=\"form-group\">{\"\\n\"}\n                            <br />{\"\\n\"}\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>{\"\\n\"}\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst Validation = () => (\n    <>\n        <h2 id=\"validation\">Validation overview</h2>\n        <p>To use our validation, start by adding the attribute <CodeTags type=\"secondary\" code=\"novalidate\" /> to your <CodeTags type=\"primary\" code={\"<form>\"} /> element.\n        If you wish to validate your entire form, add the <CodeTags type=\"secondary\" code=\"validate\" /> attribute to the <CodeTags type=\"primary\" code={\"<form>\"}/> tag,\n        if not add it to the desired <CodeTags type=\"primary\" code={\"<input>\"} /> tags.</p>\n        <p>Validates against <CodeTags type=\"secondary\" code=\"required\" /> and <CodeTags type=\"secondary\" code=\"pattern\" />. Using <CodeTags type=\"secondary\" code=\"pattern\" /> overrides default patterns.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form noValidate data-validate=\"\">\n                <div className=\"row d-flex align-items-center\">\n                    <div className=\"col-md-5\">\n                        <InputGroup\n                            id=\"validation-name-1\"\n                            type=\"text\"\n                            label=\"Name\"\n                        />\n                    </div>\n                    <div className=\"col-md-5\">\n                        <InputGroup\n                            id=\"validation-email-1\"\n                            type=\"email\"\n                            label=\"Email\"\n                            placeholder=\"name@mail.com\"\n                        />\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n\n        <h3>Feedback</h3>\n        <p>\n            To give users validation feedback on each input insert the message in the attributes <CodeTags type=\"secondary\" code=\"success\" /> and <CodeTags type=\"secondary\" code=\"error\" /> in\n            the <CodeTags type=\"secondary\" code=\".help-block\" /> element. To display an asterisk you have to include a label with your input element.\n        </p>\n        <p>\n            <b>NOTE:</b> To include the <CodeTags type=\"secondary\" code=\"warning\"/>-icon, the input must be wrapped in a <CodeTags type=\"secondary\" code=\".input-group\" /> and cannot have\n            any trailing <CodeTags type=\"secondary\" code=\".input-group-addons\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form action=\"#\" noValidate data-validate=\"\">\n                <div className=\"row d-flex align-items-center\">\n                    <div className=\"col-md-5\">\n                        <InputGroup\n                            required\n                            id=\"validation-email-2\"\n                            type=\"email\"\n                            label=\"Email\"\n                            placeholder=\"name@mail.com\"\n                            prefixType=\"icon\"\n                            prefixValue=\"email\"\n                            helpBlock\n                            successMessage=\"Right!\"\n                            errorMessage=\"Wrong!\"\n                        />\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button className=\"btn btn-primary mb-4\" type=\"submit\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n\n        <h3>Dynamically disabled submit button</h3>\n        <p>You can also dynamically disable the submit button by adding <CodeTags type=\"secondary\" code=\"disable-invalid\" /> to the <CodeTags type=\"primary\" code={\"<button type=\\\"submit\\\">\"} /> element.</p>\n        <p><b>NOTE:</b> For this to work you also need the <CodeTags type=\"secondary\" code=\"validate\" /> attribute to be present in the <CodeTags type=\"primary\" code={\"<form>\"} /> tag.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form action=\"#\" noValidate data-validate=\"\">\n                <div className=\"row d-flex align-items-center\">\n                    <div className=\"col-md-5\">\n                        <InputGroup\n                            required\n                            id=\"validation-email-3\"\n                            type=\"email\"\n                            label=\"Email\"\n                            placeholder=\"name@mail.com\"\n                            prefixType=\"icon\"\n                            prefixValue=\"email\"\n                            successMessage=\"Right!\"\n                            errorMessage=\"Wrong!\"\n                        />\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button className=\"btn btn-primary\" type=\"submit\" data-disable-invalid=\"\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst UsageWithFieldsets = () => (\n    <>\n        <h2 id=\"usage-with-fieldsets\">Usage with fieldsets</h2>\n        <p>Use fieldsets to give your forms more structure.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <fieldset>\n                    <legend>Log in</legend>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <InputGroup\n                                id=\"fieldset-username\"\n                                type=\"text\"\n                                autoComplete=\"username\"\n                                label=\"Username\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <InputGroup\n                                id=\"fieldset-password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </div>\n                    </div>\n                    <Checkbox label=\"Remember me\" id=\"fieldset-checkbox\" />\n                </fieldset>{\"\\n\"}\n                <Button type=\"primary\" label=\"Log in\" btnType=\"submit\" />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst StaticText = () => (\n    <>\n        <h2 id=\"static-text\">Static text</h2>\n        <p>To just display static text in forms use a <CodeTags type=\"primary\" code={\"<span>\"} /> inside a form</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <FormControlText label=\"Company\" text=\"Swedbank Pay\" />\n            <FormControlText label=\"Employee\" text=\"Bob Corlsan\" />\n        </ComponentPreview>\n    </>\n);\n\nconst DisabledFormComponents = () => (\n    <>\n        <h2 id=\"disabled-form-components\">Disabled form components</h2>\n        <p>Disable whichever form component you want by adding <CodeTags type=\"secondary\" code=\"disabled\" /> to the desired input element</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Togglebox id=\"togglebox-disabled-example-1\" label=\"Enable overdrive\" disabled />\n            <Togglebox id=\"togglebox-disabled-checked-example-1\" label=\"Enable overdrive\" disabled checked/>\n            <Radio label=\"Hamburgers\" id=\"radio-disabled-example-1\" name=\"radio-disabled-example\" disabled />\n            <Checkbox label=\"Milk\" id=\"checkbox-disabled-example-3\" disabled checked />\n        </ComponentPreview>\n\n        <h3>Disable a fieldset</h3>\n        <p>Disable entire fieldsets by adding <CodeTags type=\"secondary\" code=\"disabled\" /> to the fieldset element</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form>\n                <fieldset disabled>\n                    <legend>Log in</legend>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                id=\"fieldset-disabled-username\"\n                                type=\"text\"\n                                autoComplete=\"username\"\n                                label=\"Username\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                id=\"fieldset-disabled-password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                label=\"Profession\"\n                                type=\"select\"\n                                selectOptions={[\"Bounty hunter\", \"Smuggler\", \"Jedi\"]}\n                            />\n                        </div>\n                    </div>\n                    <Checkbox label=\"Remember me\" id=\"fieldset-disabled-checkbox\" />\n                </fieldset>{\"\\n\"}\n                <Button type=\"primary\" label=\"Log in\" btnType=\"submit\" disabled />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n\n        <h3>Disable a <CodeTags type=\"secondary\" code=\".form-group\" /></h3>\n        <p>\n            Add disable styling to a <CodeTags type=\"secondary\" code=\".form-group\" /> by adding class <CodeTags type=\"secondary\" code=\".disabled\" /> to it.\n            Note that the disabled form component should still have <CodeTags type=\"secondary\" code=\"disabled\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form>\n                <fieldset>\n                    <legend>Log in</legend>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                id=\"form-group-disabled-username\"\n                                type=\"text\"\n                                autoComplete=\"username\"\n                                label=\"Username\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <InputGroup\n                                id=\"form-group-disabled-password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                autoComplete=\"current-password\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <Checkbox label=\"Remember me\" id=\"form-group-disabled-checkbox\" />\n                </fieldset>{\"\\n\"}\n                <Button type=\"primary\" label=\"Log in\" btnType=\"submit\" disabled />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"validation\" />\n        <p>\n            The <CodeTags type=\"secondary\" code=\"dg.validation.init()\" /> can be used on a form tag to initialize all fields\n            contained in the form, or you can pass a single field to initialize just that one.\n        </p>\n    </>\n);\n\nclass Forms extends Component {\n    componentDidMount () {\n        validation.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Form componenets allow you to gather user input in various different ways.\n                </p>\n                <Overview />\n                <FormGrid />\n                <Validation />\n                <UsageWithFieldsets />\n                <StaticText />\n                <DisabledFormComponents />\n                <JavascriptMethods />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Forms;\n\n/* For testing */\nexport { Overview, FormGrid, Validation, UsageWithFieldsets, StaticText, DisabledFormComponents, JavascriptMethods };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs} onClick={e => e.preventDefault()}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, required, group, options }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend>{groupTitle}</legend>\n                    {options.map(({label, id}, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, required }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className=\"radio-group\" disabled={disabled}>\n                    <legend>{groupTitle}</legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n            </form>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label, tooltip, labelTop }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className={`togglebox${labelTop ? \" label-top\" : \"\"}`}>{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}\n                {label}{\"\\n\"}\n                {tooltip &&\n                    <>\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                        </i>{\"\\n\"}\n                    </>}\n            </label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, placeholder, id }) => {\n    const attrs = {\n        id,\n        placeholder,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" defaultValue=\"placeholder\" disabled={disabled} readOnly={readOnly} required={required}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"placeholder\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n"],"sourceRoot":""}