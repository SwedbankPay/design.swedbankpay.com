{"version":3,"sources":["webpack://design.swedbankpay.com/./node_modules/classnames/index.js","webpack://design.swedbankpay.com/./src/App/Examples/examples/settings/index.js","webpack://design.swedbankpay.com/./src/App/components/Button/index.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Checkbox.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Radio.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Togglebox.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/Datepicker.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/FormControlText.js","webpack://design.swedbankpay.com/./src/App/components/FormComponents/index.js","webpack://design.swedbankpay.com/./src/App/components/InputGroup/index.js","webpack://design.swedbankpay.com/./src/App/components/MediaObject/index.js","webpack://design.swedbankpay.com/./src/App/components/Rangeslider/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","rangeslider","dg","SettingsBasic","className","id","type","label","placeholder","prefixType","prefixValue","SettingsEmailNotification","emailNotif","toggleEmailNotif","useEffect","init","checked","onChange","htmlFor","min","max","step","value","valueLabel","valueLabelPrefix","valueLabelPostfix","disabled","SettingsDescription","selectOptions","Radio","name","SettingsHeader","size","icon","heading","text","Settings","props","state","this","setState","DocContainer","ComponentPreview","language","showCasePanel","codeFigure","btnType","Component","propTypes","PropTypes","Button","href","loading","fullWidth","pullRight","input","active","bankId","btnClasses","classnames","attrs","defaultValue","role","tabIndex","onClick","e","preventDefault","aria-hidden","isRequired","loader","Checkbox","groupTitle","errorMessage","required","group","options","defaultChecked","map","data-error","require","Togglebox","tooltip","labelTop","data-tooltip","data-tooltip-position","Datepicker","format","time","months","fulldate","mode","allowinput","Addon","FormControlText","color","Feedback","InputGroup","pattern","validate","autoComplete","readOnly","validationState","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","successMessage","optional","inputGrpClasses","opt","Fragment","hidden","data-success","MediaObject","imgUrl","textSmall","mediaRight","muted","mediaClasses","iconClasses","src","headingClasses","mediaHeading","Rangeslider","data-rs-value"],"mappings":"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","file":"scripts/doc-route.chunk_55.8b9d440dd7021eb91d8a.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { Component, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DocContainer, ComponentPreview } from \"@docutils\";\n\nimport InputGroup from \"@components/InputGroup\";\nimport ButtonComponent from \"@components/Button\";\nimport { Radio } from \"@components/FormComponents\";\nimport Rangeslider from \"@components/Rangeslider\";\nimport MediaObjectComponent from \"@components/MediaObject\";\n\nconst { rangeslider } = window.dg;\n\nconst SettingsBasic = () => (\n    <>\n        <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <InputGroup\n                    id=\"validation-firstname\"\n                    type=\"text\"\n                    label=\"First name\"\n                    placeholder=\"John\"\n                />\n            </div>\n            <div className=\"col-lg-6\">\n                <InputGroup\n                    id=\"validation-lastname\"\n                    type=\"text\"\n                    label=\"Last name\"\n                    placeholder=\"Smith\"\n                />\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-lg-12\">\n                <InputGroup\n                    id=\"validation-email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"john.smith@email.com\"\n                    prefixType=\"icon\"\n                    prefixValue=\"email\"\n                />\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <InputGroup\n                    id=\"validation-password\"\n                    type=\"password\"\n                    label=\"Password\"\n                    placeholder=\"***********\"\n                    prefixType=\"icon\"\n                    prefixValue=\"vpn_key\"\n                />\n            </div>\n            <div className=\"col-lg-6\">\n                <InputGroup\n                    id=\"validation-confirm-password\"\n                    type=\"password\"\n                    label=\"Confirm password\"\n                    placeholder=\"***********\"\n                    prefixType=\"icon\"\n                    prefixValue=\"vpn_key\"\n                />\n            </div>\n        </div>\n    </>\n);\n\nconst SettingsEmailNotification = ({ emailNotif, toggleEmailNotif }) => {\n\n    useEffect(() => {\n        rangeslider.init();\n    });\n\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-lg-6\">\n                <div className=\"togglebox\" >\n                    <input type=\"checkbox\" id=\"togglebox-settings-email\" checked={emailNotif} onChange={toggleEmailNotif} />\n                    <label htmlFor=\"togglebox-settings-email\">Email notifications</label>\n                </div>\n            </div>\n            <div className=\"col-lg-6\">\n                <label className=\"d-none d-lg-block\">Email notification frequency</label>\n                <Rangeslider min={1} max={50} step={1} value={7} valueLabel valueLabelPrefix=\"Every\" valueLabelPostfix=\"days\" disabled={!emailNotif} />\n            </div>\n        </div>\n\n    );\n};\n\nconst SettingsDescription = () => (\n    <>\n        <fieldset className=\"mt-5 mb-5\">\n            <legend>Public settings</legend>\n            <InputGroup\n                id=\"settings-description\"\n                type=\"textarea\"\n                label=\"Profile description\"\n                placeholder=\"This profile description is an example to be followed\"\n                prefixType=\"icon\"\n                prefixValue=\"format_quote\"\n            />\n            <InputGroup\n                label=\"User Status\"\n                type=\"select\"\n                selectOptions={[\"Available\", \"Away\", \"On break\", \"Not Available\"]}\n                prefixValue=\"Status\"\n            />\n            <label>Profile visibility</label>\n            <Radio label=\"Visible to all\" id=\"settings-radio-1\" name=\"settings-radio\" checked />\n            <Radio label=\"Visible to accepted contacts only\" id=\"settings-radio-2\" name=\"settings-radio\" />\n            <Radio label=\"Hidden\" id=\"settings-radio-3\" name=\"settings-radio\" />\n        </fieldset>\n    </>\n);\n\nconst SettingsHeader = () => (\n    <header>\n        <div className=\"row\">\n            <div className=\"col-auto mr-auto\">\n                <h2 className=\"panel-title\">Profile settings</h2>\n            </div>\n            <div className=\"col-auto\">\n                <MediaObjectComponent size=\"sm\" icon=\"account_circle\" heading=\"John Smith\" text=\"john.smith@email.com\" />\n            </div>\n        </div>\n    </header>\n);\n\nclass Settings extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            emailNotif: true\n        };\n\n    }\n\n    toggleEmailNotif () {\n        this.setState({ emailNotif: !this.state.emailNotif });\n    }\n\n    render () {\n        return (\n            <DocContainer>\n                <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                    <section className=\"panel panel-brand\">\n                        <SettingsHeader />\n                        <div className=\"panel-body\">\n                            <div className=\"container\">\n                                <form>\n                                    <SettingsBasic />\n                                    <SettingsEmailNotification emailNotif={this.state.emailNotif} toggleEmailNotif={() => this.toggleEmailNotif()} />\n                                    <SettingsDescription />\n                                    <ButtonComponent type=\"primary\" label=\"Save changes\" icon=\"save\" btnType=\"submit\" />\n                                </form>\n                            </div>\n                        </div>\n                    </section>\n                </ComponentPreview>\n            </DocContainer>\n        );\n    }\n}\n\nSettingsEmailNotification.propTypes = {\n    emailNotif: PropTypes.bool.isRequired,\n    toggleEmailNotif: PropTypes.func.isRequired\n};\n\nexport default Settings;\n\nexport { SettingsHeader, SettingsBasic, SettingsEmailNotification, SettingsDescription };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs} onClick={e => e.preventDefault()}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, required, group, options }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend>{groupTitle}</legend>\n                    {options.map(({label, id}, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, required }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className=\"radio-group\" disabled={disabled}>\n                    <legend>{groupTitle}</legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n            </form>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label, tooltip, labelTop }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className={`togglebox${labelTop ? \" label-top\" : \"\"}`}>{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}\n                {label}{\"\\n\"}\n                {tooltip &&\n                    <>\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                        </i>{\"\\n\"}\n                    </>}\n            </label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, placeholder, id }) => {\n    const attrs = {\n        id,\n        placeholder,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" defaultValue=\"placeholder\" disabled={disabled} readOnly={readOnly} required={required}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"placeholder\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst MediaObject = ({ size, imgUrl, icon, heading, text, textSmall, mediaRight, muted }) => {\n    const mediaHeading = () => {\n        const headingClasses = classnames(muted ? \"text-muted\" : null);\n\n        switch (size) {\n            case \"sm\":\n                return <h4 className={headingClasses}>{heading}</h4>;\n            case \"lg\":\n                return <h2 className={headingClasses}>{heading}</h2>;\n            default:\n                return <h3 className={headingClasses}>{heading}</h3>;\n        }\n    };\n\n    const mediaClasses = classnames(\n        \"media\",\n        mediaRight ? \"media-right\" : null,\n        size ? `media-${size}` : null\n    );\n\n    const iconClasses = classnames(\n        \"material-icons\",\n        muted ? \"text-muted\" : null\n    );\n\n    return (\n        <div className={mediaClasses}>\n            {(imgUrl || icon) ?\n                <div className=\"media-img\">{\"\\n\"}\n                    {imgUrl ? <> <img src={imgUrl} /> {\"\\n\"} </> : null}\n                    {icon ? <> <i className={iconClasses} aria-hidden=\"true\">{icon}</i> {\"\\n\"} </> : null}\n                </div>\n                : null}\n            <div className=\"media-body\">\n                {mediaHeading()}\n                <p>{textSmall ? <small>{text}</small> : text}</p>\n            </div>\n        </div>\n    );\n};\n\nMediaObject.propTypes = {\n    size: PropTypes.oneOf([\"sm\", \"lg\"]),\n    imgUrl: PropTypes.string,\n    icon: PropTypes.string,\n    heading: PropTypes.string.isRequired,\n    text: PropTypes.string,\n    textSmall: PropTypes.bool,\n    mediaRight: PropTypes.bool,\n    muted: PropTypes.bool\n};\n\nexport default MediaObject;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ label, name, min, max, step, value, disabled, valueLabelPrefix, valueLabelPostfix, tooltip }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    return (\n        <div className=\"rangeslider\">{\"\\n\"}\n            <input {...attrs}/>{\"\\n\"}\n            <div className=\"d-flex justify-content-between\">{\"\\n\"}\n                <label htmlFor=\"rangeslider\" className=\"rangeslider-label\">{\"\\n\"}\n                    {label}{\"\\n\"}\n                    {tooltip &&\n                        <>\n                            <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                            </i>{\"\\n\"}\n                        </>}\n                </label>{\"\\n\"}\n                <output className=\"value-label\" >{\"\\n\\t\\t\"}\n                    <p>{\"\\n\\t\\t\\t\"}\n                        {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                        <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                        {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n                    </p>\n                </output>\n            </div>\n            <div className=\"value-range\">{\"\\n\"}\n                <small>{valueLabelPrefix ? valueLabelPrefix : null}{min}{valueLabelPostfix ? valueLabelPostfix : null}</small>{\"\\n\"}\n                <small>{valueLabelPrefix ? valueLabelPrefix : null}{max}{valueLabelPostfix ? valueLabelPostfix : null}</small>{\"\\n\"}\n            </div>\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string\n};\n\nexport default Rangeslider;\n"],"sourceRoot":""}