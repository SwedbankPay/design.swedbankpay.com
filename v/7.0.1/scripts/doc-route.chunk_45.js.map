{"version":3,"sources":["webpack://@swedbankpay/design-guide/./node_modules/classnames/index.js","webpack://@swedbankpay/design-guide/./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedDatePickerGroup/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Checkbox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Radio.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Togglebox.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Datepicker.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/FormControlText.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/index.js","webpack://@swedbankpay/design-guide/./src/App/components/InputGroup/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","useEffect","datepicker","className","Datepicker","value","label","prefixType","prefixValue","fulldate","id","Checkbox","checked","name","disabled","groupTitle","errorMessage","tooltip","optional","required","group","options","attrs","type","defaultChecked","map","htmlFor","propTypes","PropTypes","require","Radio","Togglebox","labelTop","format","time","min","max","months","mode","allowinput","placeholder","Addon","FormControlText","text","color","Feedback","icon","InputGroup","pattern","validate","defaultValue","autoComplete","readOnly","validationState","selectOptions","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","successMessage","inputGrpClasses","classnames","opt","Fragment","hidden"],"mappings":"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","file":"scripts/doc-route.chunk_45.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { useEffect } from \"react\";\n\nimport { Datepicker as DatepickerComponent } from \"@components/FormComponents\";\n\nimport { datepicker } from \"@src/scripts/main\";\n\nconst CustomersDetailedDatePickerGroup = () => {\n\n    useEffect(() => {\n        datepicker.init();\n    });\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <DatepickerComponent\n                    value=\"2000-01-01\"\n                    label=\"From:\"\n                    prefixType=\"icon\"\n                    prefixValue=\"event\"\n                    fulldate\n                    id=\"init-value-datepicker-from\"\n                />\n            </div>\n            <div className=\"col-sm-6\">\n                <DatepickerComponent\n                    value=\"2020-01-01\"\n                    label=\"To:\"\n                    prefixType=\"icon\"\n                    prefixValue=\"event\"\n                    fulldate\n                    id=\"init-value-datepicker-to\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default CustomersDetailedDatePickerGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, name, disabled, groupTitle, label, errorMessage, tooltip, optional, required, group, options }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        name,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className={`checkbox-group${errorMessage ? \" has-error\" : \"\"}`} disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {optional && <>{\"\\n\"}\n                            <span>(optional)</span>\n                        </>}\n                        {tooltip && <>{\"\\n\"}\n                            <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                    help_outline{\"\\n\"}\n                            </i>\n                        </>}\n                    </legend>\n                    {options.map(({ label, id }, i) => <div className=\"checkbox\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} />{\"\\n\"}\n                        <label htmlFor={id}>{label}\n\n                        </label>{\"\\n\"}\n                    </div>)}\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </fieldset>\n            </form>\n                : <>\n                    <div className={`checkbox${errorMessage ? \" has-error\" : \"\"}`}>{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>\n                    {errorMessage ? <div className=\"help-block\" data-error={errorMessage || null}></div> : null}\n                </>\n            }\n        </>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    errorMessage: PropTypes.string,\n    require: PropTypes.bool,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    tooltip: PropTypes.bool,\n    optional: PropTypes.bool\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, tooltip, required }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className=\"radio-group\" disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {tooltip && <>\n                            {\"\\n\"}<i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}</i>\n                        </>}{\"\\n\"}\n                    </legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n            </form>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool,\n    tooltip: PropTypes.bool\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label, tooltip, labelTop }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className={`togglebox${labelTop ? \" label-top\" : \"\"}`}>{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}\n                {label}{\"\\n\"}\n                {tooltip &&\n                    <>\n                        <i className=\"material-icons help-icon\" data-tooltip=\"Some informational text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}\n                        </i>{\"\\n\"}\n                    </>}\n            </label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, placeholder, id }) => {\n    const attrs = {\n        id,\n        placeholder,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Togglebox };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons material-icons-outlined\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage,\n    tooltip,\n    optional\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}${type === \"select\" ? errorMessage ? \" has-error\" : \"\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{\"\\n\"}{label} {optional && \"(optional)\"}{tooltip && \"\\n\"}\n                {tooltip &&\n                    <i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                        help_outline{\"\\n\"}</i>}{\"\\n\"}\n            </label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon || errorMessage ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" defaultValue=\"placeholder\" disabled={disabled} readOnly={readOnly} required={required}>{\"\\n\\t\\t\"}\n                                {placeholder && <option value=\"placeholder\" disabled hidden>{placeholder}</option> }\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option value={opt}>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n"],"sourceRoot":""}