{"version":3,"sources":["webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/RadioButton/constants.js","webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/RadioButton/index.js","webpack://@swedbankpay/design-guide/./src/App/components/FormComponents/Radio.js"],"names":["radiobuttonShowCase","id","elements","component","Radio","groupTitle","name","options","label","checked","group","checkbox","title","inputs","value","tooltip","radio","values","disabled","description","doOptions","dontOptions","ContentGuidelinesOptions","HowTo","className","Overview","ComponentPreview","language","showCasePanel","showCasePanelAdvanced","codeFigure","to","ContentGuidelines","DeveloperDocumentation","CodeTags","type","code","removeOuterTag","DocContainer","attrs","defaultChecked","required","map","i","key","htmlFor","propTypes","PropTypes","require"],"mappings":"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","file":"scripts/doc-route.chunk_29.js","sourcesContent":["import React from \"react\";\nimport Radio from \"@components/FormComponents/Radio\";\n\nconst options = [\n    {\n        id: \"radio-example-1\",\n        label: \"Radio button label\",\n        checked: true\n    },\n    {\n        id: \"radio-example-2\",\n        label: \"Radio button label\"\n    },\n    {\n        id: \"radio-example-3\",\n        label: \"Radio button label\"\n    }\n];\n\nexport const radiobuttonShowCase = {\n    id: \"no-tabs\",\n    elements: [\n        {\n            component: <Radio groupTitle=\"Group heading\" name=\"radio-group-example\" options={options} group/>,\n            options: {\n                checkbox: [\n                    {\n                        title: \"Label add on\",\n                        inputs: [\n                            {\n                                id: \"with_help_icon\",\n                                name: \"With help icon\",\n                                value: {\n                                    tooltip: true\n                                }\n                            }\n                        ]\n                    }\n                ],\n                radio: [\n                    {\n                        id: \"state_radio\",\n                        title: \"State modifiers\",\n                        values: [\n                            {\n                                name: \"Enabled\",\n                                value: {\n                                    disabled: false\n                                }\n                            },\n                            {\n                                name: \"Disabled\",\n                                value: {\n                                    disabled: true\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Radio button group\",\n            description: \"The default setup of the radio button group has a label on top which describes the radio button group and each individual radio button is then followed by a label which clearly describes the options and what selecting an option entails. In a radio button group one choice is always selected by default.\"\n        }\n    ]\n};\n\nexport const doOptions = [\n    {\n        id: \"radio-do-example-1\",\n        label: \"Debit card\",\n        checked: true\n    },\n    {\n        id: \"radio-do-example-2\",\n        label: \"Credit card\"\n    },\n    {\n        id: \"radio-do-example-3\",\n        label: \"Gift card\"\n    }\n];\n\nexport const dontOptions = [\n    {\n        id: \"radio-dont-example-1\",\n        label: \"Choose a later date for delivery\"\n    },\n    {\n        id: \"radio-dont-example-2\",\n        label: \"Instant delivery\"\n    },\n    {\n        id: \"radio-dont-example-3\",\n        label: \"4-7days delivery\"\n    }\n];\n\nexport const ContentGuidelinesOptions = [\n    {\n        id: \"radio-guidelines-example-1\",\n        label: \"Radio button label\",\n        checked: true\n    },\n    {\n        id: \"radio-guidelines-example-2\",\n        label: \"Radio button label\"\n    },\n    {\n        id: \"radio-guidelines-example-3\",\n        label: \"Radio button label\"\n    }\n];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport Radio from \"@components/FormComponents/Radio\";\nimport { radiobuttonShowCase, doOptions, dontOptions, ContentGuidelinesOptions } from \"./constants\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst HowTo = () => (\n    <section id=\"how-to-container\">\n        <h3>How to setup radio button group</h3>\n        <div className=\"row\">\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-success\">\n                    <span className=\"h3\">Do</span>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 pb-5\">\n                            <Radio groupTitle=\"Card type\" name=\"radio-do-example\" options={doOptions} group/>\n                        </div>\n                    </div>\n                </div>\n                <p>Do use short labels of similar length and sort the options either in a logical or alphabetical order.</p>\n            </div>\n            <div className=\"col-6\">\n                <div className=\"slab slab-plain slab-border-error\">\n                    <span className=\"h3\">Don&#x27;t</span>\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <div className=\"pt-3 w-50\">\n                            <Radio groupTitle=\"Card type\" name=\"radio-dont-example\" options={dontOptions} group/>\n                        </div>\n                    </div>\n                </div>\n                <p>Avoid long labels sorted in an illogical order.</p>\n            </div>\n        </div>\n    </section>\n);\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={radiobuttonShowCase} codeFigure />\n\n        <h3>When to consider something else</h3>\n        <ul className=\"list list-bullet\">\n            <li>\n                If you want to present multiple choices where the user can select more than one option, a <Link to=\"/components/checkbox\">checkbox</Link> group should be used instead of radio buttons.\n            </li>\n        </ul>\n\n        <HowTo />\n    </>\n);\n\nconst ContentGuidelines = () => (\n    <>\n        <h2 id=\"content-guidelines\">Content guidelines</h2>\n        <ul className=\"list list-bullet\">\n            <li>The <b>group heading</b> should descriptive, explaining the context of the options to choose from.</li>\n            <li>The <b>radio</b> button label should be short, to the point and clearly explain the option. It is also preferred to have fewer than three words per label as longer words could extend a label to multiple rows which could disrupt the reading experience.</li>\n        </ul>\n    </>\n);\n\nconst DeveloperDocumentation = () => (\n    <section>\n        <h2>Developer documentation</h2>\n        <div className=\"slab slab-plain\">\n            <div className=\"d-flex flex-column align-items-center\">\n                <div>\n                    <Radio groupTitle=\"Group heading\" name=\"radio-dont-example\" options={ContentGuidelinesOptions} group/>\n                </div>\n            </div>\n        </div>\n        <span className=\"h3 d-inline-block mt-3\">Disabled state</span>\n        <p>Disable a radio button by adding <CodeTags type=\"primary\" code=\"disabled\"/> attribute to the desired radio button.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"d-flex justify-content-center\">\n                <Radio id=\"radio-example-10\" label=\"Radio button label\" name=\"radio-example\" disabled checked/>\n            </div>\n        </ComponentPreview>\n    </section>\n);\n\nconst RadioButton = () => (\n    <DocContainer>\n        <section id=\"radio-button-doc\">\n            <p className=\"lead\">The radio button component should be used when the user are presented with a list of options where only one choice can be selected.</p>\n            <Overview />\n            <ContentGuidelines />\n            <DeveloperDocumentation />\n        </section>\n    </DocContainer>\n);\n\nexport default RadioButton;\n\n/* for testing */\nexport { Overview, ContentGuidelines, DeveloperDocumentation, HowTo };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, group, groupTitle, options, name, tooltip, required }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null,\n        required\n    };\n\n    return (\n        <>\n            {group ? <form>\n                <fieldset className=\"radio-group\" disabled={disabled}>\n                    <legend>\n                        {groupTitle}\n                        {tooltip && <>\n                            {\"\\n\"}<i className=\"material-icons help-icon\" data-tooltip=\"Some informative text\" data-tooltip-position=\"top\">{\"\\n\"}\n                                help_outline{\"\\n\"}</i>\n                        </>}{\"\\n\"}\n                    </legend>\n                    {options.map(({ label, id, checked }, i) => <div className=\"radio\" key={i}>{\"\\n\"}\n                        <input {...attrs} id={id} defaultChecked={checked}/>{\"\\n\"}\n                        <label htmlFor={id}>{label}</label>{\"\\n\"}\n                    </div>)}\n                </fieldset>\n            </form>\n                : <>\n                    <div className=\"radio\">{\"\\n\"}\n                        <input {...attrs} />{\"\\n\"}\n                        {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    group: PropTypes.bool,\n    groupTitle: PropTypes.string,\n    options: PropTypes.array,\n    require: PropTypes.bool,\n    tooltip: PropTypes.bool\n};\n\nexport default Radio;\n"],"sourceRoot":""}