{"version":3,"sources":["webpack://@swedbankpay/design-guide/./src/App/ComponentsDocumentation/components/Lists/index.js","webpack://@swedbankpay/design-guide/./src/App/components/ActionList/index.js"],"names":["items","name","icon","BasicList","id","type","code","ComponentPreview","language","showCasePanel","codeFigure","className","InlineList","BulletList","DescriptionList","SettingsList","ItemList","ItemListLarge","href","ItemListBordered","onClick","e","preventDefault","HoverItemList","StripedItemList","process","Lists","actionList","DocContainer","docToc","Component","ActionListToggle","ActionList","classNames","toggleBtn","Array","isArray","map","i","Fragment","key","Icon","propTypes","PropTypes","isRequired"],"mappings":"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","file":"scripts/doc-route.chunk_22.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport ActionListComponent from \"@components/ActionList\";\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport CodeTags from \"@components/CodeTags\";\n\nimport { actionList } from \"@src/scripts/main\";\n\nconst items = [\n    {\n        name: \"Add bookmark\",\n        icon: \"bookmark\"\n    },\n    {\n        name: \"Add client\",\n        icon: \"business_center\"\n    },\n    {\n        name: \"Add document\",\n        icon: \"add_circle\"\n    },\n    {\n        name: \"Add user\",\n        icon: \"person_add\"\n    }\n];\n\nconst BasicList = () => (\n    <>\n        <h2 id=\"basic-list\">Basic list</h2>\n        <p>\n            Add <CodeTags type=\"secondary\" code=\".list\" /> to a list to display the basic list. Our lists do not use bullet points.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"list\">\n                <li>Bread</li>\n                <li>Coffee beans</li>\n                <li>Milk</li>\n                <li>Butter</li>\n            </ul>\n        </ComponentPreview>\n        <h3>Nested list</h3>\n        <p>\n            Use nesting with lists to signify that some items are children of another item.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"list\">\n                <li>Coffee</li>\n                <li>Tea {\"\\n\"}\n                    <ul>\n                        <li>Black tea</li>\n                        <li>Green tea</li>\n                        <li>Ice tea</li>\n                    </ul>\n                </li>\n                <li>Milk</li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\nconst InlineList = () => (\n    <>\n        <h2 id=\"inline-list\">Inline list</h2>\n        <p>\n            Use <CodeTags type=\"secondary\" code=\".list-inline\" /> on a list to make all items appear on the same line.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"list list-inline\">\n                <li>Coffee</li>\n                <li>Tea</li>\n                <li>Milk</li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nconst BulletList = () => (\n    <>\n        <h2 id=\"bullet-list\">Bullet list</h2>\n        <p>\n            Add <CodeTags type=\"secondary\" code=\".list-bullet\" /> on a list to make it a bullet list.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"list list-bullet\">\n                <li>Coffee</li>\n                <li>Tea</li>\n                <li>Milk</li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nconst DescriptionList = () => (\n    <>\n        <h2 id=\"description-list\">Description list</h2>\n        <p>\n            The description list lets you provide each item with a more specific description of each item. Add <CodeTags type=\"secondary\" code=\".description-list\" /> to your dl.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <dl className=\"description-list\">{\"\\n\"}\n                <dt>Frog</dt>\n                <dd>Wet green thing that croaks.</dd>{\"\\n\"}\n                <dt>Rabbit</dt>\n                <dd>Warm fluffy thing that jumps.</dd>{\"\\n\"}\n                <dt>Color</dt>\n                <dd>Any hue except white or black.</dd>{\"\\n\"}\n            </dl>\n        </ComponentPreview>\n    </>\n);\n\nconst SettingsList = () => (\n    <>\n        <h2 id=\"settings-list\">Settings list</h2>\n        <p>\n            Use <CodeTags type=\"secondary\" code=\".settings-list\" /> to visualize different settings in your web application.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"settings-list\">\n                <li>{\"\\n\"}\n                    <i className=\"material-icons text-success\" aria-hidden=\"true\">check</i>\n                    Shovels and tapestry newsletter{\"\\n\"}\n                </li>\n                <li>{\"\\n\"}\n                    <i className=\"material-icons text-warning\" aria-hidden=\"true\">remove</i>\n                    Spoon collectors weekly newsletter{\"\\n\"}\n                </li>\n                <li>{\"\\n\"}\n                    <i className=\"material-icons text-danger\" aria-hidden=\"true\">clear</i>\n                    Energetic squirrels newsletter{\"\\n\"}\n                </li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nconst ItemList = () => (\n    <>\n        <h2 id=\"item-list\">Item list </h2>\n        <p>\n            <CodeTags type=\"secondary\" code=\".item-list\"/>s is a good way to offer more extensive information about each item. Each item has their own box which seperates the items more clearly than our other options.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"item-list\">\n                <li>\n                    <div>\n                        <h3>Foo</h3>\n                        <small>Due date 2 days</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">2120 kr</span>\n                    </div>\n                </li>\n                <li>\n                    <div>\n                        <h3>Bar</h3>\n                        <small>Due date 1 day</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">1100 kr</span>\n                    </div>\n                </li>\n                <li>\n                    <div>\n                        <h3>Baz</h3>\n                        <small>Due date 5 days</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">200 kr</span>\n                    </div>\n                </li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nconst ItemListLarge = () => (\n    <>\n        <h2 id=\"item-list-lg\">Large item list </h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"item-list item-list-lg\">\n                <li>\n                    <div>\n                        <h3>Foo</h3>\n                        <small>Due date 2 days</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">2120 kr</span>\n                    </div>\n                    <footer><a href=\"#\">Se faktura</a></footer>\n                </li>\n                <li>\n                    <div>\n                        <h3>Bar</h3>\n                        <small>Due date 1 day</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">1100 kr</span>\n                    </div>\n                    <footer className=\"item-list-footer\">\n                        <a href=\"#\">Se faktura</a>\n                    </footer>\n                </li>\n                <li>\n                    <div>\n                        <h3>Baz</h3>\n                        <small>Due date 5 days</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">200 kr</span>\n                    </div>\n                    <footer className=\"item-list-footer\">\n                        <a href=\"#\">Se faktura</a>\n                    </footer>\n                </li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nconst ItemListBordered = () => (\n    <>\n        <h2 id=\"item-list-bordered\">Bordered item list </h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"item-list item-list-bordered\">\n                <li>\n                    <div>\n                        <h3>Foo</h3>\n                        <small>Due date 2 days</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">2120 kr</span>\n                    </div>\n                    <footer><a href=\"#\" onClick={ e => e.preventDefault()}>Se faktura</a></footer>\n                </li>\n                <li>\n                    <div>\n                        <h3>Bar</h3>\n                        <small>Due date 1 day</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">1100 kr</span>\n                    </div>\n                    <footer className=\"item-list-footer\">\n                        <a href=\"#\" onClick={ e => e.preventDefault()}>Se faktura</a>\n                    </footer>\n                </li>\n                <li>\n                    <div>\n                        <h3>Baz</h3>\n                        <small>Due date 5 days</small>\n                    </div>\n                    <div>\n                        <span className=\"h3 text-highlight\">200 kr</span>\n                    </div>\n                    <footer className=\"item-list-footer\">\n                        <a href=\"#\" onClick={ e => e.preventDefault()}>Se faktura</a>\n                    </footer>\n                </li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nconst HoverItemList = () => (\n    <>\n        <h2 id=\"hover-item-list\">Hover item list </h2>\n        <p>\n            Include <CodeTags type=\"secondary\" code=\".item-list-hover\" /> to give your items a hover effect. You can use this on any variation of <CodeTags type=\"secondary\" code=\".item-list\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"item-list item-list-hover\">\n                <li>{\"\\n\"}\n                    <span>4925*********004</span>{\"\\n\"}\n                    <span className=\"status status-success\">Active</span>{\"\\n\"}\n                </li>\n                <li>{\"\\n\"}\n                    <span>4925*********004</span>{\"\\n\"}\n                    <span className=\"status status-warning\">Expires soon</span>{\"\\n\"}\n                </li>\n                <li>{\"\\n\"}\n                    <span>4925*********004</span>{\"\\n\"}\n                    <span className=\"status status-danger\">Expired</span>{\"\\n\"}\n                </li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nconst StripedItemList = () => (\n    <>\n        <h2 id=\"item-list-striped\">Striped item list</h2>\n        <p>\n            If you want more seperation between each item you can use <CodeTags type=\"secondary\" code=\".item-list-striped\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ul className=\"item-list item-list-striped\">\n                <li>\n                    <span>4925*********004</span>\n                    <ActionListComponent items={items} />\n                </li>\n                <li>{\"\\n\"}\n                    <span>{\"\\n\\t\\t\\t\"}4925*********004{\"\\n\\t\\t\\t\"}\n                        <span className=\"badge badge-blue\">new</span>{\"\\n\"}\n                    </span>{\"\\n\"}\n                    <a href={`https://developer.${process.env.brand}.com`}>developer.{process.env.brand}.com</a>{\"\\n\"}\n                </li>\n                <li>{\"\\n\"}\n                    <span>4925*********004</span>{\"\\n\"}\n                    <i className=\"material-icons\" aria-hidden=\"true\">star</i>{\"\\n\"}\n                </li>\n                <li>{\"\\n\"}\n                    <span>4925*********004</span>{\"\\n\"}\n                    <span className=\"status status-success\">Active</span>{\"\\n\"}\n                    <button type=\"button\" className=\"btn btn-danger btn-xs\"><i className=\"material-icons\">delete</i></button>{\"\\n\"}\n                </li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nclass Lists extends Component {\n    componentDidMount () {\n        actionList.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Use lists to give a structured view of information.\n                </p>\n                <BasicList />\n                <InlineList />\n                <BulletList />\n                <DescriptionList />\n                <SettingsList />\n                <ItemList />\n                <ItemListLarge />\n                <ItemListBordered />\n                <HoverItemList />\n                <StripedItemList />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Lists;\n\nexport {\n    BasicList,\n    InlineList,\n    BulletList,\n    DescriptionList,\n    SettingsList,\n    ItemList,\n    ItemListBordered,\n    ItemListLarge,\n    HoverItemList,\n    StripedItemList\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Icon } from \"@docutils\";\n\nconst ActionListToggle = () => (\n    <>\n        <button id=\"actionListToggle\" type=\"button\" className=\"action-toggle\" aria-haspopup=\"true\">{\"\\n\"}\n            <i className=\"material-icons\" aria-hidden=\"true\">more_vert</i>{\"\\n\"}\n        </button>{\"\\n\"}\n    </>\n);\n\nconst ActionList = ({ id, classNames, toggleBtn, items }) => (\n    <>\n        <div id={id} className={`action-list${classNames ? ` ${classNames}` : \"\"}`}>{\"\\n\"}\n            {toggleBtn ? <>{toggleBtn}{\"\\n\"}</> : <ActionListToggle />}\n            <div className=\"action-menu\" aria-labelledby=\"actionListToggle\">{\"\\n\"}\n                {\n                    Array.isArray(items) ? items.map(({ name, icon }, i) => (\n                        <Fragment key={i}>\n                            <a href=\"#\" onClick={e => e.preventDefault()}>\n                                {icon ? <Icon type={icon}/> : null}{name}\n                            </a>{\"\\n\"}\n                        </Fragment>\n                    )) : null\n                }\n            </div>\n        </div>\n    </>\n);\n\nActionList.propTypes = {\n    id: PropTypes.string,\n    classNames: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        icon: PropTypes.string\n    })).isRequired\n};\n\nexport default ActionList;\n"],"sourceRoot":""}