{"version":3,"sources":["webpack://design.swedbankpay.com/./node_modules/classnames/index.js","webpack://design.swedbankpay.com/./src/App/components/IconPreview/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","IconPreview","name","squaredFlag","preview","previewSize","size","className","type","split","iconClasses","classnames","includes","propTypes","PropTypes"],"mappings":";sWAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,EAAU,EAAOD,GAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,GAC+C,WAAtB,EAAOqB,SAA2BA,YAEtE,kBACL,OAAOrB,GADF,QAAe,OAAf,aAINsB,OAAOtB,WAAaA,EAhDrB,I,81BCHD,IAAMuB,EAAc,SAAC,GAAuE,IAArEC,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACvE9B,EAAa6B,EAAYA,EAAUE,MAAM,KAAO,GAChDC,EAAcC,eAAA,GAChBH,EACAF,EAAO,GAAH,OAAME,EAAN,YAAcF,GAAS,GAClB,mBAATE,EAA4B,GAA5B,UAAoCA,EAApC,YAA4CN,GAC5CC,EAAc,oBAAsB,IAJpB,SAKbzB,KAGP,OAAO0B,GAAWC,EACd,uBAAKE,UAAU,gBACX,qBAAGA,UAAWG,EAAa,cAAY,QAAQA,EAAYE,SAAS,kBAAoBV,EAAO,MAC/F,wBAAMK,UAAU,sCACXF,EAAcC,EAAOJ,IAG9B,qBAAGK,UAAWG,EAAa,cAAY,QAAQA,EAAYE,SAAS,kBAAoBV,EAAO,OAGvGD,EAAYY,UAAY,CACpBX,KAAMY,sBACNN,KAAMM,UAAgB,CAClB,iBACA,eACA,cAEJX,YAAaW,SACbV,QAASU,SACTR,KAAMQ,UAAgB,CAClB,OACA,QACA,SACA,QACA,SAEJP,UAAWO,YAGf","file":"scripts/doc-route.chunk_105.285c1ec8bf0aede2d84c.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst IconPreview = ({ name, squaredFlag, preview, previewSize, size, className, type }) => {\n    const classNames = className ? className.split(\" \") : [];\n    const iconClasses = classnames(\n        type,\n        size ? `${type}-${size}` : \"\",\n        type === \"material-icons\" ? \"\" : `${type}-${name}`,\n        squaredFlag ? \"flag-icon-squared\" : \"\",\n        ...classNames\n    );\n\n    return preview || previewSize ? (\n        <div className=\"icon-preview\">\n            <i className={iconClasses} aria-hidden=\"true\">{iconClasses.includes(\"material-icons\") ? name : null}</i>\n            <code className=\"code-tags code-tags-secondary mt-2\">\n                {previewSize ? size : name}\n            </code>\n        </div>\n    ) : <i className={iconClasses} aria-hidden=\"true\">{iconClasses.includes(\"material-icons\") ? name : null}</i>;\n};\n\nIconPreview.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([\n        \"material-icons\",\n        \"payment-icon\",\n        \"flag-icon\"\n    ]),\n    squaredFlag: PropTypes.bool,\n    preview: PropTypes.bool,\n    size: PropTypes.oneOf([\n        \"tiny\",\n        \"small\",\n        \"medium\",\n        \"large\",\n        \"huge\"\n    ]),\n    className: PropTypes.string\n};\n\nexport default IconPreview;\n"],"sourceRoot":""}