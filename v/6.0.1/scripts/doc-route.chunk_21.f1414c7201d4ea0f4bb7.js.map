{"version":3,"sources":["webpack://design.swedbankpay.com/./node_modules/classnames/index.js","webpack://design.swedbankpay.com/./src/App/ComponentsDocumentation/components/Links/index.js","webpack://design.swedbankpay.com/./src/App/components/ActionLink/index.js","webpack://design.swedbankpay.com/./src/App/components/Button/index.js","webpack://design.swedbankpay.com/./src/App/components/Link/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","TextLinks","id","ComponentPreview","language","showCasePanel","codeFigure","linkText","ButtonLinks","type","code","label","IconLinks","leftIcon","rightIcon","ActionLink","badge","text","ActionLinkBadge","ActionLinkSmallText","smallText","multiline","ActionLinkBadgeSmallText","ActionLinkNewTab","newTab","DocContainer","docToc","className","props","link","otherProps","href","rel","target","ActionLinkContent","propTypes","PropTypes","Button","name","value","icon","loading","disabled","btnType","fullWidth","pullRight","input","active","size","bankId","btnClasses","classnames","attrs","defaultValue","role","tabIndex","onClick","e","preventDefault","isRequired","loader","Link"],"mappings":"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","file":"scripts/doc-route.chunk_21.f1414c7201d4ea0f4bb7.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport ActionLinkComponent from \"@components/ActionLink\";\nimport LinkComponent from \"@components/Link\";\nimport ButtonComponent from \"@components/Button\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst TextLinks = () => (\n    <>\n        <h2 id=\"text-links\">Text links</h2>\n        <p>Text links are links used in paragraphs of text.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>{\"\\n\"}\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.{\"\\n\"}\n                Ut enim ad minim veniam, quis nostrud <LinkComponent linkText=\"exercitation\" /> ullamco laboris nisi ut aliquip ex ea commodo consequat.{\"\\n\"}\n            </p>\n        </ComponentPreview>\n\n        <h3>Small link</h3>\n        <p>Use links in small with legal texts, such as links to terms and contitions</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <small>{\"\\n\"}\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.{\"\\n\"}\n                Ut enim ad minim veniam, quis nostrud <LinkComponent linkText=\"exercitation\" /> ullamco laboris nisi ut aliquip ex ea commodo consequat.{\"\\n\"}\n            </small>\n        </ComponentPreview>\n    </>\n);\n\nconst ButtonLinks = () => (\n    <>\n        <h2 id=\"button-links\">Links with buttons</h2>\n        <p>\n            To use links with buttons, for instance as a cancel button,\n            use <CodeTags type=\"secondary\" code=\".btn.btn-link\" /> in a <CodeTags type=\"primary\" code=\"<button>\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ButtonComponent type=\"primary\" label=\"Approve\" />{\"\\n\"}\n            <ButtonComponent type=\"link\" label=\"Cancel\"/>\n        </ComponentPreview>\n    </>\n);\n\nconst IconLinks = () => (\n    <>\n        <h2 id=\"icon-links\">Links with icons</h2>\n        <p>\n            Use class <CodeTags type=\"secondary\" code=\".icon-link\" /> on links with icons. Using icon with links can help further\n            convey the result of clicking on the link, as can be seen in the examples below.\n        </p>\n        <h4>Navigates to a previous page</h4>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <LinkComponent linkText=\"My invoices\" leftIcon=\"arrow_back_ios\"/>\n        </ComponentPreview>\n        <h4>Enables editing</h4>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <LinkComponent linkText=\"My invoices\" leftIcon=\"edit\"/>\n        </ComponentPreview>\n        <h4>Opens in a new tab</h4>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <LinkComponent linkText=\"My invoices\" rightIcon=\"open_in_new\"/>\n        </ComponentPreview>\n    </>\n);\n\nconst ActionLink = () => (\n    <>\n        <h2 id=\"action-link\">Action link</h2>\n        <p>Action links.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\"/>\n        </ComponentPreview>\n    </>\n);\n\nconst badge = {\n    type: \"badge-default badge-number\",\n    text: \"40\"\n};\n\nconst ActionLinkBadge = () => (\n    <>\n        <h2 id=\"action-link-badge\">Action link with Badge</h2>\n        <p>Action links.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" badge={badge}/>\n        </ComponentPreview>\n    </>\n);\n\nconst ActionLinkSmallText = () => (\n    <>\n        <h2 id=\"action-link-small-text\">Action link with small text</h2>\n        <p>A small text can be displayed as a part of the Action Link. There are two types of Action Links with small text, one with the inline small text and one with the texts on different lines.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" smallText=\"This link directs to my page\"/>\n        </ComponentPreview>\n        <p>Use <CodeTags type=\"secondary\" code=\".action-link-multiline\"/> for the Action Link with the texts on different lines.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" smallText=\"This link directs to my page\" multiline={true} />\n        </ComponentPreview>\n    </>\n);\n\nconst ActionLinkBadgeSmallText = () => (\n    <>\n        <h2 id=\"action-link-badge-small-text\">Action link with Badge and small text</h2>\n        <p>Action Links can contain both Badge and small text</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" smallText=\"This link directs to my page\" badge={badge}/>\n        </ComponentPreview>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" smallText=\"This link directs to my page\" multiline={true} badge={badge}/>\n        </ComponentPreview>\n    </>\n);\n\nconst ActionLinkNewTab = () => (\n    <>\n        <h2 id=\"action-link-new-tab\">Action link that opens a new tab</h2>\n        <p>An Action Link used in cases where a new tab is supposed to open is provided. Use <CodeTags type=\"secondary\" code=\".action-link-new-tab\" /> when it is known that the target will open in a new tab. </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" newTab={true} />\n        </ComponentPreview>\n    </>\n);\n\nconst Links = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">\n            Links\n        </p>\n        <TextLinks />\n        <ButtonLinks />\n        <IconLinks />\n        <ActionLink />\n        <ActionLinkBadge />\n        <ActionLinkSmallText />\n        <ActionLinkBadgeSmallText />\n        <ActionLinkNewTab />\n    </DocContainer>\n);\n\nexport default Links;\n\n/* For testing */\nexport { TextLinks, ButtonLinks, IconLinks, ActionLink, ActionLinkBadge, ActionLinkSmallText, ActionLinkBadgeSmallText, ActionLinkNewTab };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ActionLink = props => {\n    const { link, ...otherProps } = props;\n\n    return (\n        <>\n            {otherProps.newTab ?\n                <a className=\"action-link action-link-new-tab\" href={link ? link : \"#\"} rel=\"noopener noreferrer\" target=\"_blank\">{\"\\n\"}\n                    <ActionLinkContent {...otherProps} />\n                </a>\n                :\n                <a className=\"action-link\" href=\"#\" >{\"\\n\"}\n                    <ActionLinkContent {...otherProps} />\n                </a>\n            }\n        </>\n    );\n};\n\nconst ActionLinkContent = ({ linkText, badge, smallText, multiline, newTab }) => (\n    <>\n        {newTab ? <><i className=\"material-icons\" aria-hidden=\"true\">open_in_new</i>{\"\\n\"}</> : null}\n        {badge ? <><span className={`badge ${badge.type}`}>{badge.text}</span>{\"\\n\"}</> : null}\n        {multiline ?\n            <span className=\"action-link-multiline\">{\"\\n\"}\n                {linkText}{\"\\n\"}\n                {smallText ? <span className=\"small-text\">{smallText}</span> : null }{\"\\n\"}\n            </span>\n            :\n            <>\n                {linkText}{\"\\n\"}\n                {smallText ? <span className=\"small-text\">{smallText}</span> : null }{\"\\n\"}\n            </>\n        }{\"\\n\"}\n    </>\n);\n\nActionLink.propTypes = {\n    props: PropTypes.shape({\n        linkText: PropTypes.string.isRequired,\n        badge: PropTypes.shape({\n            type: PropTypes.string.isRequired,\n            text: PropTypes.string.isRequired\n        }),\n        smallText: PropTypes.string,\n        multiline: PropTypes.bool,\n        newTab: PropTypes.bool,\n        link: PropTypes.string\n    })\n};\n\nActionLinkContent.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    badge: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }),\n    smallText: PropTypes.string,\n    multiline: PropTypes.bool,\n    newTab: PropTypes.bool\n};\n\nexport default ActionLink;\n\nexport { ActionLinkContent };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs} onClick={e => e.preventDefault()}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Link = ({ linkText, leftIcon, rightIcon }) => (\n    <a href=\"\" className={(leftIcon || rightIcon) ? \"icon-link\" : null} onClick={e => e.preventDefault()}>\n        {leftIcon && <i className=\"material-icons\" aria-hidden=\"true\">{leftIcon}</i>}\n        {leftIcon || rightIcon ? <span className={(leftIcon ? \"ml-2\" : null) || (rightIcon ? \"mr-2\" : null)}>{linkText}</span> : linkText}\n        {rightIcon && <i className=\"material-icons\" aria-hidden=\"true\">{rightIcon}</i>}\n    </a>\n);\n\nLink.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    leftIcon: PropTypes.string,\n    rightIcon: PropTypes.string\n};\n\nexport default Link;\n"],"sourceRoot":""}