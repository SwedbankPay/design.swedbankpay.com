{"version":3,"sources":["webpack:///./src/App/ComponentsDocumentation/components/Slab/index.js"],"names":["validation","window","dg","DefaultSlab","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","id","_docutils__WEBPACK_IMPORTED_MODULE_1__","language","showCasePanel","codeFigure","className","action","noValidate","data-validate","htmlFor","aria-hidden","type","placeholder","required","data-success","data-error","SlabColors","_components_CodeTags__WEBPACK_IMPORTED_MODULE_2__","code","SlabBorderTop","SlabElevated","SlabWell","SlabArrow","SlabMuted","SlabSizes","Slab","Component","init","docToc"],"mappings":"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","file":"scripts/doc-route.chunk_30.js?ac99209523a2012fe213","sourcesContent":["import React, { Component } from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst { validation } = window.dg;\n\nconst DefaultSlab = () => (\n    <>\n        <h2 id=\"default-slab\">Default slab</h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab slab-default\">\n                <p>Do you want to sign up for the slab mailing list?</p>\n                <form action=\"#\" noValidate data-validate>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"validation-email-2\">Email</label>\n                        <div className=\"input-group\">\n                            <span className=\"input-group-addon\"><i className=\"material-icons\" aria-hidden=\"true\">email</i></span>\n                            <input type=\"email\" className=\"form-control\" id=\"validation-email-2\" placeholder=\"bob.corlsan@example.com\" required />\n                        </div>\n                        <div className=\"help-block\" data-success=\"Right!\" data-error=\"Wrong!\">This one might be a little tricky</div>\n                    </div>\n                    <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                </form>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst SlabColors = () => (\n    <>\n        <h2 id=\"slab-colors\">Slab colors</h2>\n        <p>\n        We offer three additional slab types; <CodeTags type=\"secondary\" code=\".slab-primary\" />, <CodeTags type=\"secondary\" code=\".slab-secondary\" /> and <CodeTags type=\"secondary\" code=\".slab-plain\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab slab-primary\">\n                <h4>Here is some text and then a striped item list</h4>\n                <small>\n                    Some text with a small listing of items underneath.\n                </small>\n                <ul className=\"list item-list\">\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                </ul>\n            </div>\n\n            <div className=\"slab slab-secondary\">\n                <h4>Here is some text and then a striped item list</h4>\n                <small>\n                    Some text with a small listing of items underneath.\n                </small>\n                <ul className=\"list item-list\">\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                </ul>\n            </div>\n\n            <div className=\"slab slab-plain\">\n                <h4>Here is some text and then a striped item list</h4>\n                <small>\n                    Some text with a small listing of items underneath.\n                </small>\n                <ul className=\"list item-list\">\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                </ul>\n            </div>\n        </ComponentPreview>\n        <p>\n        If no slab extension class is added, it is defaulted to white. In this example we use the utility class <CodeTags type=\"secondary\" code=\".border\" /> to make it easier for us to see the actual slab container.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab border\">\n                <h4>Here is some text and then a striped item list</h4>\n                <small>\n                    Some text with a small listing of items underneath.\n                </small>\n                <ul className=\"list item-list\">\n                    <li>Item 1</li>\n                    <li>Item 2</li>\n                    <li>Item 3</li>\n                </ul>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst SlabBorderTop = () => (\n    <>\n        <h2 id=\"slab-border-top\">Slab with top border</h2>\n        <p>Slab with top border can be used to display, for instance, pros and cons lists.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"slab slab-plain slab-border-success\">\n                        <h3>Do</h3>\n                        <ul className=\"list list-bullet\">\n                            <li>Do this</li>\n                            <li>Do that</li>\n                            <li>Do the other</li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"slab slab-plain slab-border-error\">\n                        <h3>Don&apos;t</h3>\n                        <ul className=\"list list-bullet\">\n                            <li>Don&apos;t do this</li>\n                            <li>Don&apos;t do that</li>\n                            <li>Don&apos;t to the other</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst SlabElevated = () => (\n    <>\n        <h2 id=\"elevated-slab\">Elevated slab</h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab slab-default slab-elevated\">\n                Look ma, im elevated!\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst SlabWell = () => (\n    <>\n        <h2 id=\"slab-well\">Slab well</h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab slab-default slab-well\">\n                Look ma, im in a well!\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst SlabArrow = () => (\n    <>\n        <h2 id=\"slab-arrow\">Slab arrow</h2>\n        <p>\n            <CodeTags type=\"secondary\" code=\".slab-arrow\" /> inherits the color from the slab it is appended to.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab slab-default slab-arrow\">\n                <p>\n                    This slab has some connection to the content above.\n                </p>\n            </div>\n            <div className=\"slab border slab-arrow\">\n                <p>\n                    This slab has some connection to the content above.\n                </p>\n            </div>\n            <div className=\"slab slab-primary slab-arrow\">\n                <p>\n                    This slab has some connection to the content above.\n                </p>\n            </div>\n            <div className=\"slab slab-secondary slab-arrow\">\n                <p>\n                    This slab has some connection to the content above.\n                </p>\n            </div>\n            <div className=\"slab slab-plain slab-arrow\">\n                <p>\n                    This slab has some connection to the content above.\n                </p>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst SlabMuted = () => (\n    <>\n        <h2 id=\"slab-muted\">Slab muted</h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab slab-default slab-muted\">\n                <h4>This text will be gray.</h4>{\"\\n\"}\n                <span>And this text will be gray.</span>{\"\\n\"}\n                Even this text will be gray!\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst SlabSizes = () => (\n    <>\n        <h2 id=\"slab-sizes\">Slab sizes</h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab slab-default slab-sm\">\n                This is very snug.\n            </div>\n        </ComponentPreview>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"slab slab-default slab-lg\">\n                This is so spacious I can hardly believe it!\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nclass Slab extends Component {\n    componentDidMount () {\n        validation.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Slabs are container components, therefore it works with whatever you want to put in it.\n                </p>\n                <DefaultSlab />\n                <SlabColors />\n                <SlabBorderTop />\n                <SlabElevated />\n                <SlabWell />\n                <SlabArrow />\n                <SlabMuted />\n                <SlabSizes />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Slab;\n\n/* For testing */\nexport { DefaultSlab, SlabElevated, SlabWell, SlabArrow, SlabColors, SlabSizes, SlabMuted, SlabBorderTop };\n"],"sourceRoot":""}