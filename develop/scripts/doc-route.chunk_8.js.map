{"version":3,"sources":["webpack:///./src/App/components/MediaObject/index.js","webpack:///./src/App/components/Card/index.js","webpack:///./src/App/components/Cards/index.js","webpack:///./src/App/ComponentsDocumentation/components/Card/constants.js","webpack:///./src/App/ComponentsDocumentation/components/Card/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/classnames/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","MediaObject","_ref","size","imgUrl","icon","heading","text","textSmall","mediaRight","muted","mediaClasses","classnames","concat","iconClasses","a","createElement","className","Fragment","src","aria-hidden","headingClasses","mediaHeading","propTypes","PropTypes","oneOf","string","isRequired","bool","Card","type","titleTxt","titleMarkup","imgSrc","textSection","smallText","btn","btnClass","btnText","bodyClass","footerTxt","footerLink","footerLinkTxt","children","alt","map","secText","i","key","href","object","array","Cards","wide","onClick","e","preventDefault","overviewCards","id","tabsId","elements","tab","component","react_default","options","radio","title","values","name","value","default","process","description","textArr","Overview","docutils","language","showCasePanel","showCasePanelAdvanced","codeFigure","OldCard","showCasePanelSm","components_Card","react_router_dom","to","CodeTags","code","Component","docToc","Card_Overview","Card_OldCard","__webpack_amd_options__","module","exports","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","_typeof","push","Array","isArray","inner","apply","call","join","define","undefined","__WEBPACK_AMD_DEFINE_RESULT__","window"],"mappings":"sGAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,KAAAS,EAAAT,EAAAK,EAAAG,GAIME,EAAc,SAACC,GAAwE,IAAtEC,EAAsED,EAAtEC,KAAMC,EAAgEF,EAAhEE,OAAQC,EAAwDH,EAAxDG,KAAMC,EAAkDJ,EAAlDI,QAASC,EAAyCL,EAAzCK,KAAMC,EAAmCN,EAAnCM,UAAWC,EAAwBP,EAAxBO,WAAYC,EAAYR,EAAZQ,MAcvEC,EAAeC,IACjB,QACAH,EAAa,cAAgB,KAC7BN,EAAO,SAAHU,OAAYV,GAAS,MAGvBW,EAAcF,IAChB,iBACAF,EAAQ,aAAe,MAG3B,OACIf,EAAAoB,EAAAC,cAAA,OAAKC,UAAWN,GACVP,GAAUC,EACRV,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,aAAa,KACvBb,EAAST,EAAAoB,EAAAC,cAAArB,EAAAoB,EAAAG,SAAA,SAAGvB,EAAAoB,EAAAC,cAAA,OAAKG,IAAKf,IAAb,IAAyB,KAAzB,KAAqC,KAC9CC,EAAOV,EAAAoB,EAAAC,cAAArB,EAAAoB,EAAAG,SAAA,SAAGvB,EAAAoB,EAAAC,cAAA,KAAGC,UAAWH,EAAaM,cAAY,QAAQf,GAAlD,IAA6D,KAA7D,KAAyE,MAEnF,KACNV,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,cAhCF,WACjB,IAAMI,EAAiBT,IAAWF,EAAQ,aAAe,MAEzD,OAAQP,GACJ,IAAK,KACD,OAAOR,EAAAoB,EAAAC,cAAA,MAAIC,UAAWI,GAAiBf,GAC3C,IAAK,KACD,OAAOX,EAAAoB,EAAAC,cAAA,MAAIC,UAAWI,GAAiBf,GAC3C,QACI,OAAOX,EAAAoB,EAAAC,cAAA,MAAIC,UAAWI,GAAiBf,IAwBtCgB,GACD3B,EAAAoB,EAAAC,cAAA,SAAIR,EAAYb,EAAAoB,EAAAC,cAAA,aAAQT,GAAgBA,MAMxDN,EAAYsB,UAAY,CACpBpB,KAAMqB,IAAUC,MAAM,CAAC,KAAM,OAC7BrB,OAAQoB,IAAUE,OAClBrB,KAAMmB,IAAUE,OAChBpB,QAASkB,IAAUE,OAAOC,WAC1BpB,KAAMiB,IAAUE,OAChBlB,UAAWgB,IAAUI,KACrBnB,WAAYe,IAAUI,KACtBlB,MAAOc,IAAUI,MAGN3B,a,iCCxDfV,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAGMgC,EAAO,SAAC3B,GAAD,IAAG4B,EAAH5B,EAAG4B,KAAMC,EAAT7B,EAAS6B,SAAUC,EAAnB9B,EAAmB8B,YAAaC,EAAhC/B,EAAgC+B,OAAQ1B,EAAxCL,EAAwCK,KAAM2B,EAA9ChC,EAA8CgC,YAAaC,EAA3DjC,EAA2DiC,UAAWC,EAAtElC,EAAsEkC,IAAKC,EAA3EnC,EAA2EmC,SAAUC,EAArFpC,EAAqFoC,QAASC,EAA9FrC,EAA8FqC,UAAWC,EAAzGtC,EAAyGsC,UAAWC,EAApHvC,EAAoHuC,WAAYC,EAAhIxC,EAAgIwC,cAAeC,EAA/IzC,EAA+IyC,SAA/I,OACThD,EAAAoB,EAAAC,cAAA,OAAKC,UAAS,OAAAJ,OAASiB,EAAO,SAAHjB,OAAYiB,GAAS,KAC3CG,EAAStC,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,YAAY,KACjCtB,EAAAoB,EAAAC,cAAA,OAAKG,IAAKc,EAAQW,IAAI,KAAK,MACtB,KACRb,EACMpC,EAAAoB,EAAAC,cAAA,UAAQC,UAAU,eACjBtB,EAAAoB,EAAAC,cAAA,UAAKe,IAENC,EACIrC,EAAAoB,EAAAC,cAAA,UAAQC,UAAU,eAChBe,GAEH,KACVrC,EAAAoB,EAAAC,cAAA,OAAKC,UAAS,YAAAJ,OAAc0B,EAAY,IAAH1B,OAAO0B,GAAc,KACrDI,GAAsB,KACtBpC,EAAOZ,EAAAoB,EAAAC,cAAA,SAAIT,GAAY,KAAM,KAC7B2B,EACGA,EAAYW,IAAI,SAACC,EAASC,GAAV,OAAgBpD,EAAAoB,EAAAC,cAAA,KAAGgC,IAAG,UAAAnC,OAAYkC,IAAMD,KACtD,KAELV,EAAMzC,EAAAoB,EAAAC,cAAA,UAAQc,KAAK,SAASb,UAAS,kBAAAJ,OAAoBwB,EAAW,IAAHxB,OAAOwB,GAAa,KAAO,KAAMC,EAAS,MAAiB,MAEhIE,GAAaE,EACR/C,EAAAoB,EAAAC,cAAA,UAAQC,UAAU,eACfkB,EAAYxC,EAAAoB,EAAAC,cAAA,aAAQmB,GAAqB,KACzCK,GAAwB,KACxBE,EAAgB/C,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,eAActB,EAAAoB,EAAAC,cAAA,KAAGiC,KAAMR,GAAc,KAAMC,IAA2B,MAC9F,OAIxBb,EAAKN,UAAY,CACbO,KAAMN,IAAUC,MAAM,CAAC,UAAW,YAAa,UAC/CQ,OAAQT,IAAUE,OAClBK,SAAUP,IAAUE,OACpBM,YAAaR,IAAU0B,OACvB7C,KAAMmB,IAAUE,OAChBnB,KAAMiB,IAAUE,OAChBS,UAAWX,IAAUE,OACrBQ,YAAaV,IAAU2B,MACvBf,IAAKZ,IAAUI,KACfU,QAASd,IAAUE,OACnBe,WAAYjB,IAAUE,OACtBgB,cAAelB,IAAUE,QAGdG,a,iCClDftC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAGMuD,EAAQ,SAAClD,GAAD,IAAG4B,EAAH5B,EAAG4B,KAAMC,EAAT7B,EAAS6B,SAAUE,EAAnB/B,EAAmB+B,OAAQ5B,EAA3BH,EAA2BG,KAAME,EAAjCL,EAAiCK,KAAMoC,EAAvCzC,EAAuCyC,SAAUU,EAAjDnD,EAAiDmD,KAAjD,OACV1D,EAAAoB,EAAAC,cAAArB,EAAAoB,EAAAG,SAAA,KACMmC,EAgBE1D,EAAAoB,EAAAC,cAAArB,EAAAoB,EAAAG,SAAA,KACIvB,EAAAoB,EAAAC,cAAA,KAAGiC,KAAK,IAAIhC,UAAS,eAAAJ,OAAiBiB,EAAjB,gBAAqC,KACrDzB,GAAQV,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,cAAc,KACjCZ,EAAM,MAEXV,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,iBAAiB,KAC3Bc,GAAYpC,EAAAoB,EAAAC,cAAA,QAAMC,UAAU,MAAMc,GAClCxB,GAAQZ,EAAAoB,EAAAC,cAAA,YAAOT,GAAc,KAC7BoC,GAAYA,GACV,KACPhD,EAAAoB,EAAAC,cAAA,KAAGC,UAAU,kBAAb,iBAAgD,MAC/C,MA1BTtB,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,qBAAqB,KAChCtB,EAAAoB,EAAAC,cAAA,KAAGiC,KAAK,IAAIK,QAAS,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBvC,UAAS,eAAAJ,OAAiBiB,IAAS,KAC5EzB,GAAQV,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,cAAc,KACjCZ,EAAM,MAEV4B,GAAUtC,EAAAoB,EAAAC,cAAA,OAAKG,IAAKc,IACrBtC,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,iBAAiB,KAC3Bc,GAAYpC,EAAAoB,EAAAC,cAAA,QAAMC,UAAU,MAAMc,GAClCxB,GAAQZ,EAAAoB,EAAAC,cAAA,YAAOT,GAAc,KAC7BoC,GAAYA,GACV,KACPhD,EAAAoB,EAAAC,cAAA,KAAGC,UAAU,kBAAb,iBAAgD,MAC/C,QAoBrBmC,EAAM7B,UAAY,CACdO,KAAMN,IAAUC,MAAM,CAAC,UAAW,YAAa,aAAaE,WAC5DI,SAAUP,IAAUE,OACpBO,OAAQT,IAAUE,OAClBrB,KAAMmB,IAAU0B,OAChB3C,KAAMiB,IAAUE,OAChBiB,SAAUnB,IAAU0B,OACpBG,KAAM7B,IAAUI,MAGLwB,a,gHC3CFK,EAAgB,CACzBC,GAAI,gBACJC,OAAQ,sBACRC,SAAU,CACN,CACIC,IAAK,WACLC,UAAWC,EAAAhD,EAAAC,cAACoC,EAAA,QAAD,CACPrB,SAAS,QACTD,KAAK,UACLvB,KAAK,uCACLF,KAAM0D,EAAAhD,EAAAC,cAAA,KAAGC,UAAU,kBAAb,qBAEV+C,QAAS,CACLC,MAAO,CACH,CACIP,GAAI,eACJQ,MAAO,SACPC,OAAQ,CACJ,CACIC,KAAM,QACNC,MAAO,CACHhE,KAAM,OAGd,CACI+D,KAAM,YACNE,SAAS,EACTD,MAAO,CACHhE,KAAM0D,EAAAhD,EAAAC,cAAA,KAAGC,UAAU,kBAAb,qBAGd,CACImD,KAAM,aACNC,MAAO,CACHpC,OAAQ,GAAFpB,OApCzB0D,YAoCyB,2CACNlE,KAAM,SAKtB,CACIqD,GAAI,cACJQ,MAAO,eACPC,OAAQ,CACJ,CACIC,KAAM,eACNC,MAAO,CACHvC,KAAM,YAGd,CACIsC,KAAM,YACNC,MAAO,CACHvC,KAAM,cAGd,CACIsC,KAAM,SACNC,MAAO,CACHvC,KAAM,iBAO9BoC,MAAO,iBACPM,YAAa,+TAEjB,CACIX,IAAK,OACLC,UAAWC,EAAAhD,EAAAC,cAACoC,EAAA,QAAD,CACPrB,SAAS,QACTD,KAAK,UACLvB,KAAK,uCACL8C,MAAI,EACJhD,KAAM0D,EAAAhD,EAAAC,cAAA+C,EAAAhD,EAAAG,SAAA,aAEV8C,QAAS,CACLC,MAAO,CACH,CACIP,GAAI,eACJQ,MAAO,SACPC,OAAQ,CACJ,CACIC,KAAM,QACNC,MAAO,CACHhE,KAAM,OAGd,CACI+D,KAAM,YACNE,SAAS,EACTD,MAAO,CACHhE,KAAM0D,EAAAhD,EAAAC,cAAA+C,EAAAhD,EAAAG,SAAA,eAKtB,CACIwC,GAAI,cACJQ,MAAO,eACPC,OAAQ,CACJ,CACIC,KAAM,eACNC,MAAO,CACHvC,KAAM,YAGd,CACIsC,KAAM,YACNC,MAAO,CACHvC,KAAM,cAGd,CACIsC,KAAM,SACNC,MAAO,CACHvC,KAAM,iBAO9BoC,MAAO,aACPM,YAAa,uT,o3BC1HzB,IAAMC,EAAU,CAAC,wBAAyB,sBAAuB,0BAA2B,4DAA6D,QAInJC,EAAW,kBACbX,EAAAhD,EAAAC,cAAA+C,EAAAhD,EAAAG,SAAA,KACI6C,EAAAhD,EAAAC,cAAA,MAAI0C,GAAG,YAAP,YACAK,EAAAhD,EAAAC,cAAC2D,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,sBAAuBrB,EAAesB,YAAU,IAEhGhB,EAAAhD,EAAAC,cAAA,UAAK,kBACL+C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,OACX8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,iBACX8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,6CACX8C,EAAAhD,EAAAC,cAAA,gBADJ,uGAGI+C,EAAAhD,EAAAC,cAAA,OAAKG,IAAG,GAAAN,OAdX0D,YAcW,wCAAqDtD,UAAU,sBAG/E8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,iBACX8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,2CACX8C,EAAAhD,EAAAC,cAAA,UAAK,SADT,+FAGI+C,EAAAhD,EAAAC,cAAA,OAAKG,IAAG,GAAAN,OArBX0D,YAqBW,0CAAuDtD,UAAU,uBAIrF8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,OACX8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,iBACX8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,6CACX8C,EAAAhD,EAAAC,cAAA,gBADJ,qIAGI+C,EAAAhD,EAAAC,cAAA,OAAKG,IAAG,GAAAN,OA9BX0D,YA8BW,6CAA0DtD,UAAU,sBAGpF8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,iBACX8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,2CACX8C,EAAAhD,EAAAC,cAAA,UAAK,SADT,uLAII+C,EAAAhD,EAAAC,cAAA,OAAKG,IAAG,GAAAN,OAtCX0D,YAsCW,+CAA4DtD,UAAU,yBAO5F+D,EAAU,kBACZjB,EAAAhD,EAAAC,cAAA+C,EAAAhD,EAAAG,SAAA,KACI6C,EAAAhD,EAAAC,cAAA,MAAI0C,GAAG,YAAP,YACAK,EAAAhD,EAAAC,cAAC2D,EAAA,YAAD,CAAa7C,KAAK,WAClBiC,EAAAhD,EAAAC,cAAA,+MAIA+C,EAAAhD,EAAAC,cAAC2D,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACI,iBAAe,EAACF,YAAU,GACtEhB,EAAAhD,EAAAC,cAACkE,EAAA,QAAD,CACInD,SAAS,aACTD,KAAK,UACLG,OAAO,oCACP1B,KAAK,0DACLiC,UAAU,iBAGlBuB,EAAAhD,EAAAC,cAAA,4BACA+C,EAAAhD,EAAAC,cAAA,oBACY+C,EAAAhD,EAAAC,cAACmE,EAAA,KAAD,CAAMC,GAAG,cAAT,QADZ,wHAEqBrB,EAAAhD,EAAAC,cAACqE,EAAA,QAAD,CAAUvD,KAAK,YAAYwD,KAAK,YAFrD,wFAIAvB,EAAAhD,EAAAC,cAAC2D,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACE,YAAU,GACtDhB,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,OACX8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,mCACX8C,EAAAhD,EAAAC,cAACkE,EAAA,QAAD,CACIpD,KAAK,UACLC,SAAS,eACTxB,KAAK,YACL4B,UAAU,kBACVC,KAAG,EACHE,QAAQ,SACRD,SAAS,oBACTE,UAAU,sBAEVwB,EAAAhD,EAAAC,cAACf,EAAA,QAAD,CAAaE,KAAK,KAAKE,KAAK,gBAAgBC,QAAQ,MAAMC,KAAK,WAAWC,WAAS,EAACE,OAAK,MAIjGqD,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,mCACX8C,EAAAhD,EAAAC,cAACkE,EAAA,QAAD,CACIpD,KAAK,UACLC,SAAS,eACTG,YAAauC,EACbtC,UAAU,0BACVC,KAAG,EACHE,QAAQ,SACRD,SAAS,oBACTE,UAAU,wBAIlBwB,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,mCACX8C,EAAAhD,EAAAC,cAACkE,EAAA,QAAD,CACIpD,KAAK,UACLC,SAAS,eACTE,OAAO,oCACP1B,KAAK,wCACLmC,cAAc,mBAK9BqB,EAAAhD,EAAAC,cAAA,wBACA+C,EAAAhD,EAAAC,cAAA,iDACyC+C,EAAAhD,EAAAC,cAACqE,EAAA,QAAD,CAAUvD,KAAK,YAAYwD,KAAK,kBADzE,KAC6FvB,EAAAhD,EAAAC,cAACqE,EAAA,QAAD,CAAUvD,KAAK,YAAYwD,KAAK,oBAD7H,QACsJvB,EAAAhD,EAAAC,cAACqE,EAAA,QAAD,CAAUvD,KAAK,YAAYwD,KAAK,gBADtL,KAGAvB,EAAAhD,EAAAC,cAAC2D,EAAA,iBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACE,YAAU,GACtDhB,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,OACX8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,mCACX8C,EAAAhD,EAAAC,cAACkE,EAAA,QAAD,CACIpD,KAAK,UACLC,SAAS,eACTE,OAAO,oCACP1B,KAAK,uEAELwD,EAAAhD,EAAAC,cAAA,MAAIC,UAAU,QACV8C,EAAAhD,EAAAC,cAAA,UAAI+C,EAAAhD,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,gBAAJ,mBACA8C,EAAAhD,EAAAC,cAAA,UAAI+C,EAAAhD,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,YAAJ,eAIZ8C,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,mCACX8C,EAAAhD,EAAAC,cAACkE,EAAA,QAAD,CACIpD,KAAK,YACLC,SAAS,iBACTxB,KAAK,gEACLmC,cAAc,eAEdqB,EAAAhD,EAAAC,cAACf,EAAA,QAAD,CAAaE,KAAK,KAAKE,KAAK,kBAAkBC,QAAQ,UAAUC,KAAK,sBAAsBC,WAAS,EAACE,OAAK,MAGlHqD,EAAAhD,EAAAC,cAAA,OAAKC,UAAU,mCACX8C,EAAAhD,EAAAC,cAACkE,EAAA,QAAD,CACIpD,KAAK,QACLC,SAAS,aACTE,OAAO,oCACP1B,KAAK,gEACLmC,cAAc,eAEdqB,EAAAhD,EAAAC,cAACf,EAAA,QAAD,CAAaE,KAAK,KAAKE,KAAK,gBAAgBC,QAAQ,MAAMC,KAAK,WAAWC,WAAS,EAACE,OAAK,UAQ3GmB,E,8ZAAa0D,gB,uCAEX,OACIxB,EAAAhD,EAAAC,cAAC2D,EAAA,aAAD,CAAca,QAAM,GAChBzB,EAAAhD,EAAAC,cAAA,4SAIQ+C,EAAAhD,EAAAC,cAACmE,EAAA,KAAD,CAAMC,GAAG,qBAAT,SAJR,aAM4BrB,EAAAhD,EAAAC,cAACyE,EAAD,MAC5B1B,EAAAhD,EAAAC,cAAC0E,EAAD,Y,gCAMD7D,a,mBCpLf,SAAA8D,GACAC,EAAOC,QAAUF,I;;;;;;;;;;;CCMhB,WACA,aAEA,IAAIG,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELlD,EAAI,EAAGA,EAAImD,UAAUC,OAAQpD,IAAK,CAC1C,IAAIqD,EAAMF,UAAUnD,GACpB,GAAKqD,EAAL,CAEA,IAAIC,EAAUC,EAAOF,GAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BJ,EAAQM,KAAKH,QACP,GAAII,MAAMC,QAAQL,IAAQA,EAAID,OAAQ,CAC5C,IAAIO,EAAQV,EAAWW,MAAM,KAAMP,GAC/BM,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZL,EACV,IAAK,IAAIrD,KAAOoD,EACXN,EAAOc,KAAKR,EAAKpD,IAAQoD,EAAIpD,IAChCiD,EAAQM,KAAKvD,IAMjB,OAAOiD,EAAQY,KAAK,KAGgBjB,EAAOC,SAC3CG,EAAW1B,QAAU0B,EACrBJ,EAAOC,QAAUG,GAC+C,WAAtBM,EAAOQ,SAA2BA,YAEtEC,KAAAC,EAAA,WACL,OAAOhB,GADFW,MAAAd,EAAe,OAAfD,EAAAC,QAAAmB,GAINC,OAAOjB,WAAaA,EA1CrB","file":"scripts/doc-route.chunk_8.js?b8f2dccfd22e81870d98","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst MediaObject = ({ size, imgUrl, icon, heading, text, textSmall, mediaRight, muted }) => {\n    const mediaHeading = () => {\n        const headingClasses = classnames(muted ? \"text-muted\" : null);\n\n        switch (size) {\n            case \"sm\":\n                return <h4 className={headingClasses}>{heading}</h4>;\n            case \"lg\":\n                return <h2 className={headingClasses}>{heading}</h2>;\n            default:\n                return <h3 className={headingClasses}>{heading}</h3>;\n        }\n    };\n\n    const mediaClasses = classnames(\n        \"media\",\n        mediaRight ? \"media-right\" : null,\n        size ? `media-${size}` : null\n    );\n\n    const iconClasses = classnames(\n        \"material-icons\",\n        muted ? \"text-muted\" : null\n    );\n\n    return (\n        <div className={mediaClasses}>\n            {(imgUrl || icon) ?\n                <div className=\"media-img\">{\"\\n\"}\n                    {imgUrl ? <> <img src={imgUrl} /> {\"\\n\"} </> : null}\n                    {icon ? <> <i className={iconClasses} aria-hidden=\"true\">{icon}</i> {\"\\n\"} </> : null}\n                </div>\n                : null}\n            <div className=\"media-body\">\n                {mediaHeading()}\n                <p>{textSmall ? <small>{text}</small> : text}</p>\n            </div>\n        </div>\n    );\n};\n\nMediaObject.propTypes = {\n    size: PropTypes.oneOf([\"sm\", \"lg\"]),\n    imgUrl: PropTypes.string,\n    icon: PropTypes.string,\n    heading: PropTypes.string.isRequired,\n    text: PropTypes.string,\n    textSmall: PropTypes.bool,\n    mediaRight: PropTypes.bool,\n    muted: PropTypes.bool\n};\n\nexport default MediaObject;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Card = ({ type, titleTxt, titleMarkup, imgSrc, text, textSection, smallText, btn, btnClass, btnText, bodyClass, footerTxt, footerLink, footerLinkTxt, children }) => (\n    <div className={`card${type ? ` card-${type}` : \"\"}`}>\n        {imgSrc ? <div className=\"card-img\">{\"\\n\"}\n            <img src={imgSrc} alt=\"\"/>{\"\\n\"}\n        </div> : null}\n        {titleTxt\n            ? (<header className=\"card-header\">\n                <h3>{titleTxt}</h3>\n            </header>)\n            : (titleMarkup\n                ? (<header className=\"card-header\">\n                    {titleMarkup}\n                </header>)\n                : null)}\n        <div className={`card-body${bodyClass ? ` ${bodyClass}` : \"\"}`}>\n            {children ? children : null }\n            {text ? <p>{text}</p> : null}{\"\\n\"}\n            {textSection ?\n                textSection.map((secText, i) => <p key={`card-p-${i}`}>{secText}</p>)\n                : null\n            }\n            {btn ? <button type=\"button\" className={`btn btn-primary${btnClass ? ` ${btnClass}` : \"\"}`}>{\"\\n\"}{btnText}{\"\\n\"}</button> : null}\n        </div>\n        {footerTxt || footerLinkTxt\n            ? <footer className=\"card-footer\">\n                {smallText ? <small>{smallText}</small> : null}\n                {footerTxt ? footerTxt : null}\n                {footerLinkTxt ? <div className=\"footer-link\"><a href={footerLink || \"#\"}>{footerLinkTxt}</a></div> : null}\n            </footer> : null}\n    </div>\n);\n\nCard.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"plain\"]),\n    imgSrc: PropTypes.string,\n    titleTxt: PropTypes.string,\n    titleMarkup: PropTypes.object,\n    icon: PropTypes.string,\n    text: PropTypes.string,\n    smallText: PropTypes.string,\n    textSection: PropTypes.array,\n    btn: PropTypes.bool,\n    btnText: PropTypes.string,\n    footerLink: PropTypes.string,\n    footerLinkTxt: PropTypes.string\n};\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Cards = ({ type, titleTxt, imgSrc, icon, text, children, wide }) => (\n    <>\n        {!wide ?\n            <div className=\"col-xl-5 col-sm-6\">{\"\\n\"}\n                <a href=\"#\" onClick={e => e.preventDefault()} className={`cards cards-${type}`}>{\"\\n\"}\n                    {icon && <div className=\"cards-icon\">{\"\\n\"}\n                        {icon}{\"\\n\"}\n                    </div>}\n                    {imgSrc && <img src={imgSrc} />}\n                    <div className=\"cards-content\">{\"\\n\"}\n                        {titleTxt && <span className=\"h4\">{titleTxt}</span>}\n                        {text && <span>{text}</span>}{\"\\n\"}\n                        {children && children }\n                    </div>{\"\\n\"}\n                    <i className=\"material-icons\">arrow_forward</i>{\"\\n\"}\n                </a>{\"\\n\"}\n            </div>\n            :\n            <>\n                <a href=\"#\" className={`cards cards-${type} cards-wide`}>{\"\\n\"}\n                    {icon && <div className=\"cards-icon\">{\"\\n\"}\n                        {icon}{\"\\n\"}\n                    </div>}\n                    <div className=\"cards-content\">{\"\\n\"}\n                        {titleTxt && <span className=\"h4\">{titleTxt}</span>}\n                        {text && <span>{text}</span>}{\"\\n\"}\n                        {children && children }\n                    </div>{\"\\n\"}\n                    <i className=\"material-icons\">arrow_forward</i>{\"\\n\"}\n                </a>{\"\\n\"}\n            </>\n        }\n    </>\n);\n\nCards.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"tertiary\"]).isRequired,\n    titleTxt: PropTypes.string,\n    imgSrc: PropTypes.string,\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    children: PropTypes.object,\n    wide: PropTypes.bool\n};\n\nexport default Cards;\n","import React from \"react\";\nimport CardsComponent from \"@components/Cards\";\n\nconst BASENAME = process.env.basename;\n\nexport const overviewCards = {\n    id: \"overviewCards\",\n    tabsId: \"overviewButtonsTabs\",\n    elements: [\n        {\n            tab: \"Standard\",\n            component: <CardsComponent\n                titleTxt=\"Title\"\n                type=\"primary\"\n                text=\"Write the supportive paragraph here.\"\n                icon={<i className=\"material-icons\">shopping_basket</i>}\n            />,\n            options: {\n                radio: [\n                    {\n                        id: \"addons_radio\",\n                        title: \"Addons\",\n                        values: [\n                            {\n                                name: \"Plain\",\n                                value: {\n                                    icon: null\n                                }\n                            },\n                            {\n                                name: \"With icon\",\n                                default: true,\n                                value: {\n                                    icon: <i className=\"material-icons\">shopping_basket</i>\n                                }\n                            },\n                            {\n                                name: \"With image\",\n                                value: {\n                                    imgSrc: `${BASENAME}img/documentation/cards/img-example.png`,\n                                    icon: null\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        id: \"color_radio\",\n                        title: \"Accent color\",\n                        values: [\n                            {\n                                name: \"Yellow brown\",\n                                value: {\n                                    type: \"primary\"\n                                }\n                            },\n                            {\n                                name: \"Turquoise\",\n                                value: {\n                                    type: \"secondary\"\n                                }\n                            },\n                            {\n                                name: \"Purple\",\n                                value: {\n                                    type: \"tertiary\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Standard cards\",\n            description: \"The standard card component can be customized either icon or picture in order to make it easier for users to scan the content. Mixing simple card without icon should mostly be done when seperating the cards functionality such as when there are more cards to be displayed or when approperiate icons can not be found.\"\n        },\n        {\n            tab: \"Wide\",\n            component: <CardsComponent\n                titleTxt=\"Title\"\n                type=\"primary\"\n                text=\"Write the supportive paragraph here.\"\n                wide\n                icon={<>01</>}\n            />,\n            options: {\n                radio: [\n                    {\n                        id: \"addons_radio\",\n                        title: \"Addons\",\n                        values: [\n                            {\n                                name: \"Plain\",\n                                value: {\n                                    icon: null\n                                }\n                            },\n                            {\n                                name: \"With icon\",\n                                default: true,\n                                value: {\n                                    icon: <>01</>\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        id: \"color_radio\",\n                        title: \"Accent color\",\n                        values: [\n                            {\n                                name: \"Yellow brown\",\n                                value: {\n                                    type: \"primary\"\n                                }\n                            },\n                            {\n                                name: \"Turquoise\",\n                                value: {\n                                    type: \"secondary\"\n                                }\n                            },\n                            {\n                                name: \"Purple\",\n                                value: {\n                                    type: \"tertiary\"\n                                }\n                            }\n                        ]\n                    }\n                ]\n            },\n            title: \"Wide cards\",\n            description: \"The wide card component can be used with and without numbering. Try to avoid mixing different card setups with each other as it could be confusing for the users to understand. Try to keep the title concise and to the point, to make it simple to understand and the design aligned with the cards as a group.\"\n        }\n    ]\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer, StatusBadge } from \"@docutils\";\nimport CardComponent from \"@components/Card\";\nimport MediaObject from \"@components/MediaObject\";\nimport CodeTags from \"@components/CodeTags\";\nimport { overviewCards } from \"./constants\";\n\nconst textArr = [\"This is a lot of text\", \"With some more text\", \"And then even some more\", \"Is it really possible to have this much text in one card?\", \"Yes!\"];\nconst BASENAME = process.env.basename;\nconst brand = process.env.brand;\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelAdvanced={overviewCards} codeFigure />\n\n        <h3>{\"Dos and dont's\"}</h3>\n        <div className=\"row\">\n            <div className=\"col-xl-6 mb-4\">\n                <div className=\"slab slab-plain slab-border-success h-100\">\n                    <h4>Do</h4>\n                    When presenting a group of cards, make sure their color match and have the same size and text length\n                    <img src={`${BASENAME}img/documentation/cards/do-cards.png`} className=\"w-100 mt-4 mb-4\"/>\n                </div>\n            </div>\n            <div className=\"col-xl-6 mb-4\">\n                <div className=\"slab slab-plain slab-border-error h-100\">\n                    <h4>{\"Don't\"}</h4>\n                    Avoid miss-match colors, different sizes and length on text in order to present a clean view\n                    <img src={`${BASENAME}img/documentation/cards/dont-cards.png`} className=\"w-100 mt-4 mb-4\"/>\n                </div>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-xl-6 mb-4\">\n                <div className=\"slab slab-plain slab-border-success h-100\">\n                    <h4>Do</h4>\n                    When presenting a group of cards, make sure they match visually. Try keeping it the same text length and to one row when possible.\n                    <img src={`${BASENAME}img/documentation/cards/do-wide-cards.png`} className=\"w-100 mt-4 mb-4\"/>\n                </div>\n            </div>\n            <div className=\"col-xl-6 mb-4\">\n                <div className=\"slab slab-plain slab-border-error h-100\">\n                    <h4>{\"Don't\"}</h4>\n                    Avoid miss-match colors, different sizes and length on text in order to present a clean view.\n                    When using numbers make sure the numbering is sequenced and follows the correct order.\n                    <img src={`${BASENAME}img/documentation/cards/dont-wide-cards.png`} className=\"w-100 mt-4 mb-4\"/>\n                </div>\n            </div>\n        </div>\n    </>\n);\n\nconst OldCard = () => (\n    <>\n        <h2 id=\"old-card\">Old card</h2>\n        <StatusBadge type=\"remove\" />\n        <p>\n            Cards support a wide variety of content, including images, text, list groups, links, and more.\n            Make sure to restrain the width of your card unless you wish for it to fill the wrapping component.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel showCasePanelSm codeFigure>\n            <CardComponent\n                titleTxt=\"Card title\"\n                type=\"primary\"\n                imgSrc=\"https://picsum.photos/300/?random\"\n                text=\"This paragraph contains some text related to this card.\"\n                footerTxt=\"Footer text\"\n            />\n        </ComponentPreview>\n        <h3>Card with grid</h3>\n        <p>\n            Use our <Link to=\"/core/grid\">grid</Link> along with cards to control their size and how they are displayed on different screen resolutions.\n            Make sure to add <CodeTags type=\"secondary\" code=\".d-flex\" /> to the wrapper if you want the cards to be of equal height when next to each other.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"row\">\n                <div className=\"col-12 col-lg-6 col-xl-4 d-flex\">\n                    <CardComponent\n                        type=\"primary\"\n                        titleTxt=\"My grid card\"\n                        text=\"Card text\"\n                        smallText=\"Small card text\"\n                        btn\n                        btnText=\"Button\"\n                        btnClass=\"btn-block mt-auto\"\n                        bodyClass=\"d-flex flex-column\"\n                    >\n                        <MediaObject size=\"sm\" icon=\"verified_user\" heading=\"75%\" text=\"Complete\" textSmall muted />\n                    </CardComponent>\n                </div>\n\n                <div className=\"col-12 col-lg-6 col-xl-4 d-flex\">\n                    <CardComponent\n                        type=\"primary\"\n                        titleTxt=\"My grid card\"\n                        textSection={textArr}\n                        smallText=\"This is some small text\"\n                        btn\n                        btnText=\"Button\"\n                        btnClass=\"btn-block mt-auto\"\n                        bodyClass=\"d-flex flex-column\"\n                    />\n                </div>\n\n                <div className=\"col-12 col-lg-6 col-xl-4 d-flex\">\n                    <CardComponent\n                        type=\"primary\"\n                        titleTxt=\"My grid card\"\n                        imgSrc=\"https://picsum.photos/300/?random\"\n                        text=\"This is a card with an image and body\"\n                        footerLinkTxt=\"Footer link\"\n                    />\n                </div>\n            </div>\n        </ComponentPreview>\n        <h3>Card Types</h3>\n        <p>\n            We offer three different card types; <CodeTags type=\"secondary\" code=\".card-primary\" />, <CodeTags type=\"secondary\" code=\".card-secondary\" /> and <CodeTags type=\"secondary\" code=\".card-plain\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"row\">\n                <div className=\"col-12 col-lg-6 col-xl-4 d-flex\">\n                    <CardComponent\n                        type=\"primary\"\n                        titleTxt=\"Card Primary\"\n                        imgSrc=\"https://picsum.photos/300/?random\"\n                        text=\"This paragraph contains some text about the person displayed above.\"\n                    >\n                        <ul className=\"list\">\n                            <li><span className=\"font-weight-bold\">Card number:</span> 4563 5648 5642</li>\n                            <li><span className=\"font-weight-bold\">Balance:</span> 2500,- </li>\n                        </ul>\n                    </CardComponent>\n                </div>\n                <div className=\"col-12 col-lg-6 col-xl-4 d-flex\">\n                    <CardComponent\n                        type=\"secondary\"\n                        titleTxt=\"Card Secondary\"\n                        text=\"Descriptive text to put inside the card, could contain a lot.\"\n                        footerLinkTxt=\"Footer link\"\n                    >\n                        <MediaObject size=\"sm\" icon=\"account_balance\" heading=\"725 NOK\" text=\"Outstanding balance\" textSmall muted />\n                    </CardComponent>\n                </div>\n                <div className=\"col-12 col-lg-6 col-xl-4 d-flex\">\n                    <CardComponent\n                        type=\"plain\"\n                        titleTxt=\"Card Plain\"\n                        imgSrc=\"https://picsum.photos/300/?random\"\n                        text=\"Descriptive text to put inside the card, could contain a lot.\"\n                        footerLinkTxt=\"Footer link\"\n                    >\n                        <MediaObject size=\"sm\" icon=\"verified_user\" heading=\"75%\" text=\"Complete\" textSmall muted />\n                    </CardComponent>\n                </div>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nclass Card extends Component {\n    render () {\n        return (\n            <DocContainer docToc>\n                <p>\n                    The card component is a flexible container that groups and informs about the content and action.\n                    The information presented should be concise, to the point and easy to understand. The card\n                    component should be used to direct to pages on our site and not to external sites, in that case\n                    use <Link to=\"/components/links\">Links</Link> instead.\n                </p>\n                {brand === \"swedbankpay\" && <Overview />}\n                <OldCard />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Card;\n\n/* For testing */\nexport { Overview, OldCard };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}