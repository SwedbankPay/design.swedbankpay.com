@import "../global.less";
@import "../core/normalize.less";

@input-padding-y:                           0.375rem;
@input-line-height:                         @line-height-base;
@input-form-control-height:                 3rem;
@input-border-width:                        1px 1px 2px;

// Form control sizing
//
// Relative text size, padding, and border-radii changes for form controls. For
// horizontal sizing, wrap controls in the predefined grid classes. `<select>`
// element gets special love because it's special, and that's a fact!
.input-size(@input-height;
@padding-vertical;
@padding-horizontal;
@font-size;
@line-height;
@border-radius) {
    height: @input-height;
    padding: @padding-vertical @padding-horizontal;
    font-size: @font-size;
    line-height: @line-height;
    border-radius: @border-radius;

    select& {
        height: @input-height;
        line-height: @input-height;
    }

    textarea&,
    select[multiple]& {
        height: auto;
    }
}

label {
    display: inline-flex;
    align-items: center;
    max-width: 100%;
    margin-bottom: @base-margin-xs;
    font-weight: @font-weight-light;
    font-size: @base-font-size;
    line-height: 1.5;

    .required-asterisk {
        color: @brand-error;
        margin-left: 0.25rem;
        font-weight: normal;
        font-size: 1rem;
        line-height: 1;

        .has-success & {
            color: @brand-success;
        }
    }

    .material-icons {
        color: @brand-accent-links;
    }
}

fieldset {
    padding: 0;
    margin: 0;
    border: 0;
    margin-bottom: @base-margin;

    /* Chrome and Firefox set a `min-width: min-content;` on fieldsets,
     * so we reset that to ensure it behaves more like a standard block element.
     * See https://github.com/twbs/bootstrap/issues/12359. */
    min-width: 0;

    &:disabled {
        textarea {
            resize: none;
        }

        select,
        .form-group,
        input + input,
        .hint-text-expander > button,
        .hint-text-expander > p {
            color: @brand-secondary-light-3;
        }

        .hint-text-expander {
            button {
                pointer-events: none;
            }
        }

        .checkbox input[type="checkbox"] {
            + label:after {
                background-color: @input-bg-disabled;
                border-color: @input-checked-bg-disabled;
                cursor: not-allowed;
            }

            + label:before {
                content: none;
            }

            &:checked + label:after {
                background-color: @input-checked-bg-disabled;
            }

            &:not(:checked) {
                &:hover + label:after {
                    border-color: @brand-secondary-light-3;
                }
            }

            + label,
            + label:before,
            &:after,
            &:checked + label:before {
                cursor: not-allowed;
            }
        }

        .radio input[type="radio"] {
            + label:before {
                background-color: @input-bg-disabled;
                border-color: @input-checked-bg-disabled;
                box-shadow: none;
            }

            + label,
            + label:before,
            &:checked + label:before {
                cursor: not-allowed;
            }
        }

        .togglebox input[type="checkbox"] {
            + label:before,
            + label:after {
                background-color: @input-bg-disabled;
                border-color: @input-checked-bg-disabled;
            }

            &:checked + label:before {
                background-color: @input-checked-bg-disabled;
            }

            + label,
            + label:before,
            + label:after,
            &:checked + label:before,
            &:checked + label:after {
                cursor: not-allowed;
            }
        }
    }
}

legend {
    display: block;
    width: 100%;
    margin-bottom: @base-margin;
    line-height: (@base-font-size * 2.8);
    color: @brand-secondary;
    border: 0;
}

.form-control-text,
.form-control {
    display: block;
    width: 100%;
    font-size: @base-font-size;
    line-height: @input-line-height;
    color: @input-color;

    &.medium {
        height: 2.5rem;
        font-size: 0.875rem;
    }

    &.small {
        height: 2rem;
        font-size: 0.875rem;
    }
}

.form-control-text {
    padding: @input-padding-y 0;
}

.form-control-focus(@color: @input-border-focus) {
    @color-rgba: rgba(red(@color), green(@color), blue(@color), 1);

    &:focus {
        // outline: 0;
        color: @text-color;
        outline-color: @color-rgba;
        box-shadow: none;
        background-color: @white;
    }
}

.placeholder(@color) {
    // Firefox
    &::-moz-placeholder {
        color: @color;
        opacity: 1; /* Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526 */
    }

    &:-ms-input-placeholder { color: @color; } /* Internet Explorer 10+ */
    &::-webkit-input-placeholder { color: @color; } /* Safari and Chrome */
}

.form-control {
    height: @input-form-control-height;
    padding: 0 0.75rem;
    background-color: @input-bg;
    background-clip: padding-box;
    border: solid @input-border-color;
    border-width: @input-border-width;
    border-bottom-color: @medium-brown;
    border-radius: 2px 2px 0 0;
    box-shadow: none;
    .form-control-focus(@brand-secondary);
    .placeholder(@brand-secondary-light-2);

    &::placeholder {
        color: @brand-secondary-light-2; /* Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526. */
        font-weight: @font-weight-normal;
        letter-spacing: -0.1px;
    }

    /* HTML5 says that controls under a fieldset > legend:first-child wont be
     * disabled if the fieldset is disabled. Due to implementation difficulty, we
     * dont honor that edge case; we style them as disabled anyway.
     */
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        &:not(.flatpickr-input) {
            opacity: 1; /* iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655 */
            .placeholder(@brand-secondary-light-3);

            &::placeholder {
                color: @brand-secondary-light-3;
            }

            color: @brand-secondary-light-3;
            border-bottom-color: @brand-secondary-light-3;
        }
    }

    &[disabled],
    fieldset[disabled] & {
        cursor: not-allowed;
    }

    // Reset height for `textarea`s
    textarea& {
        height: auto;
        padding: 1rem 0.75rem;
    }
}

.form-group {
    &.small {
        .form-control,
        .input-group {
            height: 2rem;
            font-size: 0.875rem;

            .input-group-addon {
                height: 2rem;
                font-size: 0.875rem;
            }
        }
    }

    &.medium {
        .form-control,
        .input-group {
            height: 2.5rem;
            font-size: 0.875rem;

            .input-group-addon {
                height: 2.5rem;
                font-size: 0.875rem;
            }
        }
    }

    margin-bottom: @base-margin-lg;


    .form-control:focus-within {
        outline: 2px auto @brand-secondary;
        border-color: transparent;
    }

    &.disabled,
    [disabled] {
        color: @brand-secondary-light-3;

        .input-group-addon {
            border-color: @brand-secondary-light-3;
            color: @brand-secondary-light-3;

            i {
                color: @brand-secondary-light-3;
            }
        }

        i[data-tooltip] {
            color: @brand-secondary-light-3;
            pointer-events: none;
        }

        .hint-text,
        .hint-text-expander > button,
        .hint-text-expander > p {
            color: @brand-secondary-light-3;
        }

        .hint-text-expander {
            button {
                pointer-events: none;
            }
        }
    }
}

.checkbox,
.radio,
.togglebox {
    label {
        cursor: pointer;
        text-transform: none;
    }

    input[disabled] + label {
        color: @brand-secondary-light-3;
    }
}

.help-block,
.hint-text {
    position: relative;
    display: block;
    margin: (@base-margin * 0.5) 0;
    font-size: 0.875rem;
    line-height: 1rem;
    min-height: 1rem;
}

.help-block {
    display: flex;
    align-items: center;

    i {
        font-size: 20px;
        margin-right: 0.5rem;
    }
}

.hint-text {
    color: @medium-brown;
}

.hint-text-expander {
    display: block;
    margin-top: 0.25rem;

    button {
        all: unset;
        display: flex;
        color: @brand-accent-links;
        padding-right: 0.25rem;
        border: 1px solid transparent;
        cursor: pointer;
        font-size: 0.875rem;
        line-height: 1rem;

        .arrow {
            margin-right: 0.5rem;
            font-size: 0.875rem;
            align-self: center;
            transition: transform 0.5s ease;
        }

        &:focus {
            border: 1px solid @brand-secondary;
            border-radius: 0.125rem;
        }

        &.content-expanded {
            .arrow {
                transform: rotate(180deg);
                transition: transform 0.3s ease;
            }

            ~ .content {
                visibility: visible;
                height: auto;
            }
        }
    }

    .content {
        visibility: hidden;
        height: 0;
        margin: 0;
        padding: 0;
        color: @medium-brown;
        font-size: 0.875rem;
    }
}

textarea {
    resize: vertical;
}

textarea[disabled] {
    resize: none;
}

select {
    background: url(../../icons/shapes/expand-more.svg); // TODO:
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    -moz-appearance: none;
    -webkit-appearance: none;

    &.form-control {
        padding-right: 2.5rem;
    }
}

select::-ms-expand {
    display: none;
}

select[multiple] {
    height: auto;
    padding: 0;

    option {
        padding: (@base-margin * 0.187) (@base-margin * 0.375);
    }
}

@media (forced-colors: active) {
    select {
        filter: saturate(1000%);
    }
}
