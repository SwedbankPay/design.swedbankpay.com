@import "../global.less";

.accordion {
	border: 1px solid transparent;
	border-bottom: 1px solid var(--brand-secondary-light-3);
	border-radius: 2px;
	background-color: transparent;
	display: flex;
	flex-direction: column;
	transition:
		all 0.3s ease-in-out,
		height 0.3s ease;

	&:last-child {
		margin-bottom: 0;
	}

	&.show {
		> .accordion-body {
			display: block;
		}
	}

	&.accordion-open {
		background-color: var(--white);

		&:first-child {
			border-top: 1px solid var(--brand-secondary-light-3);
		}

		> .accordion-header {
			&:before {
				transform: rotate(180deg);
			}
		}
	}

	.accordion-header {
		text-decoration: none;
		touch-action: manipulation;
		cursor: pointer;
		line-height: 1rem;
		border: 1px solid transparent;
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		user-select: none;
		color: var(--brand-secondary);
		background-color: var(--white);
		padding: 1rem;
		text-align: start;
		font-weight: var(--font-weight-bold);
		font-family: var(--brand-headline);
		font-size: 1rem;

		// TODO: is this still necessary? if looks fine on chrome + ff + safari then only keep for material-icons
		// it seems that it's adding automatically the desired icon via :before trigering content to set the icon. Maybe hard to replace with Atlas?
		// eventually can keep it silently, and move away from it during next major release when bring new accordion
		// it doesn't require anything from users anyway since the icon is set on our side. So can change relaxed since the icon is not exposed but set on our side via CSS via :before
		// a possibility: replace by :before & :after with pure CSS
		&:before {
			.material-icons-styling();

			color: var(--brand-secondary);
			content: "keyboard_arrow_down";
			position: absolute;
			right: 0;
			top: 0;
			bottom: $top;
			display: flex;
			align-items: center;
		}
	}

	&:hover {
		.accordion-header {
			text-decoration: underline;
		}
	}

	.accordion-body {
		padding: 0 1rem;
		display: none;
	}

	.expanding {
		height: 0;
		overflow: hidden;
		transition: height 0.3s ease;
	}
}

@media (prefers-reduced-motion) {
	.accordion {
		transition: none;

		.expanding {
			transition: none;
		}
	}
}
