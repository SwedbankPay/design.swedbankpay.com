.button-variant(@color, @background, @hover, @disabled-color, @disabled-bg, @focus-shadow) {
    color: @color;
    background-color: @background;

    &:focus,
    &.focus {
        outline: 0;
        box-shadow: 0 0 0 0.1rem @focus-shadow;
    }

    &:hover {
        color: @color;
        background-color: @hover;
    }

    &[active],
    &:active,
    &.active {
        .button-active-state(@background, @color);
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        &,
        &:hover,
        &:focus,
        &.focus,
        &[active],
        &:active,
        &.active {
            background: @disabled-bg;
            color: @disabled-color;
        }
    }
}

.button-outline-variant(@color, @background, @hover-color, @disabled-color, @disabled-bg) {
    background: transparent;
    color: @color;
    border-color: @background;

    &:focus,
    &.focus {
        outline-offset: 0;
        color: @hover-color;
        background-color: @background;
    }

    &:hover {
        color: @hover-color;
        background-color: @background;
    }

    &[active],
    &:active,
    &.active {
        .button-active-state(@background, @hover-color);

        &:hover,
        &:focus,
        &.focus {
            color: @hover-color;
            background-color: @background;
        }
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        &,
        &:hover,
        &:focus,
        &.focus,
        &[active],
        &:active,
        &.active {
            background-color: @disabled-bg;
            color: @disabled-color;
            border-color: @disabled-color;
        }
    }
}

.button-link-variant(@color, @disabled-color, @focus-shadow) {
    color: @color;
    font-family: @brand-default;
    font-weight: normal;
    background: transparent;

    &[active],
    &:active,
    &.active,
    &[disabled],
    fieldset[disabled] & {
        background-color: transparent;
        box-shadow: none;
    }

    &:hover,
    &:active {
        box-shadow: none;
        border-color: @color;
    }

    &:focus {
        outline: 0;
        box-shadow: 0 0 0 0.1rem @focus-shadow;
    }

    &:hover,
    &:focus {
        background-color: transparent;
    }

    &[disabled],
    fieldset[disabled] & {
        color: @disabled-color;
        text-decoration: none;
        border-color: @disabled-color;
    }

    span {
        text-decoration: underline;
    }
}

.button-ghost(@color) {
    color: @white;
    background: transparent;
    border: 1px solid @white;

    &:focus,
    &.focus,
    &:hover,
    &:active {
        .button-active-state(@white, @color);
    }
}

.button-link-variant(@color) {
    color: @color;

    &:hover,
    &:focus {
        color: darken(@color, 10%);
    }
}

.button-active-state(@background; @color: @white) {
    color: @color;
    background-color: @background;
    box-shadow: inset 0 0 0 2px lighten(@background, 20%);
    border: 1px solid lighten(@background, 20%);
}

// Button sizes
.button-size(@padding-horizontal; @height; @font-size; @line-height; @border-radius) {
    padding: 0 @padding-horizontal;
    font-size: @font-size;
    line-height: @line-height;
    border-radius: @border-radius;
    height: @height;
}

.btn-loader-variant(@max-height; @min-height; @width; @margin; @font-size; @btn-height) {
    max-height: @max-height;
    display: inline-block;
    position: absolute;
    top: calc(~"50% - @{btn-height}");
    left: 0;
    margin-left: auto;
    margin-right: auto;
    width: 100%;

    .loader-icon {
        bottom: (@font-size / 2) - (@font-size / 8);
        width: (@width * 3) + (@margin * 2);
        height: @max-height / 2;

        li {
            width: @width;
            height: @min-height;
            margin-right: @margin;
            margin-top: (@max-height - @min-height) / 2;
        }

        li:first-child {
            margin-right: 0;
        }
    }
}
