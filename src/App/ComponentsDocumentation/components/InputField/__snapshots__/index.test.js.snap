// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: InputField ContentGuidelines renders 1`] = `
<section>
  <h2
    id="content-guidelines"
  >
    Content guidelines
  </h2>
  <div
    className="slab slab-plain h-100 mb-2"
  >
    <div
      className="d-flex flex-column align-items-center"
    >
      <div
        className="py-3"
      >
        <div
          className="form-group"
        >
          

          <label
            className="h3"
            htmlFor="input-guidelines-example"
          >
            Label
          </label>
          

          <input
            autoComplete={null}
            className="form-control"
            data-validate={null}
            defaultValue="Input text"
            disabled={null}
            id="input-guidelines-example"
            pattern={null}
            placeholder={null}
            readOnly={null}
            required={null}
            type="text"
          />
          

          <p
            className="hint-text"
            id="hint-text"
          >
            Hint text
          </p>
          

        </div>
        <div
          className="form-group"
        >
          

          <label
            className="h3"
          >
            Label
          </label>
          

          <textarea
            autoComplete={null}
            className="form-control"
            data-validate={null}
            defaultValue=""
            disabled={null}
            id={null}
            pattern={null}
            placeholder={null}
            readOnly={null}
            required={null}
            type="textarea"
          />
          

        </div>
      </div>
    </div>
  </div>
  <h3>
    Label
  </h3>
  <p>
    An input field must have a label that clearly describes the type of input a field requires. 
  </p>
  <ul
    className="list list-bullet"
  >
    <li>
      When a text field is not required to be filled by the user, label it as “optional”.
    </li>
  </ul>
  <section>
    <h3>
      Hint text
    </h3>
    <p>
      A hint text should complement the label and provide clarifying details. It can be used to:
    </p>
    <ul
      className="list list-bullet"
    >
      <li>
        Provide an example of what to enter
      </li>
      <li>
        Explain why you are asking a certain question
      </li>
      <li>
        Inform the user about where to find the requested information
      </li>
    </ul>
    <p>
      Primarily use the visible by default hint text and secondarily a hint expander. Try to avoid using both a visible hint text and expander.
    </p>
    <div
      className="row placeholder-guideline"
    >
      <div
        className="col-lg-6 col-sm-12"
      >
        <div
          className="slab slab-plain slab-border-success"
        >
          <span
            className="h3 d-block mb-3"
          >
            Do
          </span>
          <div
            className="form-group"
          >
            

            <label
              className="h3"
              htmlFor="do-example-expanding"
            >
              Personal identification number
            </label>
            

            <input
              autoComplete={null}
              className="form-control"
              data-validate={null}
              defaultValue=""
              disabled={null}
              id="do-example-expanding"
              pattern={null}
              placeholder={null}
              readOnly={null}
              required={null}
              type="text"
            />
            

            <p
              className="hint-text"
              id="hint-text"
            >
              YYYYMMDDNNNN
            </p>
            

          </div>
        </div>
        <p
          className="mb-4"
        >
          If the information is fairly important and many users will need it, provide a hint text that is visible by default.
        </p>
      </div>
      <div
        className="col-lg-6 col-sm-12"
      >
        <div
          className="slab slab-plain slab-border-success"
        >
          <span
            className="h3 d-block mb-3"
          >
            Do
          </span>
          <div
            className="form-group"
          >
            

            <label
              className="h3"
              htmlFor="do-example-expanding"
            >
              Security code (CVC)
            </label>
            

            <input
              autoComplete={null}
              className="form-control"
              data-validate={null}
              defaultValue=""
              disabled={null}
              id="do-example-expanding"
              pattern={null}
              placeholder={null}
              readOnly={null}
              required={null}
              type="text"
            />
            

          </div>
        </div>
        <p
          className="mb-4"
        >
          Use a hint expander if the information is long and won’t be needed by the majority of users. Write the hint expander to help users understand what they will see before they click.
        </p>
      </div>
    </div>
  </section>
  <section>
    <h3>
      Prefix and postfix
    </h3>
    <p>
      Prefixes and postfixes are useful when there’s a commonly understood icon, symbol or abbreviation for the type of information the user needs to enter since it can reduce mental load.
    </p>
    <div
      className="row placeholder-guideline"
    >
      <div
        className="col-lg-6 col-sm-12"
      >
        <div
          className="slab slab-plain slab-border-success"
        >
          <span
            className="h3 d-block mb-3"
          >
            Do
          </span>
          <div
            className="form-group"
          >
            

            <label
              className="h3"
              htmlFor="guidelines-input-example-1"
            >
              Username
            </label>
            

            <div
              className="input-group"
            >
              

              <span
                className="input-group-addon "
              >
                account_circle
              </span>
              

              <input
                autoComplete={null}
                className="form-control"
                data-validate={null}
                defaultValue=""
                disabled={null}
                id="guidelines-input-example-1"
                pattern={null}
                placeholder={null}
                readOnly={null}
                required={null}
                type="text"
              />
              
	
              

            </div>
          </div>
        </div>
        <p
          className="mb-4"
        >
          Use a prefix icon to help convey the meaning of the label.
        </p>
      </div>
      <div
        className="col-lg-6 col-sm-12"
      >
        <div
          className="slab slab-plain slab-border-error"
        >
          <span
            className="h3 d-block mb-3"
          >
            Do
            n't
          </span>
          <div
            className="form-group"
          >
            

            <label
              className="h3"
              htmlFor="guidelines-input-example-2"
            >
              Username
            </label>
            

            <div
              className="input-group"
            >
              

              <span
                className="input-group-addon "
              >
                email
              </span>
              

              <input
                autoComplete={null}
                className="form-control"
                data-validate={null}
                defaultValue=""
                disabled={null}
                id="guidelines-input-example-2"
                pattern={null}
                placeholder={null}
                readOnly={null}
                required={null}
                type="email"
              />
              
	
              

            </div>
          </div>
        </div>
        <p
          className="mb-4"
        >
          Don’t use a prefix icon that doesn’t help to convey the meaning of the label. There shouldn’t be any confusion between what type of information an icon represents.
        </p>
      </div>
      <div
        className="col-lg-6 col-sm-12"
      >
        <div
          className="slab slab-plain slab-border-success"
        >
          <span
            className="h3 d-block mb-3"
          >
            Do
          </span>
          <div
            className="form-group"
          >
            

            <label
              className="h3"
              htmlFor="guidelines-input-example-3"
            >
              Fixed transaction fee, in SEK
            </label>
            

            <div
              className="input-group"
            >
              

              <input
                autoComplete={null}
                className="form-control"
                data-validate={null}
                defaultValue=""
                disabled={null}
                id="guidelines-input-example-3"
                pattern={null}
                placeholder={null}
                readOnly={null}
                required={null}
                type="text"
              />
              
	
              <span
                className="input-group-addon postfix"
              >
                kr
              </span>
              

              

            </div>
          </div>
        </div>
        <p
          className="mb-4"
        >
          The label in itself should clearly indicate what type of data to enter, since prefixes and postfixes are hidden from screen readers.
        </p>
      </div>
      <div
        className="col-lg-6 col-sm-12"
      >
        <div
          className="slab slab-plain slab-border-error"
        >
          <span
            className="h3 d-block mb-3"
          >
            Do
            n't
          </span>
          <div
            className="form-group"
          >
            

            <label
              className="h3"
              htmlFor="guidelines-input-example-4"
            >
              Fixed transaction fee, in SEK
            </label>
            

            <div
              className="input-group"
            >
              

              <input
                autoComplete={null}
                className="form-control"
                data-validate={null}
                defaultValue=""
                disabled={null}
                id="guidelines-input-example-4"
                pattern={null}
                placeholder={null}
                readOnly={null}
                required={null}
                type="text"
              />
              
	
              <span
                className="input-group-addon postfix"
              >
                kronor
              </span>
              

              

            </div>
          </div>
        </div>
        <p
          className="mb-4"
        >
          Use commonly understood abbreviations for text prefix or postfix, don’t use full words.
        </p>
      </div>
    </div>
  </section>
  <section>
    <h3>
      Error message
    </h3>
    <p>
      When input isn’t accepted, input fields should display a short and concise error message, it should be no more than a single sentence.
    </p>
    <div
      className="row placeholder-guideline"
    >
      <div
        className="col-lg-6 col-sm-12"
      >
        <div
          className="slab slab-plain slab-border-success"
        >
          <span
            className="h3 d-block mb-3"
          >
            Do
          </span>
          <div
            className="form-group has-error"
          >
            

            <label
              className="h3"
              htmlFor="guidelines-input-example-7"
            >
              Email address
            </label>
            

            <input
              autoComplete={null}
              className="form-control"
              data-validate={null}
              defaultValue="Name.com"
              disabled={null}
              id="guidelines-input-example-7"
              pattern={null}
              placeholder={null}
              readOnly={null}
              required={null}
              type="text"
            />
            

            <div
              className="help-block"
            >
              The email address must include "@"
            </div>
            

          </div>
        </div>
        <p
          className="mb-4"
        >
          Do explain what went wrong and how to fix it.
        </p>
      </div>
      <div
        className="col-lg-6 col-sm-12"
      >
        <div
          className="slab slab-plain slab-border-error"
        >
          <span
            className="h3 d-block mb-3"
          >
            Do
            n't
          </span>
          <div
            className="form-group has-error"
          >
            

            <label
              className="h3"
              htmlFor="guidelines-input-example-8"
            >
              Email address
            </label>
            

            <input
              autoComplete={null}
              className="form-control"
              data-validate={null}
              defaultValue="Name.com"
              disabled={null}
              id="guidelines-input-example-8"
              pattern={null}
              placeholder={null}
              readOnly={null}
              required={null}
              type="text"
            />
            

            <div
              className="help-block"
            >
              Invalid input
            </div>
            

          </div>
        </div>
        <p
          className="mb-4"
        >
          Don't use technical jargon.
        </p>
      </div>
    </div>
  </section>
</section>
`;

exports[`Component: InputField DeveloperDocumentation renders 1`] = `
<section
  id="developer-documentation-container"
>
  <h2
    id="developer-documentation mb-3"
  >
    Developer documentation
  </h2>
  <section>
    <h3
      className="mt-3"
    >
      Autocomplete
    </h3>
    <p>
      Add 
      <code
        className="code-tags code-tags-primary"
      >
        autocomplete
      </code>
       attributes to input fields when it is possible to make a form easier for users to fill. 
    </p>
    <div
      className="showcase-panel"
    >
      <div
        className="form-group"
      >
        

        <label
          className="h3"
          htmlFor="developer-documentation-example"
        >
          Name
        </label>
        

        <input
          autoComplete="name"
          className="form-control"
          data-validate={null}
          defaultValue=""
          disabled={null}
          id="developer-documentation-example"
          pattern={null}
          placeholder={null}
          readOnly={null}
          required={null}
          type="text"
        />
        

      </div>
    </div>
    <figure>
      <div
        className="code-view"
      >
        <header
          className="code-view-header"
        >
          HTML
          <button
            aria-describedby="tooltipCopy"
            className="tooltip"
            onClick={[Function]}
          >
            <i
              className="material-icons-outlined"
            >
              content_copy
            </i>
            <div
              id="tooltipCopy"
              role="tooltip"
            >
              Copy to clipboard
            </div>
          </button>
        </header>
        <table
          className="code-view-table"
        >
          <tbody>
            <tr>
              <td
                className="code-view-numbers"
              >
                <pre>
                  1
                  

                  2
                  

                  3
                  

                  4
                  

                </pre>
              </td>
              <td
                className="code-view-code"
              >
                <pre>
                  &lt;div class="form-group"&gt;
                  

                      &lt;label class="h3" for="developer-documentation-example"&gt;Name&lt;/label&gt;
                  

                      &lt;input type="text" class="form-control" id="developer-documentation-example" autoComplete="name" /&gt;
                  

                  &lt;/div&gt;
                  

                </pre>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </figure>
  </section>
  <section>
    <h3>
      Error message
    </h3>
    <p>
      To display the error state, add the 
      <code
        className="code-tags code-tags-secondary"
      >
        .has-error
      </code>
       class to the parent element, then add the 
      <code
        className="code-tags code-tags-secondary"
      >
        .help-block
      </code>
       element as the last child with the error message.
    </p>
    <div
      className="showcase-panel"
    >
      <div
        className="form-group has-error"
      >
        

        <label
          className="h3"
          htmlFor="developer-documentation-error-example"
        >
          Input label
        </label>
        

        <input
          autoComplete={null}
          className="form-control"
          data-validate={null}
          defaultValue="Input text"
          disabled={null}
          id="developer-documentation-error-example"
          pattern={null}
          placeholder={null}
          readOnly={null}
          required={null}
          type="text"
        />
        

        <div
          className="help-block"
        >
          Descriptive helpful error message.
        </div>
        

      </div>
    </div>
    <figure>
      <div
        className="code-view"
      >
        <header
          className="code-view-header"
        >
          HTML
          <button
            aria-describedby="tooltipCopy"
            className="tooltip"
            onClick={[Function]}
          >
            <i
              className="material-icons-outlined"
            >
              content_copy
            </i>
            <div
              id="tooltipCopy"
              role="tooltip"
            >
              Copy to clipboard
            </div>
          </button>
        </header>
        <table
          className="code-view-table"
        >
          <tbody>
            <tr>
              <td
                className="code-view-numbers"
              >
                <pre>
                  1
                  

                  2
                  

                  3
                  

                  4
                  

                  5
                  

                </pre>
              </td>
              <td
                className="code-view-code"
              >
                <pre>
                  &lt;div class="form-group has-error"&gt;
                  

                      &lt;label class="h3" for="developer-documentation-error-example"&gt;Input label&lt;/label&gt;
                  

                      &lt;input type="text" class="form-control" id="developer-documentation-error-example" value="Input text" /&gt;
                  

                      &lt;div class="help-block"&gt;Descriptive helpful error message.&lt;/div&gt;
                  

                  &lt;/div&gt;
                  

                </pre>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </figure>
  </section>
  <section>
    <h3>
      Disabled state
    </h3>
    <p>
      Disable a input field by adding the 
      <code
        className="code-tags code-tags-primary"
      >
        disabled
      </code>
       attribute to the desired input field and the 
      <code
        className="code-tags code-tags-primary"
      >
        form-group
      </code>
       where the input field resides.
    </p>
    <div
      className="showcase-panel"
    >
      <div
        className="form-group disabled"
      >
        

        <label
          className="h3"
        >
          Input label
        </label>
        

        <input
          autoComplete={null}
          className="form-control"
          data-validate={null}
          defaultValue=""
          disabled={true}
          id={null}
          pattern={null}
          placeholder={null}
          readOnly={null}
          required={null}
          type="text"
        />
        

      </div>
    </div>
    <figure>
      <div
        className="code-view"
      >
        <header
          className="code-view-header"
        >
          HTML
          <button
            aria-describedby="tooltipCopy"
            className="tooltip"
            onClick={[Function]}
          >
            <i
              className="material-icons-outlined"
            >
              content_copy
            </i>
            <div
              id="tooltipCopy"
              role="tooltip"
            >
              Copy to clipboard
            </div>
          </button>
        </header>
        <table
          className="code-view-table"
        >
          <tbody>
            <tr>
              <td
                className="code-view-numbers"
              >
                <pre>
                  1
                  

                  2
                  

                  3
                  

                  4
                  

                </pre>
              </td>
              <td
                className="code-view-code"
              >
                <pre>
                  &lt;div class="form-group disabled"&gt;
                  

                      &lt;label class="h3"&gt;Input label&lt;/label&gt;
                  

                      &lt;input type="text" class="form-control" disabled /&gt;
                  

                  &lt;/div&gt;
                  

                </pre>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </figure>
  </section>
  <section>
    <h3>
      Javascript methods
    </h3>
    <p>
      <code
        className="code-tags code-tags-secondary"
      >
        dg.validation.init()
      </code>
       can be used on a form tag to initialize all fields contained in the form, or you can pass a single field to initialize just that one.
    </p>
    <p>
      <code
        className="code-tags code-tags-secondary"
      >
        dg.hintTextExpander.init()
      </code>
       can be used to initialize all Hint text expanders. Or 
      <code
        className="code-tags code-tags-secondary"
      >
        dg.hintTextExpander.init(&lt;hint-expander-id&gt;)
      </code>
       to initialize a specific one.
    </p>
  </section>
</section>
`;

exports[`Component: InputField Overview renders 1`] = `
<section
  id="input-field-overview"
>
  <h2
    id="input-field"
  >
    Overview
  </h2>
  <p>
    Depending on the expected length of the user input use either a Input field for shorter input or a Textarea for longer input. 
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <InputGroup
              hintExpander={true}
              id="input-showcase-example"
              label="Label"
              type="text"
            />,
            "description": <React.Fragment>
              <p>
                Use an input field when the expected user input is a single line of text. The default input type is text but it can also be specified as for example Email which will make it automatically validated when submitted or Password which will mask the characters submitted.
              </p>
              <p>
                Input fields can have prefixes or suffixes which can help the user more quickly understand what kind of information that is requested. These can be icons as well as text symbols or currency abbreviations like %, € or kr.
              </p>
            </React.Fragment>,
            "options": Object {
              "checkbox": Array [
                Object {
                  "inputs": Array [
                    Object {
                      "id": "optional",
                      "name": "Is optional",
                      "value": Object {
                        "optional": true,
                      },
                    },
                    Object {
                      "id": "hint_text",
                      "name": "Hint text",
                      "value": Object {
                        "helpBlock": "Hint text",
                        "hintTextId": "hint-text-example-id",
                      },
                    },
                    Object {
                      "id": "hint_expander",
                      "name": "Hint expander",
                      "value": Object {
                        "expanderId": "expander-showcase",
                        "expandingHintTitle": "Expanding hint text",
                      },
                    },
                  ],
                  "title": "Label add on",
                },
              ],
              "radio": Array [
                Object {
                  "id": "fix_radio",
                  "title": "Prefix/Postfix",
                  "values": Array [
                    Object {
                      "name": "None",
                      "value": Object {
                        "type": "text",
                      },
                    },
                    Object {
                      "name": "Prefix - Icon",
                      "value": Object {
                        "addOnType": "icon",
                        "prefixValue": "email",
                        "type": "email",
                      },
                    },
                    Object {
                      "name": "Postfix - Text",
                      "value": Object {
                        "addOnType": "text",
                        "postfix": true,
                        "postfixValue": "kr",
                      },
                    },
                  ],
                },
                Object {
                  "id": "state_radio",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Default",
                      "value": Object {
                        "disabled": false,
                      },
                    },
                    Object {
                      "name": "Error",
                      "value": Object {
                        "errorMessage": "Descriptive helpful error message.",
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Input field",
            "title": "Input field",
          },
          Object {
            "component": <InputGroup
              hintExpander={true}
              label="Label"
              type="textarea"
            />,
            "description": "Use a Text area when the expected user input is more than one sentence.",
            "options": Object {
              "checkbox": Array [
                Object {
                  "inputs": Array [
                    Object {
                      "id": "optional_textarea",
                      "name": "Is optional",
                      "value": Object {
                        "optional": true,
                      },
                    },
                    Object {
                      "id": "hint_text_textarea",
                      "name": "Hint text",
                      "value": Object {
                        "helpBlock": "Hint text",
                        "hintTextId": "hint-text-text-area-example",
                      },
                    },
                    Object {
                      "id": "hint_expander_textarea",
                      "name": "Hint expander",
                      "value": Object {
                        "expanderId": "expander-showcase",
                        "expandingHintTitle": "Expanding hint text",
                      },
                    },
                  ],
                  "title": "Label add on",
                },
              ],
              "radio": Array [
                Object {
                  "id": "state_radio_textarea",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Default",
                      "value": Object {
                        "disabled": false,
                      },
                    },
                    Object {
                      "name": "Error",
                      "value": Object {
                        "errorMessage": "Descriptive helpful error message.",
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Text area",
            "title": "Text area",
          },
        ],
        "id": "no-tabs",
        "tabsId": "overviewInputFieldTabs",
      }
    }
  />
  <h3>
    When to consider something else
  </h3>
  <ul
    className="list list-bullet"
  >
    <li>
      If you want users to choose from a list of responses, instead consider 
      <Link
        to="/components/radio-button"
      >
        radio buttons
      </Link>
      , 
      <Link
        to="/components/checkbox"
      >
        checkboxes
      </Link>
       or a 
      <Link
        to="/components/select"
      >
        select
      </Link>
      .
    </li>
  </ul>
</section>
`;

exports[`Component: InputField renders 1`] = `
<DocContainer>
  <section
    id="input-field-doc"
  >
    <p
      className="lead"
    >
      Input fields typically reside in forms and enable the user to interact with and input words, characters or numbers.
    </p>
    <Overview />
    <ContentGuidelines />
    <DeveloperDocumentation />
  </section>
</DocContainer>
`;
