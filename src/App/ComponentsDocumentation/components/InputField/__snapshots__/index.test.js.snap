// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: InputField ContentGuidelines renders 1`] = `
<section>
  <h2
    id="content-guidelines"
  >
    Content guidelines
  </h2>
  <section>
    <ul
      className="list list-bullet"
    >
      <li>
        Clearly label the input field so users know what information they are expected to enter.
      </li>
      <li>
        Use placeholder text sparingly and 
        <b>
          only
        </b>
         if it helps to clarify the purpose of the input field.
      </li>
      <li>
        Provide clear and concise instructions or hints if necessary, either within the input field or nearby by using the hint text.
      </li>
      <li>
        Validate user input in real-time if possible and provide clear feedback if there are errors.
      </li>
    </ul>
  </section>
  <section>
    <h3>
      Hint text
    </h3>
    <p>
      Use hint text if information is important and should be permanent even if users are interacting with the component.
    </p>
    <div
      className="slab col-12 justify-content-center d-flex bg-quaternary"
    >
      <div
        className="form-group"
      >
        

        <label>
          Personal identification number
        </label>
        

        <input
          autocomplete={null}
          className="form-control"
          data-validate={null}
          defaultValue=""
          disabled={null}
          id={null}
          pattern={null}
          placeholder={null}
          readOnly={null}
          required={null}
          type={null}
        />
        

        <p
          className="hint-text"
          id="hint-text"
        >
          YYYYMMDDNNNNN
        </p>
        

      </div>
    </div>
  </section>
  <section>
    <h3>
      Prefix/postfix
    </h3>
    <p>
      Use prefix/postfix for even more effective communication with the user.
    </p>
    <div
      className="slab col-12 justify-content-center d-flex bg-quaternary"
    >
      <div
        className="form-group"
      >
        <div
          className="form-group"
        >
          

          <label>
            Username
          </label>
          

          <div
            className="input-group"
          >
            

            <span
              className="input-group-addon "
            >
              <i
                aria-hidden="true"
                className="material-icons material-icons-outlined"
              >
                account_circle
              </i>
            </span>
            

            <input
              autocomplete={null}
              className="form-control"
              data-validate={null}
              defaultValue=""
              disabled={null}
              id={null}
              pattern={null}
              placeholder={null}
              readOnly={null}
              required={null}
              type={null}
            />
            
	
            

          </div>
        </div>
        <div
          className="form-group"
        >
          

          <label>
            Fixed transaction fee
          </label>
          

          <div
            className="input-group"
          >
            

            <input
              autocomplete={null}
              className="form-control"
              data-validate={null}
              defaultValue=""
              disabled={null}
              id={null}
              pattern={null}
              placeholder={null}
              readOnly={null}
              required={null}
              type={null}
            />
            
	
            <span
              className="input-group-addon postfix"
            >
              kr
            </span>
            

            

          </div>
        </div>
      </div>
    </div>
  </section>
  <section>
    <h3>
      Error message
    </h3>
    <p>
      Strive to have clear communication with the user. Describe the error precise.
    </p>
    <div
      className="slab col-12 justify-content-center d-flex bg-quaternary"
    >
      <div
        className="form-group has-error"
      >
        

        <label>
          Email address
        </label>
        

        <div
          className="input-group"
        >
          

          <input
            autocomplete={null}
            className="form-control"
            data-validate={null}
            defaultValue="example.email.com"
            disabled={null}
            id={null}
            pattern={null}
            placeholder={null}
            readOnly={null}
            required={null}
            type={null}
          />
          
	
          <span
            className="input-group-addon postfix"
          >
            <i
              aria-hidden="true"
              className="material-icons material-icons-outlined"
            >
              warning
            </i>
          </span>
          

        </div>
        <div
          className="help-block"
        >
          The email address must include '@'
        </div>
        

      </div>
    </div>
    <h3>
      Success message
    </h3>
    <p>
      One can also add a successful variant in those cases the users are correctly placing their input.
    </p>
    <div
      className="slab col-12 justify-content-center d-flex bg-quaternary"
    >
      <div
        className="form-group has-success"
      >
        

        <label>
          Email address
        </label>
        

        <div
          className="input-group"
        >
          

          <input
            autocomplete={null}
            className="form-control"
            data-validate={null}
            defaultValue="example.email@company.com"
            disabled={null}
            id={null}
            pattern={null}
            placeholder={null}
            readOnly={null}
            required={null}
            type={null}
          />
          
	
          <span
            className="input-group-addon postfix"
          >
            <i
              aria-hidden="true"
              className="material-icons"
            >
              check_circle
            </i>
          </span>
          

        </div>
      </div>
    </div>
  </section>
</section>
`;

exports[`Component: InputField DeveloperDocumentation renders 1`] = `
<section
  id="developer-documentation-container"
>
  <h2
    id="developer-documentation mb-3"
  >
    Developer documentation
  </h2>
  <section>
    <h3
      className="mt-3"
    >
      Autocomplete
    </h3>
    <p>
      Add 
      <code
        className="code-tags code-tags-primary"
      >
        autocomplete
      </code>
       attributes to input fields when it is possible to make a form easier for users to fill. 
    </p>
    <div
      className="showcase-panel"
    >
      <div
        className="form-group"
      >
        

        <label
          htmlFor="developer-documentation-example"
        >
          Name
        </label>
        

        <input
          autoComplete="name"
          className="form-control"
          data-validate={null}
          defaultValue=""
          disabled={null}
          id="developer-documentation-example"
          pattern={null}
          placeholder={null}
          readOnly={null}
          required={null}
          type="text"
        />
        

      </div>
    </div>
    <figure>
      <div
        className="code-view"
      >
        <header
          className="code-view-header"
        >
          HTML
          <button
            aria-describedby="tooltipCopy"
            className="tooltip"
            onClick={[Function]}
          >
            <i
              className="material-icons-outlined"
            >
              content_copy
            </i>
            <div
              id="tooltipCopy"
              role="tooltip"
            >
              Copy to clipboard
            </div>
          </button>
        </header>
        <table
          className="code-view-table"
        >
          <tbody>
            <tr>
              <td
                className="code-view-numbers"
              >
                <pre>
                  1
                  

                  2
                  

                  3
                  

                  4
                  

                </pre>
              </td>
              <td
                className="code-view-code"
              >
                <pre>
                  &lt;div class="form-group"&gt;
                  

                      &lt;label for="developer-documentation-example"&gt;Name&lt;/label&gt;
                  

                      &lt;input type="text" class="form-control" id="developer-documentation-example" autoComplete="name" /&gt;
                  

                  &lt;/div&gt;
                  

                </pre>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </figure>
  </section>
  <section>
    <h3>
      Error message
    </h3>
    <p>
      To display the error state, add the 
      <code
        className="code-tags code-tags-secondary"
      >
        .has-error
      </code>
       class to the parent element, then add the 
      <code
        className="code-tags code-tags-secondary"
      >
        .help-block
      </code>
       element as the last child with the error message.
    </p>
    <div
      className="showcase-panel"
    >
      <div
        className="form-group"
      >
        

        <label
          htmlFor="developer-documentation-error-example"
        >
          Input label
        </label>
        

        <input
          autoComplete={null}
          className="form-control"
          data-validate={null}
          defaultValue="Input text"
          disabled={null}
          id="developer-documentation-error-example"
          pattern={null}
          placeholder={null}
          readOnly={null}
          required={null}
          type="text"
        />
        

        <div
          className="help-block"
        >
          Descriptive helpful error message.
        </div>
        

      </div>
    </div>
    <figure>
      <div
        className="code-view"
      >
        <header
          className="code-view-header"
        >
          HTML
          <button
            aria-describedby="tooltipCopy"
            className="tooltip"
            onClick={[Function]}
          >
            <i
              className="material-icons-outlined"
            >
              content_copy
            </i>
            <div
              id="tooltipCopy"
              role="tooltip"
            >
              Copy to clipboard
            </div>
          </button>
        </header>
        <table
          className="code-view-table"
        >
          <tbody>
            <tr>
              <td
                className="code-view-numbers"
              >
                <pre>
                  1
                  

                  2
                  

                  3
                  

                  4
                  

                  5
                  

                </pre>
              </td>
              <td
                className="code-view-code"
              >
                <pre>
                  &lt;div class="form-group"&gt;
                  

                      &lt;label for="developer-documentation-error-example"&gt;Input label&lt;/label&gt;
                  

                      &lt;input type="text" class="form-control" id="developer-documentation-error-example" value="Input text" /&gt;
                  

                      &lt;div class="help-block"&gt;Descriptive helpful error message.&lt;/div&gt;
                  

                  &lt;/div&gt;
                  

                </pre>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </figure>
  </section>
  <section>
    <h3>
      Disabled state
    </h3>
    <p>
      Disable a input field by adding the 
      <code
        className="code-tags code-tags-primary"
      >
        disabled
      </code>
       attribute to the desired input field and the 
      <code
        className="code-tags code-tags-primary"
      >
        form-group
      </code>
       where the input field resides.
    </p>
    <div
      className="showcase-panel"
    >
      <div
        className="form-group disabled"
      >
        

        <label>
          Input label
        </label>
        

        <input
          autoComplete={null}
          className="form-control"
          data-validate={null}
          defaultValue=""
          disabled={true}
          id={null}
          pattern={null}
          placeholder={null}
          readOnly={null}
          required={null}
          type="text"
        />
        

      </div>
    </div>
    <figure>
      <div
        className="code-view"
      >
        <header
          className="code-view-header"
        >
          HTML
          <button
            aria-describedby="tooltipCopy"
            className="tooltip"
            onClick={[Function]}
          >
            <i
              className="material-icons-outlined"
            >
              content_copy
            </i>
            <div
              id="tooltipCopy"
              role="tooltip"
            >
              Copy to clipboard
            </div>
          </button>
        </header>
        <table
          className="code-view-table"
        >
          <tbody>
            <tr>
              <td
                className="code-view-numbers"
              >
                <pre>
                  1
                  

                  2
                  

                  3
                  

                  4
                  

                </pre>
              </td>
              <td
                className="code-view-code"
              >
                <pre>
                  &lt;div class="form-group disabled"&gt;
                  

                      &lt;label&gt;Input label&lt;/label&gt;
                  

                      &lt;input type="text" class="form-control" disabled /&gt;
                  

                  &lt;/div&gt;
                  

                </pre>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </figure>
  </section>
  <section>
    <h3>
      Javascript methods
    </h3>
    <p>
      <code
        className="code-tags code-tags-secondary"
      >
        dg.validation.init()
      </code>
       can be used on a form tag to initialize all fields contained in the form, or you can pass a single field to initialize just that one.
    </p>
    <p>
      <code
        className="code-tags code-tags-secondary"
      >
        dg.hintTextExpander.init()
      </code>
       can be used to initialize all Hint text expanders. Or 
      <code
        className="code-tags code-tags-secondary"
      >
        dg.hintTextExpander.init(&lt;hint-expander-id&gt;)
      </code>
       to initialize a specific one.
    </p>
  </section>
</section>
`;

exports[`Component: InputField Overview renders 1`] = `
<section
  id="input-field-overview"
>
  <h2
    id="input-field"
  >
    Overview
  </h2>
  <p>
    Depending on the expected length of the user input use either a Input field for shorter input or a Textarea for longer input. 
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <InputGroup
              hintExpander={true}
              id="input-showcase-example"
              label="Label"
              type="text"
            />,
            "description": <React.Fragment>
              <p>
                Use an input field when the expected user input is a single line of text. The default input type is text but it can also be specified as for example Email which will make it automatically validated when submitted or Password which will mask the characters submitted.
              </p>
              <p>
                Input fields can have prefixes or suffixes which can help the user more quickly understand what kind of information that is requested. These can be icons as well as text symbols or currency abbreviations like %, € or kr.
              </p>
            </React.Fragment>,
            "options": Object {
              "checkbox": Array [
                Object {
                  "inputs": Array [
                    Object {
                      "id": "optional",
                      "name": "Is optional",
                      "value": Object {
                        "optional": true,
                      },
                    },
                    Object {
                      "id": "hint_text",
                      "name": "Hint text",
                      "value": Object {
                        "helpBlock": "Hint text",
                        "hintTextId": "hint-text-example-id",
                      },
                    },
                    Object {
                      "id": "hint_expander",
                      "name": "Hint expander",
                      "value": Object {
                        "expanderId": "expander-showcase",
                        "expandingHintTitle": "Expanding hint text",
                      },
                    },
                  ],
                  "title": "Label add on",
                },
              ],
              "radio": Array [
                Object {
                  "id": "fix_radio",
                  "title": "Prefix/Postfix",
                  "values": Array [
                    Object {
                      "name": "None",
                      "value": Object {
                        "type": "text",
                      },
                    },
                    Object {
                      "name": "Prefix - Icon",
                      "value": Object {
                        "addOnType": "icon",
                        "prefixValue": "email",
                        "type": "email",
                      },
                    },
                    Object {
                      "name": "Postfix - Text",
                      "value": Object {
                        "addOnType": "text",
                        "postfix": true,
                        "postfixValue": "kr",
                      },
                    },
                  ],
                },
                Object {
                  "id": "state_radio",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Default",
                      "value": Object {
                        "disabled": false,
                      },
                    },
                    Object {
                      "name": "Error",
                      "value": Object {
                        "errorMessage": "Descriptive helpful error message.",
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Input field",
            "title": "Input field",
          },
          Object {
            "component": <InputGroup
              hintExpander={true}
              label="Label"
              type="textarea"
            />,
            "description": "Use a Text area when the expected user input is more than one sentence.",
            "options": Object {
              "checkbox": Array [
                Object {
                  "inputs": Array [
                    Object {
                      "id": "optional_textarea",
                      "name": "Is optional",
                      "value": Object {
                        "optional": true,
                      },
                    },
                    Object {
                      "id": "hint_text_textarea",
                      "name": "Hint text",
                      "value": Object {
                        "helpBlock": "Hint text",
                        "hintTextId": "hint-text-text-area-example",
                      },
                    },
                    Object {
                      "id": "hint_expander_textarea",
                      "name": "Hint expander",
                      "value": Object {
                        "expanderId": "expander-showcase",
                        "expandingHintTitle": "Expanding hint text",
                      },
                    },
                  ],
                  "title": "Label add on",
                },
              ],
              "radio": Array [
                Object {
                  "id": "state_radio_textarea",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Default",
                      "value": Object {
                        "disabled": false,
                      },
                    },
                    Object {
                      "name": "Error",
                      "value": Object {
                        "errorMessage": "Descriptive helpful error message.",
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Text area",
            "title": "Text area",
          },
        ],
        "id": "no-tabs",
        "tabsId": "overviewInputFieldTabs",
      }
    }
  />
  <h3>
    When to consider something else
  </h3>
  <ul
    className="list list-bullet"
  >
    <li>
      If you want users to choose from a list of responses, instead consider 
      <Link
        to="/components/radio-button"
      >
        radio buttons
      </Link>
      , 
      <Link
        to="/components/checkbox"
      >
        checkboxes
      </Link>
       or a 
      <Link
        to="/components/select"
      >
        select
      </Link>
      .
    </li>
  </ul>
</section>
`;

exports[`Component: InputField renders 1`] = `
<DocContainer>
  <section
    id="input-field-doc"
  >
    <p
      className="lead"
    >
      Input fields typically reside in forms and enable the user to interact with and input words, characters or numbers.
    </p>
    <Overview />
    <ContentGuidelines />
    <DeveloperDocumentation />
  </section>
</DocContainer>
`;
