// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Documentation: Buttons Combining buttons renders 1`] = `
<section>
  <h2
    id="combining-buttons"
  >
    Combining buttons
  </h2>
  <p>
    When using buttons next to each other, always wrap them in a 
    <CodeTags
      code=".button-group"
      type="primary"
    />
     and make sure to use 8px spacing between the buttons, both in horizontally and vertically groupings. Strive not to use multiple buttons of the same kind – instead, use 
    <Link
      to="/components/links#action-link"
    >
      Action links
    </Link>
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <div
      className="button-group"
    >
      

      <Button
        className="mr-1"
        label="Activate"
        type="primary"
      />
      

      <Button
        label="Disable"
        type="secondary"
      />
      

    </div>
  </ComponentPreview>
  <h3>
    How to combine buttons
  </h3>
  <div
    className="row"
  >
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-4"
      >
        <h4
          className="mb-3 mt-0"
        >
          Do
        </h4>
        <div
          className="d-flex flex-column button-group mt-4 "
        >
          <Button
            className="justify-content-center mb-2"
            label="Primary action"
            type="primary"
          />
          <Button
            className="justify-content-center mb-2"
            label="Secondary action"
            type="secondary"
          />
          <Button
            className="justify-content-center"
            label="Cancel"
            type="link"
          />
        </div>
      </div>
      <p>
        Place buttons in hierarchal correct order and combine different kinds of buttons.
      </p>
    </div>
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-5 h-75"
      >
        <h4
          className="mb-3 mt-0"
        >
          Do
        </h4>
        <div
          className="d-flex button-group mt-4 align-items-center"
        >
          <Button
            className="mr-2"
            label="Primary"
            type="primary"
          />
          <Button
            label="Secondary"
            type="secondary"
          />
        </div>
      </div>
      <p>
        Place buttons side by side in desktop view.
      </p>
    </div>
  </div>
  <div
    className="row mt-2"
  >
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-5"
      >
        <h4
          className="mb-3 mt-0"
        >
          Do
        </h4>
        <div
          className="d-flex flex-column button-group mt-4"
        >
          <Button
            className="justify-content-center mb-2"
            label="Primary action"
            type="primary"
          />
          <Button
            className="justify-content-center"
            label="Cancel"
            type="link"
          />
        </div>
      </div>
      <p>
        Use the Link button as a discrete option to cancel.
      </p>
    </div>
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-5"
      >
        <h4
          className="mb-3 mt-0"
        >
          Do
        </h4>
        <div
          className="d-flex flex-column button-group mt-4 "
        >
          <Button
            className="justify-content-center mb-2"
            label="Executive destructive action"
            type="executive-destructive"
          />
          <Button
            className="justify-content-center"
            label="Cancel"
            type="link"
          />
        </div>
      </div>
      <p>
        Combine Executive destructive buttons with normal Link buttons.
      </p>
    </div>
  </div>
  <h3>
    How not to combine buttons
  </h3>
  <div
    className="row"
  >
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-error pb-5"
      >
        <h4
          className="mb-3 mt-0"
        >
          Don't
        </h4>
        <div
          className="d-flex flex-column button-group mt-4 "
        >
          <Button
            className="justify-content-center mb-2"
            label="Secondary action"
            type="secondary"
          />
          <Button
            className="justify-content-center"
            label="Primary action"
            type="primary"
          />
        </div>
      </div>
      <p>
        Don't use the Secondary button and/or the Link button above the Primary button.
      </p>
    </div>
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-error pb-5"
      >
        <h4
          className="mb-3 mt-0"
        >
          Don't
        </h4>
        <div
          className="d-flex flex-column button-group mt-4 "
        >
          <Button
            className="justify-content-center mb-2"
            label="Primary action"
            type="primary"
          />
          <Button
            className="justify-content-center"
            label="Destructive guiding action"
            type="guiding-destructive"
          />
        </div>
      </div>
      <p>
        Don't combine Primary buttons with Destructive buttons.
      </p>
    </div>
  </div>
  <div
    className="row mt-2"
  >
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-error pb-5"
      >
        <h4
          className="mb-3 mt-0"
        >
          Don't
        </h4>
        <div
          className="d-flex flex-column button-group mt-4 "
        >
          <Button
            className="justify-content-center mb-2"
            label="Executive destructive action"
            type="executive-destructive"
          />
          <Button
            className="justify-content-center mb-2"
            label="Destructive guiding action"
            type="guiding-destructive"
          />
          <Button
            className="justify-content-center"
            label="Cancel"
            type="link-destructive"
          />
        </div>
      </div>
      <p>
        Don't use and combine Destructive buttons the same way as normal buttons.
      </p>
    </div>
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-error pb-5"
      >
        <h4
          className="mb-3 mt-0"
        >
          Don't
        </h4>
        <div
          className="d-flex flex-column button-group mt-4 "
        >
          <Button
            className="justify-content-center mb-2"
            label="Primary action"
            type="primary"
          />
          <Button
            bankId="se"
            className="justify-content-center mb-2"
            label="Primary action"
            type="primary"
          />
          <Button
            className="justify-content-center"
            label="Primary action"
            type="primary"
          />
        </div>
      </div>
      <p>
        Don't use multiple Primary buttons or combine with BankID button.
      </p>
    </div>
  </div>
</section>
`;

exports[`Documentation: Buttons Content guidelines renders 1`] = `
<section>
  <h2
    id="content-guidelines"
  >
    Content guidelines
  </h2>
  <p>
    The intention of a button should be clear and predictable. Users should be able to anticipate what will happen when they click on a button. Buttons should always lead with a strong verb that encourages action. Provide enough context for users by using the {verb} + {noun} content formula instead of using “Yes”, “Confirm”, “Cancel” – except when it comes to the Text Button, which commonly uses “Cancel”. To avoid buttons breaking in smaller interfaces due to long names, always check that the button looks OK in a mobile view. Generally, try to keep the number of characters fairly low to provide more clarity.
  </p>
  <h3>
    Unique naming
  </h3>
  <p>
    Avoid using the same name for multiple buttons in the same user flow. It’s particularly hard for users using a screen reader to tell four “Next” buttons one                after another apart.                 When combining an "Executive Destructive Button" with a "Text Button" be careful to not name both buttons “Cancel”.                Try to separate the text as much as you can to improve the user experience, providing the user from accidentally making the wrong choice.
  </p>
  <div
    className="row"
  >
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-4"
      >
        <h4>
          Do
        </h4>
        <div
          className="d-flex justify-content-center mt-4 mb-4"
        >
          <img
            alt="Use different naming on buttons for differentiate actions."
            className="img-fluid"
            src="/TEST/img/documentation/buttons/dos-naming.png"
          />
        </div>
      </div>
      <p>
        Make sure to differentiate the naming so that the user understands the difference between the actions the user can take.
      </p>
    </div>
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-error pb-4"
      >
        <h4>
          Don't
        </h4>
        <div
          className="d-flex justify-content-center mt-4 mb-4"
        >
          <img
            alt="Avoid naming executive destructive buttons poorly"
            className="img-fluid"
            src="/TEST/img/documentation/buttons/donts-naming.png"
          />
        </div>
      </div>
      <p>
        Avoid naming an Executive Destructive Button poorly – the button cancels the payment of the invoice and not the invoice, which isn’t clear at all.
      </p>
    </div>
  </div>
  <h3>
    How to use icons
  </h3>
  <div
    className="row"
  >
    <div
      className="col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-4"
      >
        <h4
          className="mb-3 mt-0"
        >
          Do
        </h4>
        <div
          className="d-flex button-group flex-column align-items-center justify-content-center mt-4 mb-4"
        >
          <Button
            className="justify-content-center mb-2 w-50"
            icon="delete"
            label="Delete"
            type="guiding-destructive"
          />
          <Button
            className="justify-content-center w-50"
            icon="edit"
            label="Edit"
            type="secondary"
          />
        </div>
      </div>
      <p>
        Use an icon to further convey the action, e.g. a trashcan icon for a delete button.
      </p>
    </div>
  </div>
</section>
`;

exports[`Documentation: Buttons Destructive button renders 1`] = `
<section>
  <h2
    id="destructive-button"
  >
    Destructive button
  </h2>
  <p>
    Only use warning buttons for actions with serious destructive consequences that cannot be easily recovered or undone by a user. For example, permanently deleting an account.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <Button
              label="Guiding destructive button"
              type="guiding-destructive"
            />,
            "description": <React.Fragment>
              <p>
                Use a guiding destructive button to clearly show the user that the action is destructive. The button is designed to not take on too much visual attention from the user yet still clearly communicate a destructive action. It can therefor safely be used in most contexts.
              </p>
              <p>
                When letting users carry out an action like this, it’s a good idea to include an additional step which asks them to confirm it. The guiding destructive button will therefor often occur prior to the executive destructive button in a user flow.
              </p>
            </React.Fragment>,
            "options": Object {
              "radio": Array [
                Object {
                  "id": "destructive_icon_radio",
                  "title": "Icon",
                  "values": Array [
                    Object {
                      "name": "None",
                    },
                    Object {
                      "name": "Before",
                      "value": Object {
                        "icon": "cloud",
                      },
                    },
                    Object {
                      "name": "After",
                      "value": Object {
                        "icon": "keyboard_arrow_down",
                        "iconAfter": true,
                      },
                    },
                  ],
                },
                Object {
                  "id": "destructive_size_radio",
                  "title": "Sizes",
                  "values": Array [
                    Object {
                      "name": "Large",
                      "value": Object {
                        "size": "lg",
                      },
                    },
                    Object {
                      "name": "Small",
                      "value": Object {
                        "size": "sm",
                      },
                    },
                    Object {
                      "name": "Extra small",
                      "value": Object {
                        "size": "xs",
                      },
                    },
                  ],
                },
                Object {
                  "id": "destructive_state_modifiers",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Enabled",
                      "value": Object {
                        "disabled": false,
                        "loader": false,
                        "loading": false,
                      },
                    },
                    Object {
                      "name": "Loading",
                      "value": Object {
                        "disabled": true,
                        "loader": true,
                        "loading": true,
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Guiding",
            "title": "Destructive button",
          },
          Object {
            "component": <Button
              label="Executive destructive button"
              type="executive-destructive"
            />,
            "description": "The executive destructive button should be used sparingly and only in case of a final destructive call to action. The executive destructive button visually takes up a lot of the attention. To not distract the user from other content it is often used in simpler contexts such as dialogs, for example when confirming removal of certain information.",
            "options": Object {
              "radio": Array [
                Object {
                  "id": "destructive_icon_radio",
                  "title": "Icon",
                  "values": Array [
                    Object {
                      "name": "None",
                    },
                    Object {
                      "name": "Before",
                      "value": Object {
                        "icon": "cloud",
                      },
                    },
                    Object {
                      "name": "After",
                      "value": Object {
                        "icon": "keyboard_arrow_down",
                        "iconAfter": true,
                      },
                    },
                  ],
                },
                Object {
                  "id": "destructive_size_radio",
                  "title": "Sizes",
                  "values": Array [
                    Object {
                      "name": "Large",
                      "value": Object {
                        "size": "lg",
                      },
                    },
                    Object {
                      "name": "Small",
                      "value": Object {
                        "size": "sm",
                      },
                    },
                    Object {
                      "name": "Extra small",
                      "value": Object {
                        "size": "xs",
                      },
                    },
                  ],
                },
                Object {
                  "id": "destructive_state_modifiers",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Enabled",
                      "value": Object {
                        "disabled": false,
                        "loader": false,
                        "loading": false,
                      },
                    },
                    Object {
                      "name": "Loading",
                      "value": Object {
                        "disabled": true,
                        "loader": true,
                        "loading": true,
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Executive",
            "title": "Executive destructive button",
          },
          Object {
            "component": <Button
              label="Link destructive button"
              type="link-destructive"
            />,
            "description": "The text destructive button is used as an alternative for the guiding destructive button and can be used when there is limited space, within other components or various containers.",
            "options": Object {
              "radio": Array [
                Object {
                  "id": "destructive_icon_radio",
                  "title": "Icon",
                  "values": Array [
                    Object {
                      "name": "None",
                    },
                    Object {
                      "name": "Before",
                      "value": Object {
                        "icon": "cloud",
                      },
                    },
                    Object {
                      "name": "After",
                      "value": Object {
                        "icon": "keyboard_arrow_down",
                        "iconAfter": true,
                      },
                    },
                  ],
                },
                Object {
                  "id": "destructive_size_radio",
                  "title": "Sizes",
                  "values": Array [
                    Object {
                      "name": "Large",
                      "value": Object {
                        "size": "lg",
                      },
                    },
                    Object {
                      "name": "Small",
                      "value": Object {
                        "size": "sm",
                      },
                    },
                    Object {
                      "name": "Extra small",
                      "value": Object {
                        "size": "xs",
                      },
                    },
                  ],
                },
                Object {
                  "id": "destructive_state_modifiers",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Enabled",
                      "value": Object {
                        "disabled": false,
                        "loader": false,
                        "loading": false,
                      },
                    },
                    Object {
                      "name": "Loading",
                      "value": Object {
                        "disabled": true,
                        "loader": true,
                        "loading": true,
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Link",
            "title": "Destructive button",
          },
        ],
        "id": "destructiveButtons",
        "tabsId": "destructiveButtonsTabs",
      }
    }
  />
  <h3>
    How to use destructive buttons
  </h3>
  <div
    className="row"
  >
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-4"
      >
        <h4
          className="mb-3 mt-0"
        >
          Do
        </h4>
        <div
          className="d-flex justify-content-center mt-4 mb-4"
        >
          <img
            alt="Use Guiding Destructive buttons to for example 'Cancel Payment'"
            className="img-fluid"
            src="/TEST/img/documentation/buttons/dos-guiding.png"
          />
        </div>
      </div>
      <p>
        Use the Guiding Destructive Buttons to initiate a destructive action.
      </p>
    </div>
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-error pb-4"
      >
        <h4>
          Don't
        </h4>
        <div
          className="d-flex justify-content-center mt-4 mb-4"
        >
          <img
            alt="Do not use executive destructive button to initiate a destructive action."
            className="img-fluid"
            src="/TEST/img/documentation/buttons/donts-executive.png"
          />
        </div>
      </div>
      <p>
        Avoid using the Executive Destructive Buttons to initiate a destructive action.
      </p>
    </div>
  </div>
  <div
    className="row mt-2"
  >
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-4"
      >
        <h4>
          Do
        </h4>
        <div
          className="d-flex justify-content-center mt-4 mb-4"
        >
          <img
            alt="Use executive destruction button to achieve final destructive call."
            className="img-fluid"
            src="/TEST/img/documentation/buttons/dos.png"
          />
        </div>
      </div>
      <p>
        Use the Executive Destructive Buttons a contained space as a final destructive call to action.
      </p>
    </div>
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-error pb-4"
      >
        <h4>
          Don't
        </h4>
        <div
          className="d-flex justify-content-center mt-4 mb-4"
        >
          <img
            alt="Avoid using multiple executive destructive buttons"
            className="img-fluid"
            src="/TEST/img/documentation/buttons/donts.png"
          />
        </div>
      </div>
      <p>
        Avoid using multiple Executive Destructive Buttons in the same user flow.
      </p>
    </div>
  </div>
</section>
`;

exports[`Documentation: Buttons Developer documentation renders 1`] = `
<section>
  <h2
    id="developer-documentation"
  >
    Developer documentation
  </h2>
  <h3>
    Disabled state
  </h3>
  <p>
    Make buttons look inactive by adding the 
    <CodeTags
      code="disabled"
      type="primary"
    />
     boolean attribute to any 
    <CodeTags
      code="<button>"
      type="primary"
    />
     element.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <div
      className="button-group"
    >
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Primary"
        type="primary"
      />
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Secondary"
        type="secondary"
      />
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Link"
        type="link"
      />
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Destructive Executive"
        type="executive-destructive"
      />
      

      <Button
        className="mr-1"
        disabled={true}
        label="Guiding destructive"
        type="guiding-destructive"
      />
      

      <Button
        className="mr-1"
        disabled={true}
        label="Destructive link"
        type="link-destructive"
      />
      

    </div>
  </ComponentPreview>
  <h4>
    Disabled with 
    <CodeTags
      code="<a>"
      type="primary"
    />
     tag
  </h4>
  <p>
    Disabled buttons using the 
    <CodeTags
      code="<a>"
      type="primary"
    />
     element behave a bit different:
  </p>
  <ul>
    <li>
      <CodeTags
        code="<a>"
        type="primary"
      />
      s do not support the 
      <CodeTags
        code="disabled"
        type="secondary"
      />
       attribute, so you must add the 
      <CodeTags
        code=".disabled"
        type="secondary"
      />
       class to make it visually appear disabled.
    </li>
    <li>
      Some future-friendly styles are included to disable all 
      <CodeTags
        code="pointer-events"
        type="secondary"
      />
       on anchor buttons. In browsers which support that property, you won’t see the disabled cursor at all.
    </li>
    <li>
      Disabled buttons should include the 
      <CodeTags
        code="aria-disabled=\\"true\\""
        type="secondary"
      />
       attribute to indicate the state of the element to assistive technologies.
    </li>
  </ul>
  <Alert
    icon="warning"
    text={
      <p>
        <b>
          Link functionality:
        </b>
         The 
        <CodeTags
          code=".disabled"
          type="secondary"
        />
         class uses 
        <CodeTags
          code="pointer-events: none"
          type="secondary"
        />
         to try to disable the link functionality of 
        <CodeTags
          code="<a>"
          type="primary"
        />
        s, but that CSS property is not yet standardized. In addition, even in browsers that do support 
        <CodeTags
          code="pointer-events: none"
          type="secondary"
        />
        , keyboard navigation remains unaffected, meaning that sighted keyboard users and users of assistive technologies will still be able to activate these links. So to be safe, add a 
        <CodeTags
          code="tabindex=\\"-1\\""
          type="secondary"
        />
         attribute on these links (to prevent them from receiving keyboard focus) and use custom JavaScript to disable their functionality.
      </p>
    }
    type="informative"
  />
  <h3>
    Loading state
  </h3>
  <p>
    Use the loading state to show users their action is processing by adding the 
    <CodeTags
      code=".loading"
      type="primary"
    />
     class to the 
    <CodeTags
      code="<button>"
      type="primary"
    />
     element, and the 
    <CodeTags
      code="disabled"
      type="primary"
    />
     attribute.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <div
      className="button-group"
    >
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Primary"
        loading={true}
        type="primary"
      />
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Secondary"
        loading={true}
        type="secondary"
      />
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Link"
        loading={true}
        type="link"
      />
      

      <Button
        className="mr-1 "
        disabled={true}
        label="Destructive executive"
        loading={true}
        type="executive-destructive"
      />
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Destructive guiding"
        loading={true}
        type="guiding-destructive"
      />
      

      <Button
        className="mr-1 mb-2"
        disabled={true}
        label="Destructive link"
        loading={true}
        type="link-destructive"
      />
      

    </div>
  </ComponentPreview>
  <h3>
    Usage with other tags
  </h3>
  <p>
    The 
    <CodeTags
      code=".btn"
      type="secondary"
    />
     classes are designed to be used with the 
    <CodeTags
      code="<button>"
      type="primary"
    />
     element. However, you can also use these classes on 
    <CodeTags
      code="<a>"
      type="primary"
    />
     or 
    <CodeTags
      code="<input>"
      type="primary"
    />
     elements (though some browsers may apply a slightly different rendering).
  </p>
  <p>
    When using button classes on 
    <CodeTags
      code="<a>"
      type="primary"
    />
     elements that are used to trigger in-page functionality (like collapsing content), rather than linking to new pages or sections within the current page, these links should be given a 
    <CodeTags
      code="role=\\"button\\""
      type="secondary"
    />
     to appropriately convey their purpose to assistive technologies such as screen readers.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <div
      className="button-group"
    >
      

      <Button
        className="mr-1"
        href="#"
        label="Anchor"
        type="primary"
      />
      

      <Button
        className="mr-1"
        label="Button"
        type="primary"
      />
      

      <Button
        btnType="button"
        className="mr-1"
        input={true}
        type="primary"
        value="Input"
      />
      

      <Button
        btnType="submit"
        className="mr-1"
        input={true}
        type="primary"
        value="Submit"
      />
      

      <Button
        btnType="reset"
        className="mr-1"
        input={true}
        type="primary"
        value="Reset"
      />
      

    </div>
  </ComponentPreview>
</section>
`;

exports[`Documentation: Buttons Overview renders 1`] = `
<section>
  <h2
    id="overview"
  >
    Button variants
  </h2>
  <p>
    There are three different sizes of buttons to choose from: xsmall, small and large. Our button variants can also be customized with icons next to the label to clarify the action. 
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <Button
              label="Primary button"
              type="primary"
            />,
            "description": "Use a primary button as the main call to action on a page. Avoid using multiple default buttons on a single page. Having more than one main call to action reduces their impact, and makes it harder for users to know what to do next.",
            "options": Object {
              "radio": Array [
                Object {
                  "id": "icon_radio",
                  "title": "Icon",
                  "values": Array [
                    Object {
                      "name": "None",
                    },
                    Object {
                      "name": "Before",
                      "value": Object {
                        "icon": "cloud",
                      },
                    },
                    Object {
                      "name": "After",
                      "value": Object {
                        "icon": "keyboard_arrow_down",
                        "iconAfter": true,
                      },
                    },
                  ],
                },
                Object {
                  "id": "size_radio",
                  "title": "Sizes",
                  "values": Array [
                    Object {
                      "name": "Large",
                      "value": Object {
                        "size": "lg",
                      },
                    },
                    Object {
                      "name": "Small",
                      "value": Object {
                        "size": "sm",
                      },
                    },
                    Object {
                      "name": "Extra small",
                      "value": Object {
                        "size": "xs",
                      },
                    },
                  ],
                },
                Object {
                  "id": "state_modifiers",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Enabled",
                      "value": Object {
                        "disabled": false,
                        "loader": false,
                        "loading": false,
                      },
                    },
                    Object {
                      "name": "Loading",
                      "value": Object {
                        "disabled": true,
                        "loader": true,
                        "loading": true,
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Primary",
            "title": "Primary button",
          },
          Object {
            "component": <Button
              bankId="se"
              label="BankId button"
              type="primary"
            />,
            "description": <React.Fragment>
              <p>
                Use BankID buttons as the main call to action on a page when the following action is signing or verifying something with BankID. Currently only available for Swedish and Norwegian BankID.
              </p>
              <p>
                Avoid using multiple BankID buttons on a single page. Having more than one main call to action reduces their impact, and makes it harder for users to know what to do next.
              </p>
            </React.Fragment>,
            "options": Object {
              "radio": Array [
                Object {
                  "id": "country_radio",
                  "title": "Country",
                  "values": Array [
                    Object {
                      "name": "Sweden",
                      "value": Object {
                        "bankId": "se",
                      },
                    },
                    Object {
                      "name": "Norway",
                      "value": Object {
                        "bankId": "no",
                      },
                    },
                  ],
                },
                Object {
                  "id": "loading_icon",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Enabled",
                      "value": Object {
                        "disabled": false,
                        "loader": false,
                        "loading": false,
                      },
                    },
                    Object {
                      "name": "Loading",
                      "value": Object {
                        "disabled": true,
                        "loader": true,
                        "loading": true,
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "BankID",
            "title": "BankID button",
          },
          Object {
            "component": <Button
              label="Secondary button"
              type="secondary"
            />,
            "description": <p>
              Use secondary buttons for secondary call to actions on a page. Pages with too many calls to action make it hard for users to know what to do next. Before adding lots of secondary buttons, try to simplify the page or break the content down across multiple pages or consider using 
              <Link
                to="/components/links#action-link"
              >
                Action links
              </Link>
              .
            </p>,
            "options": Object {
              "radio": Array [
                Object {
                  "id": "icon_radio",
                  "title": "Icon",
                  "values": Array [
                    Object {
                      "name": "None",
                    },
                    Object {
                      "name": "Before",
                      "value": Object {
                        "icon": "cloud",
                      },
                    },
                    Object {
                      "name": "After",
                      "value": Object {
                        "icon": "keyboard_arrow_down",
                        "iconAfter": true,
                      },
                    },
                  ],
                },
                Object {
                  "id": "size_radio",
                  "title": "Sizes",
                  "values": Array [
                    Object {
                      "name": "Large",
                      "value": Object {
                        "size": "lg",
                      },
                    },
                    Object {
                      "name": "Small",
                      "value": Object {
                        "size": "sm",
                      },
                    },
                    Object {
                      "name": "Extra small",
                      "value": Object {
                        "size": "xs",
                      },
                    },
                  ],
                },
                Object {
                  "id": "state_modifiers",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Enabled",
                      "value": Object {
                        "disabled": false,
                        "loader": false,
                        "loading": false,
                      },
                    },
                    Object {
                      "name": "Loading",
                      "value": Object {
                        "disabled": true,
                        "loader": true,
                        "loading": true,
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Secondary",
            "title": "Secondary button",
          },
          Object {
            "component": <Button
              label="Link button"
              type="link"
            />,
            "description": <p>
              Only use in combination with a primary or secondary button – for stand alone links see 
              <Link
                to="/components/links"
              >
                Links
              </Link>
              . Use for less important or less commonly used actions since they’re less prominent. Text buttons are often embedded in contained components like dialogs.
            </p>,
            "options": Object {
              "radio": Array [
                Object {
                  "id": "icon_radio",
                  "title": "Icon",
                  "values": Array [
                    Object {
                      "name": "None",
                    },
                    Object {
                      "name": "Before",
                      "value": Object {
                        "icon": "cloud",
                      },
                    },
                    Object {
                      "name": "After",
                      "value": Object {
                        "icon": "keyboard_arrow_down",
                        "iconAfter": true,
                      },
                    },
                  ],
                },
                Object {
                  "id": "size_radio",
                  "title": "Sizes",
                  "values": Array [
                    Object {
                      "name": "Large",
                      "value": Object {
                        "size": "lg",
                      },
                    },
                    Object {
                      "name": "Small",
                      "value": Object {
                        "size": "sm",
                      },
                    },
                    Object {
                      "name": "Extra small",
                      "value": Object {
                        "size": "xs",
                      },
                    },
                  ],
                },
                Object {
                  "id": "state_modifiers",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Enabled",
                      "value": Object {
                        "disabled": false,
                        "loader": false,
                        "loading": false,
                      },
                    },
                    Object {
                      "name": "Loading",
                      "value": Object {
                        "disabled": true,
                        "loader": true,
                        "loading": true,
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "tab": "Link",
            "title": "Link button",
          },
        ],
        "id": "overviewButtons",
        "tabsId": "overviewButtonsTabs",
      }
    }
  />
</section>
`;

exports[`Documentation: Buttons renders 1`] = `
<DocContainer
  docToc={true}
>
  <p
    className="lead"
  >
    Buttons communicate actions that users can take. Buttons are typically placed throughout your UI, in places like: Dialogs, Modals, Forms, Cards and Toolbars.
  </p>
  <Overview />
  <DestructiveButton />
  <ContentGuidelines />
  <CombiningButtons />
  <DeveloperDocumentation />
</DocContainer>
`;
