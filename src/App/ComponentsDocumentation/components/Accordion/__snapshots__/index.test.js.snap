// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components: Accordion ContentGuidelines renders 1`] = `
<section>
  <h2
    id="content-guidelines"
  >
    Content guidelines
  </h2>
  <div
    className="slab slab-plain"
  >
    <div
      className="d-flex flex-column align-items-center py-5"
    >
      <div
        className="accordion show accordion-open w-50"
      >
        <button
          aria-expanded="false"
          className="accordion-header"
          type="button"
        >
          

          Title
        </button>
        <div
          className="accordion-body"
        >
          <div
            className="example-accordion pb-5 mb-3"
          >
            <p
              className="pl-1 pt-1"
            >
              Body
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <ul>
    <li>
      The title in the Accordion header should be as brief as possible while still being clear and descriptive.
    </li>
    <li>
      The Accordion body should contain detailed information related to the title.
    </li>
  </ul>
</section>
`;

exports[`Components: Accordion JavascriptMethods renders 1`] = `
<Fragment>
  <h2
    id="javascript-methods"
  >
    JavaScript methods
  </h2>
  <JavascriptDocs
    close={true}
    componentName="accordion"
    open={true}
  />
  <h4>
    The ID attribute
  </h4>
  <p>
    The 
    <CodeTags
      code="dg.<component_name>.init()"
      type="primary"
    />
     looks for every element with the appropriate component class and then sets up an event listener. If you want to manually call 
    <CodeTags
      code="dg.<component_name>.open();"
      type="primary"
    />
     you will need to set a specific id on the same element that has the root class.
  </p>
  <p>
    The id is placed in the 
    <CodeTags
      code="accordion-body"
      type="secondary"
    />
    , meaning it is this part of the component that opens and closes.
  </p>
</Fragment>
`;

exports[`Components: Accordion Overview renders 1`] = `
<section>
  <h2
    id="overview"
  >
    Overview
  </h2>
  <p>
    Accordions can make information discovery more effective by using progressive disclosure, that is showing the title while hiding the detailed information. They can be used to shorten pages and reduce scrolling when content is not crucial to read in full.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <AccordionComponentExample />,
            "description": <p>
              The accordion component can be either collapsed or expanded. Accordions are by default in the collapsed state with the body content hidden. If a group of accordions are wrapped in a 
              <CodeTags
                code=".accordion-group"
                type="primary"
              />
              , only one will be open at a time.
            </p>,
            "options": Object {
              "checkbox": Array [
                Object {
                  "inputs": Array [
                    Object {
                      "id": "checkbox-accordions",
                      "name": "Open one at a time",
                      "value": Object {
                        "accordionGroup": true,
                      },
                    },
                  ],
                  "title": "Accordion group",
                },
              ],
            },
            "title": "Accordion",
          },
        ],
        "id": "no-tabs",
      }
    }
  />
  <h3>
    How to use Accordions
  </h3>
  <div
    className="row"
  >
    <div
      className="col-lg-6"
    >
      <div
        className="slab slab-plain slab-border-success"
        style={
          Object {
            "height": "85%",
          }
        }
      >
        <h3>
          Do
        </h3>
        <div
          className="d-flex flex-column align-items-center pt-3"
        >
          <Accordion
            className="w-100 show accordion-open"
            id="howToUseAccordions"
            items={
              Array [
                Object {
                  "content": <React.Fragment>
                    <b>
                      Sub section title
                    </b>
                    <p>
                      If you want to, you can replace this text component with a local component to create a table or similar within the Accordion.
                    </p>
                    <b>
                      Sub section title
                    </b>
                    <p>
                      If you want to, you can replace this text component with a local component to create a table or similar within the Accordion.
                    </p>
                  </React.Fragment>,
                  "id": "exp-5",
                  "title": "Accordion title",
                },
              ]
            }
          />
        </div>
      </div>
      <p>
        Body content inside the Accordion may be split into paragraphs and include sub-headers if needed.
      </p>
    </div>
    <div
      className="col-lg-6"
    >
      <div
        className="slab slab-plain slab-border-error"
        style={
          Object {
            "height": "85%",
          }
        }
      >
        <h3>
          Don't
        </h3>
        <div
          className="d-flex flex-column align-items-center pt-3"
        >
          <Accordion
            className="w-100 show accordion-open"
            id="howNotToUseAccordions"
            items={
              Array [
                Object {
                  "content": <React.Fragment>
                    <Accordion
                      className="accordion-open show"
                      items={
                        Array [
                          Object {
                            "content": "Do not use this method",
                            "id": "none",
                            "title": "Sub content",
                          },
                        ]
                      }
                    />
                    <Accordion
                      items={
                        Array [
                          Object {
                            "content": "Do not use this method",
                            "id": "none",
                            "title": "Sub content",
                          },
                        ]
                      }
                    />
                  </React.Fragment>,
                  "id": "exp-6",
                  "title": "Accordion title",
                },
              ]
            }
          />
        </div>
      </div>
      <p>
        Do not put an Accordion inside of another Accordion.
      </p>
    </div>
  </div>
</section>
`;

exports[`Components: Accordion renders 1`] = `
<DocContainer
  docToc={true}
>
  <p
    className="lead"
  >
    Accordions are components that toggles between hiding and showing content
  </p>
  <Overview />
  <ContentGuidelines />
  <JavascriptMethods />
  <NpmInformation
    componentName="accordion"
  />
</DocContainer>
`;
