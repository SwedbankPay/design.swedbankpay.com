// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Documentation: InputGroup BasicExample renders 1`] = `
<Fragment>
  <h2
    id="basic-example"
  >
    Basic example
  </h2>
  <p>
    Add a 
    <CodeTags
      code="<span>"
      type="primary"
    />
     with class 
    <CodeTags
      code=".input-group-addon"
      type="secondary"
    />
     to get a gray box on the left, right or both sides of an 
    <CodeTags
      code="<input>"
      type="primary"
    />
     element. The position of your 
    <CodeTags
      code=".input-group-addon"
      type="secondary"
    />
     depends on if you place it before or after the 
    <CodeTags
      code="<input"
      type="primary"
    />
     element.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <InputGroup
      id="input-id-1"
      label="Name"
      placeholder="Name"
      prefixValue="Mr."
      type="text"
    />
     
    


    <InputGroup
      id="input-id-2"
      label="Email"
      placeholder="Email"
      prefixType="icon"
      prefixValue="email"
      type="text"
    />
     
    


    <InputGroup
      id="input-id-3"
      label="Amount"
      placeholder="Rounded to nearest $"
      postfixValue=".00"
      prefixType="icon"
      prefixValue="attach_money"
      type="number"
    />
     
    


    <InputGroup
      id="input-id-4"
      label="Notes"
      placeholder="Special requests"
      prefixType="icon"
      prefixValue="format_quote"
      type="textarea"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: InputGroup ButtonAddons renders 1`] = `
<Fragment>
  <h2
    id="button-addons"
  >
    Button addons
  </h2>
  <p>
    If you want 
    <CodeTags
      code="<button>"
      type="primary"
    />
    s included with your input elements you can just add a 
    <CodeTags
      code="<button>"
      type="primary"
    />
     inside a input-group like you would anywhere else.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <InputGroup
      postfixBtnColor="primary"
      postfixType="button"
      postfixValue="Button"
      type="text"
    />
     
    


    <InputGroup
      postfixBtnColor="primary"
      postfixType="button"
      postfixValue="Button"
      prefixBtnColor="secondary"
      prefixType="button"
      prefixValue="Button"
      type="text"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: InputGroup CheckboxesAndRadios renders 1`] = `
<Fragment>
  <h2
    id="checkboxes-and-radios"
  >
    Checkboxes and radios
  </h2>
  <p>
    Place any checkbox or radio option within an input groupâ€™s addon instead of text.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <div
      className="form-group"
    >
      <div
        className="input-group"
      >
        

        <span
          className="input-group-addon"
        >
          
		
          <input
            type="checkbox"
          />
          
	
        </span>
        

        <input
          className="form-control"
          type="text"
        />
        

      </div>
    </div>
    


    <div
      className="form-group"
    >
      <div
        className="input-group"
      >
        

        <span
          className="input-group-addon"
        >
          
		
          <input
            type="radio"
          />
          
	
        </span>
        

        <input
          className="form-control"
          type="text"
        />
        

      </div>
    </div>
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: InputGroup Disabled renders 1`] = `
<Fragment>
  <h2
    id="disabled"
  >
    Disabled
  </h2>
  <p>
    Just like for forms you can add 
    <CodeTags
      code="disabled"
      type="secondary"
    />
     to an input element to disable it. If you are going to disable an element in a 
    <CodeTags
      code=".input-group"
      type="secondary"
    />
     make sure to also add the 
    <CodeTags
      code="disabled"
      type="secondary"
    />
     attribute to the buttons.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <InputGroup
      disabled={true}
      id="input-id-3"
      label="Amount"
      placeholder="Rounded to nearest $"
      postfixValue=".00"
      prefixType="icon"
      prefixValue="attach_money"
      type="number"
    />
    <InputGroup
      disabled={true}
      postfixBtnColor="primary"
      postfixType="button"
      postfixValue="Button"
      prefixBtnColor="secondary"
      prefixType="button"
      prefixValue="Button"
      type="text"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: InputGroup ValidationStates renders 1`] = `
<Fragment>
  <h2
    id="validation-states"
  >
    Validation states
  </h2>
  <p>
    You can also visualize validation on your input-groups. Just add 
    <CodeTags
      code=".has-success"
      type="secondary"
    />
     or 
    <CodeTags
      code=".has-error"
      type="secondary"
    />
     with a 
    <CodeTags
      code=".input-group"
      type="secondary"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <InputGroup
      defaultValue="Smith"
      placeholder="Name"
      prefixValue="Agent"
      type="text"
      validationState="error"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: InputGroup WithFeedbackIcon renders 1`] = `
<Fragment>
  <h2
    id="with-feedback"
  >
    With feedback
  </h2>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <InputGroup
      feedbackIcon="cancel"
      id="input-with-feedback-1"
      label="Name"
      placeholder="Name"
      prefixValue="Mr."
      type="text"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: InputGroup WithSelect renders 1`] = `
<Fragment>
  <h2
    id="with-select"
  >
    With select
  </h2>
  <p>
    Inserting text next to a 
    <CodeTags
      code="<select>"
      type="primary"
    />
     works just like any other input element.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <InputGroup
      prefixValue="Profession"
      selectOptions={
        Array [
          "Bounty hunter",
          "Smuggler",
          "Jedi",
        ]
      }
      type="select"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: InputGroup renders 1`] = `
<DocContainer
  docToc={true}
>
  <p
    className="lead"
  >
    You can include additional information to specific input elements by adding 
    <CodeTags
      code="<span>"
      type="primary"
    />
    s or 
    <CodeTags
      code="<button>"
      type="primary"
    />
    s in a 
    <CodeTags
      code=".input-group"
      type="secondary"
    />
    .
  </p>
  <BasicExample />
  <ButtonAddons />
  <WithSelect />
  <ValidationStates />
  <Disabled />
</DocContainer>
`;
