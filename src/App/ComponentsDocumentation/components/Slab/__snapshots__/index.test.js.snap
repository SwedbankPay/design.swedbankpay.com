// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components: Slab OverviewSlab renders 1`] = `
<section
  id="slab-doc"
>
  <h2
    id="default-slab"
  >
    Overview
  </h2>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <Slab />,
            "description": "The slab component is a content frame that is used as a graphic element background in order to display different types of content on its surface. By adding drop shadows it gets more noticeable and adds depth and emphasis to the design, creating an image of floating UI elements.",
            "options": Object {
              "radio": Array [
                Object {
                  "id": "shadow-type",
                  "title": "Shadow type",
                  "values": Array [
                    Object {
                      "name": "Drop shadow 15%",
                      "value": Object {
                        "darkShadow": false,
                        "noShadow": false,
                      },
                    },
                    Object {
                      "name": "Drop shadow 25%",
                      "value": Object {
                        "darkShadow": true,
                        "noShadow": false,
                      },
                    },
                    Object {
                      "name": "Without shadow",
                      "value": Object {
                        "darkShadow": false,
                        "noShadow": true,
                      },
                    },
                  ],
                },
              ],
            },
            "title": "Overview slabs",
          },
        ],
        "id": "overviewSlabs",
      }
    }
  />
  <h3>
    Things to consider
  </h3>
  <ul
    className="list list-bullet"
  >
    <li>
      When combining other components with the slab, one must consider how the slab\`s border-radius affects the edges of the on-top placed component.
    </li>
    <li>
      When using a slab component, the border-radius could differ for different devices and sizes. Border-radius always requires to be adjusted accordingly to the dimensions.
    </li>
  </ul>
  <h3>
    How to adjust slab radius
  </h3>
  <div
    className="row"
  >
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-success pb-1"
      >
        <h4
          className="mb-3 mt-0"
        >
          Do
        </h4>
        <div
          className="d-flex justify-content-center mt-3 mb-3"
        >
          <img
            alt="A slab with a smaller slab inside of it. Their border-radius values are equal, the padding size is therefore not consistent."
            className="img-fluid"
            src="/TEST/img/documentation/slab/do-nested-slabs.png"
          />
        </div>
      </div>
    </div>
    <div
      className="col-lg-6 col-sm-12"
    >
      <div
        className="slab slab-plain slab-border-error pb-1"
      >
        <h4>
          Don't
        </h4>
        <div
          className="d-flex justify-content-center mt-3 mb-3"
        >
          <img
            alt="A slab with a smaller slab inside of it. Their border-radius value are not equal, which makes the padding consistent."
            className="img-fluid"
            src="/TEST/img/documentation/slab/dont-nested-slabs.png"
          />
        </div>
      </div>
    </div>
  </div>
  <br />
  <div>
    When using a smaller slab in a slab component, in that case, the inner slab needs to adjust its border-radius accordingly in order for the padding between the slabs to remain relevant and consistent.
  </div>
  <h3>
    New design
  </h3>
  <p
    className="list"
  >
    This is a breaking change regarding the visuals of the component. If necessary, 
    <CodeTags
      code=".slab-edges"
      type="secondary"
    />
     will sharpen the corners and make it look like the old design.
  </p>
</section>
`;

exports[`Components: Slab SlabArrow renders 1`] = `
<section
  id="slab-arrow"
>
  <h2
    id="slab-arrow"
  >
    Slab arrow
  </h2>
  <p>
    <CodeTags
      code=".slab-arrow"
      type="secondary"
    />
     inherits the color from the slab it is appended to.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <div
      className="slab slab-arrow"
    >
      <p>
        This slab has some connection to the content above.
      </p>
    </div>
  </ComponentPreview>
</section>
`;

exports[`Components: Slab renders 1`] = `
<DocContainer>
  <p
    className="lead"
  >
    Slabs are container components, therefore it works with whatever you want to put in it.
  </p>
  <OverviewSlab />
  <SlabArrow />
  <SlabColors />
</DocContainer>
`;
