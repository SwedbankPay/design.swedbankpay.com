// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Documentation: Datepickers AboutDatepickers renders 1`] = `
<Fragment>
  <h2
    id="about-datepickers"
  >
    About
  </h2>
  <p>
    Datepickers give a visual presentation of days, months and years. By utilizing the datepicker you can be assured the given input is in the format you expect without having to deal with too much client-side validation. Datepickers should be used for recent dates to avoid having the user click a lot of times to find the required date. If you need a date of birth or something similarly far back, an input field with proper validation will be easier to use.
  </p>
</Fragment>
`;

exports[`Documentation: Datepickers AllowInput renders 1`] = `
<Fragment>
  <h2
    id="allow-input"
  >
    Allow input
  </h2>
  <p>
    By default datepickers do not allow input but you can use 
    <CodeTags
      code="data-datepicker-allowinput"
      type="secondary"
    />
    . When you allow input then the given date has to match the datepicker format (
    <CodeTags
      code="iso8601"
      type="secondary"
    />
     if you have not specified a format).
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      allowinput={true}
      id="simple-datepicker"
      label="Date"
      prefixType="icon"
      prefixValue="event"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers CustomFormat renders 1`] = `
<Fragment>
  <h2
    id="custom-format"
  >
    Custom format
  </h2>
  <p>
    To use a custom format include 
    <CodeTags
      code="data-datepicker-format=\\"[nb|sv|da|fi|en|iso8601(default)]\\""
      type="secondary"
    />
    . If no format is provided then datepicker will default to 
    <CodeTags
      code="iso8601"
      type="secondary"
    />
    . Same behaviour applies if you try to set an invalid date.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      id="nb-datepicker"
      label="nb (norwegian):"
      prefixType="icon"
      prefixValue="event"
      value="28.12.1972"
    />
    <Datepicker
      format="sv"
      id="sv-datepicker"
      label="sv (swedish):"
      prefixType="icon"
      prefixValue="event"
      value="1972-12-28"
    />
    <Datepicker
      format="da"
      id="da-datepicker"
      label="da (danish):"
      prefixType="icon"
      prefixValue="event"
      value="28.12.1972"
    />
    <Datepicker
      format="fi"
      id="fi-datepicker"
      label="fi (finnish):"
      prefixType="icon"
      prefixValue="event"
      value="28.12.1972"
    />
    <Datepicker
      format="en"
      id="en-datepicker"
      label="en (english):"
      prefixType="icon"
      prefixValue="event"
      value="28/12/1972"
    />
    <Datepicker
      format="iso8601"
      id="iso8601-datepicker"
      label="iso8601 (robotic):"
      prefixType="icon"
      prefixValue="event"
      value="1972-12-28"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers DateRange renders 1`] = `
<Fragment>
  <h2
    id="date-range"
  >
    Date range
  </h2>
  <p>
    You can make it possible to select a range of dates with 
    <CodeTags
      code="data-datepicker-mode=\\"range\\""
      type="secondary"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      id="date-range-datepicker"
      label="date"
      min="10.12.1972"
      mode="range"
      prefixType="icon"
      prefixValue="event"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers HumanReadable renders 1`] = `
<Fragment>
  <h2
    id="human-readable"
  >
    Human readable date
  </h2>
  <p>
    If you wish to make the date more readable to humans you can add 
    <CodeTags
      code="data-datepicker-fulldate=\\"true\\""
      type="secondary"
    />
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      fulldate={true}
      id="init-value-datepicker"
      label="Date"
      prefixType="icon"
      prefixValue="event"
      value="1972-12-28"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers IncludeTime renders 1`] = `
<Fragment>
  <h2
    id="include-time"
  >
    Include time
  </h2>
  <p>
    Adding time to your datepicker is as easy as using 
    <CodeTags
      code="data-datepicker-time=\\"true\\" "
      type="secondary"
    />
    . If you wish to set a default time for the time picker just include it in the 
    <CodeTags
      code="data-datepicker-value"
      type="secondary"
    />
     attribute.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      id="include-time-datepicker"
      label="Date"
      prefixType="icon"
      prefixValue="event"
      time={true}
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers InitialValue renders 1`] = `
<Fragment>
  <h2
    id="initial-value"
  >
    Initial value
  </h2>
  <p>
    If you want to set an initial value for your datepicker use 
    <CodeTags
      code="data-datepicker-value=\\"{your-date}\\""
      type="secondary"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      id="init-value-datepicker"
      label="Date"
      prefixType="icon"
      prefixValue="event"
      value="1972-12-28"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers JavascriptMethods renders 1`] = `
<Fragment>
  <h2
    id="javascript-methods"
  >
    JavaScript methods
  </h2>
  <JavascriptDocs
    close={true}
    componentName="datepicker"
    open={true}
  />
</Fragment>
`;

exports[`Documentation: Datepickers MultipleDates renders 1`] = `
<Fragment>
  <h2
    id="multiple-dates"
  >
    Multiple dates
  </h2>
  <p>
    Set 
    <CodeTags
      code="data-datepicker-mode"
      type="secondary"
    />
     to 
    <CodeTags
      code="multiple"
      type="secondary"
    />
     for multiple date selection.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      id="date-range-datepicker"
      label="date"
      min="10.12.1972"
      mode="multiple"
      prefixType="icon"
      prefixValue="event"
    />
  </ComponentPreview>
  <Alert
    type="warning"
  >
    <h5>
      Max number of dates
    </h5>
    <p>
      The 
      <CodeTags
        code="multiple"
        type="secondary"
      />
       variation of datepicker does not have an upper limit of dates. Use 
      <NavHashLink
        to="#date-range"
      >
        range
      </NavHashLink>
       if you want to select a continuous range of dates.
    </p>
  </Alert>
</Fragment>
`;

exports[`Documentation: Datepickers Options renders 1`] = `
<Fragment>
  <h2
    id="available-options"
  >
    Available options
  </h2>
  <p>
    Options available through 
    <CodeTags
      code="data-datepicker"
      type="secondary"
    />
    ...
  </p>
   Keep in mind that setting any of these values will render them true, so setting an attribute to 
  <CodeTags
    code="false"
    type="secondary"
  />
   will still render it true.
  <table
    className="table table-striped"
  >
    <thead>
      <tr>
        <th>
          Attribute
        </th>
        <th>
          Default value
        </th>
        <th>
          Description
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-value"
            type="secondary"
          />
        </td>
        <td>
          <CodeTags
            code="null"
            type="secondary"
          />
        </td>
        <td>
          Value used to initialize calendar. Set this value with the same format currently set for the datepicker (including time if you have enabled that).
        </td>
      </tr>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-allowinput"
            type="secondary"
          />
        </td>
        <td />
        <td>
          This allows the user to write in the input field. The dates given must match the format of the datepicker.
        </td>
      </tr>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-format"
            type="secondary"
          />
        </td>
        <td>
          <CodeTags
            code="iso8601"
            type="secondary"
          />
        </td>
        <td>
          <p>
            Format string used for the input field and names for days and months. All have the same time format (HH:mm), and starts the week on monday (1).
          </p>
          <p>
            The following options are available:
          </p>
          <ul
            className="list"
          >
            <li
              className="mb-sm"
            >
              <CodeTags
                code="nb"
                type="secondary"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <CodeTags
                code="sv"
                type="secondary"
              />
              : YYYY-MM-DD
            </li>
            <li
              className="mb-sm"
            >
              <CodeTags
                code="da"
                type="secondary"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <CodeTags
                code="fi"
                type="secondary"
              />
              : DD.MM.YYYY
            </li>
            <li
              className="mb-sm"
            >
              <CodeTags
                code="en"
                type="secondary"
              />
              : DD/MM/YYYY
            </li>
            <li
              className="mb-sm"
            >
              <CodeTags
                code="iso8601"
                type="secondary"
              />
              : YYYY-MM-DD (default)
            </li>
          </ul>
        </td>
      </tr>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-time"
            type="secondary"
          />
        </td>
        <td>
          <CodeTags
            code="false"
            type="secondary"
          />
        </td>
        <td>
          If the calendar shows the current time and allows you to change it using a dropdown.
        </td>
      </tr>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-months"
            type="secondary"
          />
        </td>
        <td>
          <CodeTags
            code="1"
            type="secondary"
          />
        </td>
        <td>
          Number of months to display in the datepicker.
        </td>
      </tr>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-min"
            type="secondary"
          />
        </td>
        <td>
          <CodeTags
            code="null"
            type="secondary"
          />
        </td>
        <td>
          Disallow dates before min.
        </td>
      </tr>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-max"
            type="secondary"
          />
        </td>
        <td>
          <CodeTags
            code="null"
            type="secondary"
          />
        </td>
        <td>
          Disallow dates past max.
        </td>
      </tr>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-altinput"
            type="secondary"
          />
        </td>
        <td />
        <td>
          Use a custom format to display the selected date(s) shown in the input field.
        </td>
      </tr>
      <tr>
        <td>
          <CodeTags
            code="data-datepicker-mode"
            type="secondary"
          />
        </td>
        <td>
          <CodeTags
            code="single"
            type="secondary"
          />
        </td>
        <td>
          Different variations of date selection. Available options are:
          <ul
            className="list"
          >
            <li
              className="mb-sm"
            >
              <CodeTags
                code="single"
                type="secondary"
              />
              User can select one date
            </li>
            <li
              className="mb-sm"
            >
              <CodeTags
                code="multiple"
                type="secondary"
              />
              User can select multiple dates
            </li>
            <li
              className="mb-sm"
            >
              <CodeTags
                code="range"
                type="secondary"
              />
              User can select a range of continuous dates
            </li>
          </ul>
        </td>
      </tr>
    </tbody>
  </table>
</Fragment>
`;

exports[`Documentation: Datepickers ShowingMultipleMonths renders 1`] = `
<Fragment>
  <h2
    id="showing-multiple-months"
  >
    Showing multiple months
  </h2>
  <p>
    If you need to show more than one month in your date picker use the attribute 
    <CodeTags
      code="data-datepicker-months=\\"{number}\\""
      type="secondary"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      id="multiple-months-datepicker"
      label="Date"
      months="2"
      prefixType="icon"
      prefixValue="event"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers SimpleDatepicker renders 1`] = `
<Fragment>
  <h2
    id="simple-datepicker"
  >
    Simple datepicker
  </h2>
  <p>
    A basic datepicker can be made by applying the attribute 
    <CodeTags
      code="data-datepicker"
      type="secondary"
    />
     to an input element inside a 
    <CodeTags
      code=".form-group"
      type="secondary"
    />
    . The basic datepicker has a read-only input field.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      id="simple-datepicker"
      label="Date"
      prefixType="icon"
      prefixValue="event"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers ValidDates renders 1`] = `
<Fragment>
  <h2
    id="valid-dates"
  >
    Valid dates
  </h2>
  <p>
    You can set a range of available dates to select from by using 
    <CodeTags
      code="data-datepicker-min"
      type="secondary"
    />
     and 
    <CodeTags
      code="data-datepicker-max"
      type="secondary"
    />
    .
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
  >
    <Datepicker
      format="nb"
      id="valid-dates-datepicker"
      label="Date"
      max="10.05.2017"
      min="28.12.1972"
      prefixType="icon"
      prefixValue="event"
      value="28.12.1972"
    />
  </ComponentPreview>
</Fragment>
`;

exports[`Documentation: Datepickers renders 1`] = `
<DocContainer
  docToc={true}
>
  <p
    className="lead"
  >
    Datepickers makes it easy to get dates from your users. With datepickers you do not have to worry about how your users write the given date, alleviating the need to do format validation.
  </p>
  <AboutDatepickers />
  <SimpleDatepicker />
  <AllowInput />
  <HumanReadable />
  <InitialValue />
  <CustomFormat />
  <IncludeTime />
  <ShowingMultipleMonths />
  <ValidDates />
  <DateRange />
  <MultipleDates />
  <Options />
  <JavascriptMethods />
</DocContainer>
`;
