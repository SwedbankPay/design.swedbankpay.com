// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: Select ContentGuidelines renders 1`] = `
<section>
  <h2
    id="content-guidelines"
  >
    Content guidelines
  </h2>
  <div
    className="d-flex justify-content-center slab slab-plain px-5 pt-5 pb-4"
  >
    <div
      className="form-group"
    >
      

      <label
        htmlFor="content-guidelines-example"
      >
        Label
      </label>
      

      <select
        className="form-control"
        defaultValue=""
        disabled={null}
        id="content-guidelines-example"
        readOnly={null}
        required={null}
      >
        
		
        <option
          value="Related option"
        >
          Related option
        </option>
        
	
      </select>
      

      <p
        className="hint-text"
        id="hint-text"
      >
        Hint text
      </p>
      

    </div>
  </div>
  <ul
    className="pl-3"
  >
    <li>
      The 
      <b>
        Label
      </b>
       should be short, concise and clearly describe what the user is selecting. If the user is not required to select an option, label it as “optional”.
    </li>
    <li>
      The 
      <b>
        Placeholder text
      </b>
       should begin with the verb "Select.." preferably followed by what type of options the user is choosing from.
    </li>
    <li>
      A 
      <b>
        hint text
      </b>
       can be used to complement the label and provide clarifying details. If the information is long or won't be needed by the majority of users, a hint expander can be used instead of a text that is visible by default. 
    </li>
  </ul>
</section>
`;

exports[`Component: Select DeveloperDocumentation renders 1`] = `
<section>
  <h2
    id="developer-documentation"
  >
    Developer documentation
  </h2>
  <section>
    <h3>
      Error state
    </h3>
    <p>
      If the user don’t select any option in a select that is required to be filled, an error message should be displayed. To display the error message, add the 
      <code
        className="code-tags code-tags-secondary"
      >
        .has-error
      </code>
       class to the parent element, then add the 
      <code
        className="code-tags code-tags-secondary"
      >
        .help-block
      </code>
       element as the last child with the error message.
    </p>
    <div
      className="showcase-panel"
    >
      <form
        className="no-pointer-events"
      >
        <div
          className="form-group has-error"
        >
          

          <label
            htmlFor="dev-doc-example"
          >
            

            Label
            

          </label>
          

          <select
            className="form-control"
            defaultValue="placeholder"
            id="dev-doc-example"
            required={true}
          >
            

            <option
              disabled={true}
              hidden={true}
              value="placeholder"
            >
              Select option
            </option>
            

          </select>
          <div
            className="help-block"
          >
            Descriptive helpful error message
          </div>
        </div>
      </form>
    </div>
    <figure>
      <div
        className="code-view"
      >
        <header
          className="code-view-header"
        >
          HTML
          <button
            aria-describedby="tooltipCopy"
            className="tooltip"
            onClick={[Function]}
          >
            <i
              className="material-icons-outlined"
            >
              content_copy
            </i>
            <div
              id="tooltipCopy"
              role="tooltip"
            >
              Copy to clipboard
            </div>
          </button>
        </header>
        <table
          className="code-view-table"
        >
          <tbody>
            <tr>
              <td
                className="code-view-numbers"
              >
                <pre>
                  1
                  

                  2
                  

                  3
                  

                  4
                  

                  5
                  

                  6
                  

                  7
                  

                  8
                  

                  9
                  

                  10
                  

                  11
                  

                </pre>
              </td>
              <td
                className="code-view-code"
              >
                <pre>
                  &lt;form class="no-pointer-events"&gt;
                  

                      &lt;div class="form-group has-error"&gt;
                  

                          &lt;label for="dev-doc-example"&gt;
                  

                              Label
                  

                          &lt;/label&gt;
                  

                          &lt;select class="form-control" id="dev-doc-example" required&gt;
                  

                              &lt;option value="placeholder" disabled hidden selected&gt;Select option&lt;/option&gt;
                  

                          &lt;/select&gt;
                  

                          &lt;div class="help-block"&gt;Descriptive helpful error message&lt;/div&gt;
                  

                      &lt;/div&gt;
                  

                  &lt;/form&gt;
                  

                </pre>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </figure>
  </section>
  <section>
    <h3>
      Disabled state
    </h3>
    <p>
      Disable a select by adding the 
      <code
        className="code-tags code-tags-primary"
      >
        disabled
      </code>
       attribute to the desired select and the 
      <code
        className="code-tags code-tags-primary"
      >
        form-group
      </code>
       where the select resides.
    </p>
    <div
      className="showcase-panel"
    >
      <div
        className="form-group disabled"
      >
        

        <label
          htmlFor="disabled-state-example"
        >
          Label
        </label>
        

        <select
          className="form-control"
          defaultValue=""
          disabled={true}
          id="disabled-state-example"
          readOnly={null}
          required={null}
        >
          
		
          
	
        </select>
        

      </div>
    </div>
    <figure>
      <div
        className="code-view"
      >
        <header
          className="code-view-header"
        >
          HTML
          <button
            aria-describedby="tooltipCopy"
            className="tooltip"
            onClick={[Function]}
          >
            <i
              className="material-icons-outlined"
            >
              content_copy
            </i>
            <div
              id="tooltipCopy"
              role="tooltip"
            >
              Copy to clipboard
            </div>
          </button>
        </header>
        <table
          className="code-view-table"
        >
          <tbody>
            <tr>
              <td
                className="code-view-numbers"
              >
                <pre>
                  1
                  

                  2
                  

                  3
                  

                  4
                  

                  5
                  

                  6
                  

                </pre>
              </td>
              <td
                className="code-view-code"
              >
                <pre>
                  &lt;div class="form-group disabled"&gt;
                  

                      &lt;label for="disabled-state-example"&gt;Label&lt;/label&gt;
                  

                      &lt;select class="form-control" disabled id="disabled-state-example"&gt;
                  

                  

                      &lt;/select&gt;
                  

                  &lt;/div&gt;
                  

                </pre>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </figure>
  </section>
  <section>
    <h3>
      Javascript methods
    </h3>
    <p>
      <code
        className="code-tags code-tags-secondary"
      >
        dg.hintTextExpander.init()
      </code>
       can be used to initialize all Hint text expanders. Or 
      <code
        className="code-tags code-tags-secondary"
      >
        dg.hintTextExpander.init(&lt;hint-text-expander-id&gt;)
      </code>
       to initialize a specific one.
    </p>
  </section>
</section>
`;

exports[`Component: Select Overview renders 1`] = `
<section>
  <h2
    id="overview"
  >
    Overview
  </h2>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <InputGroup
              hintExpander={true}
              id="select-showcase-example"
              label="Label"
              placeholder="Select option"
              selectOptions={
                Array [
                  "Blueberry",
                  "Blackberry",
                  "Berryberry",
                ]
              }
              type="select"
            />,
            "description": "The select component looks similar to an input field but works differently. When activated it expands and displays a list of selectable options.",
            "options": Object {
              "checkbox": Array [
                Object {
                  "inputs": Array [
                    Object {
                      "id": "optional",
                      "name": "Is optional",
                      "value": Object {
                        "optional": true,
                      },
                    },
                    Object {
                      "id": "hint_text_select",
                      "name": "Hint text",
                      "value": Object {
                        "helpBlock": "Hint text",
                        "hintTextId": "select-hint-text-example",
                      },
                    },
                    Object {
                      "id": "hint_expander",
                      "name": "Expander hint",
                      "value": Object {
                        "expanderId": "expander-showcase",
                        "expandingHintTitle": "Expanding hint text",
                      },
                    },
                  ],
                  "title": "Label add on",
                },
              ],
              "radio": Array [
                Object {
                  "id": "state_radio",
                  "title": "State modifiers",
                  "values": Array [
                    Object {
                      "name": "Default",
                      "value": Object {
                        "disabled": false,
                      },
                    },
                    Object {
                      "name": "Error",
                      "value": Object {
                        "errorMessage": "Descriptive helpful error message.",
                        "required": true,
                      },
                    },
                    Object {
                      "name": "Disabled",
                      "value": Object {
                        "disabled": true,
                      },
                    },
                  ],
                },
              ],
            },
            "title": "Select",
          },
        ],
        "id": "no-tabs",
      }
    }
  />
  <Alert
    icon="info"
    id="input-group-info"
    text={
      <p>
        <b>
          Styling: 
        </b>
        The Select component is part of the input group. Therefore, be sure to import the input-group style file to give your Select the appropriate styling.
      </p>
    }
    type="informative"
  />
  <h3>
    When to consider something else
  </h3>
  <WhenToUse />
</section>
`;

exports[`Component: Select When to use renders 1`] = `
<Fragment>
  <p>
    The select component should be used sparsely, often times there are better and more intuitive ways to present choices for the user.
  </p>
  <div
    className="row how-to-use mb-3"
  >
    <div
      className="col-12 col-sm-6"
    >
      <div
        className="slab slab-plain slab-border-success"
      >
        <span
          className="h3 d-block mb-3"
        >
          Do
        </span>
        <div
          className="mb-1"
        >
          <p
            className="mb-2"
          >
            Background color
          </p>
          <Radio
            checked={true}
            id="radio-example-1"
            label="Blue"
            name="radio-example"
          />
          <Radio
            id="radio-example-2"
            label="Red"
            name="radio-example"
          />
        </div>
      </div>
    </div>
    <div
      className="col-12 col-sm-6"
    >
      <div
        className="slab slab-plain slab-border-error"
      >
        <span
          className="h3 d-block mb-3"
        >
          Don't
        </span>
        <div>
          <InputGroup
            id="dont-example-0"
            label="Background color"
            placeholder="Select color"
            selectOptions={
              Array [
                "Blue",
                "Red",
              ]
            }
            type="select"
          />
        </div>
      </div>
    </div>
  </div>
  <p
    className="mb-4"
  >
    In the example above, when there are very few choices, they should not be hidden inside a select list as this makes it harder for user to get an overview. Use 
    <Link
      to="/components/radio-button"
    >
      radio buttons
    </Link>
     instead.
  </p>
  <div
    className="row how-to-use mb-3"
  >
    <div
      className="col-12 col-sm-6"
    >
      <div
        className="slab slab-plain slab-border-success"
      >
        <span
          className="h3 d-block mb-3"
        >
          Do
        </span>
        <Datepicker
          id="datepicker-example"
          label="Birthday"
          placeholder="YYYY-MM-DD"
          prefixType="icon"
          prefixValue="event"
        />
      </div>
    </div>
    <div
      className="col-12 col-sm-6"
    >
      <div
        className="slab slab-plain slab-border-error"
      >
        <span
          className="h3 d-block mb-3"
        >
          Don't
        </span>
        <div>
          <InputGroup
            id="dont-example-1"
            label="Day"
            placeholder="Select day"
            selectOptions={
              Array [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
              ]
            }
            type="select"
          />
        </div>
      </div>
    </div>
  </div>
  <p
    className="mb-4"
  >
    Instead of using a dropdown input for selecting a day of the month. It is better to use a 
    <Link
      to="/components/datepickers"
    >
      datepicker
    </Link>
     to let user select the right date faster.
  </p>
  <div
    className="row how-to-use mb-3"
  >
    <div
      className="col-12 col-sm-6"
    >
      <div
        className="slab slab-plain slab-border-success"
      >
        <span
          className="h3 d-block mb-3"
        >
          Do
        </span>
        <InputGroup
          id="select-do-example"
          label="Number of drinks"
          placeholder="4"
          type="text"
        />
      </div>
    </div>
    <div
      className="col-12 col-sm-6"
    >
      <div
        className="slab slab-plain slab-border-error"
      >
        <span
          className="h3 d-block mb-3"
        >
          Don't
        </span>
        <div>
          <InputGroup
            id="dont-example-2"
            label="Number of drinks"
            placeholder="Select number"
            selectOptions={
              Array [
                1,
                2,
                3,
                4,
              ]
            }
            type="select"
          />
        </div>
      </div>
    </div>
  </div>
  <p
    className="mb-4"
  >
    Instead of using a dropdown input that will force the user to choose from a set of predefined options it is sometimes better to use an 
    <Link
      to="/components/input-field"
    >
      input field
    </Link>
     where the user can type their answer.
  </p>
</Fragment>
`;

exports[`Component: Select renders 1`] = `
<DocContainer>
  <section
    id="select-doc"
  >
    <p
      className="lead"
    >
      The select component is used in forms and allows the user to select a desired value. When activated the component expands and presents a scrollable list of pre-defined options which user can choose from.
    </p>
    <Overview />
    <ContentGuidelines />
    <DeveloperDocumentation />
  </section>
</DocContainer>
`;
