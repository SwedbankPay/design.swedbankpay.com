// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components: Sidebar DeveloperDocumentation renders 1`] = `
<section>
  <h2
    id="developer-documentation"
  >
    Developer Documentation
  </h2>
  <p>
    <b>
      Note:
    </b>
     If used with a sticky topbar, add class 
    <CodeTags
      code=".sidebar-topbar-sticky"
      type="secondary"
    />
    , 
    <CodeTags
      code=".topbar-min-{breakpoint}-sticky"
      type="secondary"
    />
    , or 
    <CodeTags
      code=".topbar-max-{breakpoint}-sticky"
      type="secondary"
    />
     depending on the class of the sticky topbar, to the outmost 
    <CodeTags
      code="<div>"
      type="primary"
    />
     of the sidebar.
  </p>
  <section>
    <h3>
      Infinite depth
    </h3>
    <section>
      <h4>
        Deeper?
      </h4>
      <p>
        To create four levels and more, inside 
        <CodeTags
          code=".secondary-nav-li.leaf"
          type="secondary"
        />
        , insert a 
        <CodeTags
          code="<ul>"
          type="primary"
        />
        , containing 
        <CodeTags
          code="a.previous-nav"
          type="secondary"
        />
        , followed by a 
        <CodeTags
          code="<header>"
          type="primary"
        />
        , then the next 
        <CodeTags
          code="<li>"
          type="primary"
        />
        -elements. Repeat this pattern into eternity.
      </p>
      <ComponentPreview
        codeFigure={true}
        language="html"
      >
        <li
          className="secondary-nav-li leaf"
        >
          

          <a
            href="#"
          >
            Li title
          </a>
          

          <ul>
            

            <a
              className="previous-nav"
              href="#"
            >
              

              <i
                aria-hidden="true"
                className="material-icons"
              >
                arrow_back_ios
              </i>
              

              <span>
                Back to Previous
              </span>
              

            </a>
            <header>
              Icon Title
            </header>
            <li
              className="leaf"
            >
              

              <a
                href="#"
              >
                Li title
              </a>
              

              {*
               Continue the pattern here 
              *}
            </li>
          </ul>
        </li>
      </ComponentPreview>
    </section>
    <section>
      <h4>
        Deep enough?
      </h4>
      <p>
        Replace the 
        <CodeTags
          code=".leaf"
          type="secondary"
        />
         class with 
        <CodeTags
          code=".group"
          type="secondary"
        />
        . And the last 
        <CodeTags
          code="<li>"
          type="primary"
        />
        's should have 
        <CodeTags
          code=".nav-leaf"
          type="secondary"
        />
      </p>
      <ComponentPreview
        codeFigure={true}
        language="html"
      >
        <li
          className="group"
        >
          

          <a
            href="#"
          >
            Li title
          </a>
          

          <ul>
            

            <li
              className="nav-leaf"
            >
              

              <a
                href="#"
              >
                Li title
              </a>
              

            </li>
            <li
              className="nav-leaf"
            >
              

              <a
                href="#"
              >
                Li title
              </a>
              

            </li>
            <li
              className="nav-leaf"
            >
              

              <a
                href="#"
              >
                Li title
              </a>
              

            </li>
          </ul>
        </li>
      </ComponentPreview>
    </section>
  </section>
  <section>
    <h3>
      JavaScript methods
    </h3>
    <p
      className="pl-3 mb-0"
    >
      <b>
        Note:
      </b>
       The sidebar should be initialized with ID
    </p>
    <JavascriptDocs
      componentName="sidebar"
      others={
        Array [
          [Function],
          [Function],
          [Function],
          [Function],
        ]
      }
    />
  </section>
</section>
`;

exports[`Components: Sidebar InitScrollListener renders 1`] = `
<section>
  <JavascriptDocElement
    code={
      <CodeTags
        code="dg.sidebar.initScrollListener(<sidebar-id>, content-id, header-type)"
        type="secondary"
      />
    }
    description={
      <React.Fragment>
        Note: This method is optional
        <br />
        <br />
        Makes the 
         with id 
        <CodeTags
          code="<sidebar-id>"
          type="secondary"
        />
         listen to scroll events on the element with id 
        <CodeTags
          code="content-id"
          type="secondary"
        />
        , and matches a leaf with the corresponding header of 
        <CodeTags
          code="header-type"
          type="secondary"
        />
         to visualize active leaf depending on scroll position of element with id 
        <CodeTags
          code="content-id"
          type="secondary"
        />
        .
      </React.Fragment>
    }
  />
</section>
`;

exports[`Components: Sidebar Overview renders 1`] = `
<section
  id="sidebar-overview"
>
  <h2
    id="overview"
  >
    Overview
  </h2>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <div
              className="container-fluid"
            >
              <div
                className="row"
              >
                <Sidebar
                  id="dg-sidebar"
                  navList={
                    Array [
                      Object {
                        "icon": <i
                          aria-hidden="true"
                          className="material-icons-outlined"
                        >
                          home
                        </i>,
                        "title": "Home Page",
                      },
                      Object {
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                            ],
                            "group": true,
                            "title": "Second level (li.group)",
                          },
                          Object {
                            "children": Array [
                              Object {
                                "title": "Third level",
                              },
                              Object {
                                "children": Array [
                                  Object {
                                    "title": "Fourth level",
                                  },
                                  Object {
                                    "children": Array [
                                      Object {
                                        "title": "Fifth level",
                                      },
                                      Object {
                                        "children": Array [
                                          Object {
                                            "title": "Sixth level (li.nav-leaf)",
                                          },
                                          Object {
                                            "title": "Sixth level (li.nav-leaf)",
                                          },
                                        ],
                                        "group": true,
                                        "title": "Fifth level",
                                      },
                                    ],
                                    "title": "Fourth level",
                                  },
                                ],
                                "title": "Third level",
                              },
                            ],
                            "title": "Second level (li.leaf)",
                          },
                        ],
                        "icon": <i
                          aria-hidden="true"
                          className="material-icons-outlined"
                        >
                          play_circle_outline
                        </i>,
                        "title": "Get started",
                      },
                      Object {
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                            ],
                            "group": true,
                            "title": "li.group",
                          },
                          Object {
                            "children": Array [
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                            ],
                            "group": true,
                            "title": "li.group",
                          },
                        ],
                        "icon": <i
                          aria-hidden="true"
                          className="material-icons-outlined"
                        >
                          expand_circle_down
                        </i>,
                        "title": "Group",
                      },
                    ]
                  }
                />
                <main
                  className="col main-content"
                >
                  Main content things...
                </main>
              </div>
              ,
            </div>,
            "description": "The sidebar supports an infinite depth of levels. But we actually do not recommend to go higher then 4, due to accessibility issues.",
            "title": "Sidebar",
          },
        ],
        "hideOptions": true,
        "id": "no-tabs",
      }
    }
  />
</section>
`;

exports[`Components: Sidebar RemoveActiveState renders 1`] = `
<section>
  <JavascriptDocElement
    code={
      <CodeTags
        code="dg.sidebar.removeActiveState(<sidebar-id>, group-index, subgroup-index, leaf-index)"
        type="secondary"
      />
    }
    description={
      <React.Fragment>
        Note: This method is optional
        <br />
        <br />
        Remove group, subgroup and leaf of the 
         active state depending on the parameters passed. The paramater 
        <CodeTags
          code="group-index"
          type="secondary"
        />
         is the index of the group to have the active state removed, the paramater 
        <CodeTags
          code="subgroup-index"
          type="secondary"
        />
         is the index of the subgroup beneath the group selected by 
        <CodeTags
          code="group-index"
          type="secondary"
        />
        , and the paramater 
        <CodeTags
          code="leaf-index"
          type="secondary"
        />
         is the index of the leaf beneath both 
        <CodeTags
          code="group-index"
          type="secondary"
        />
         and 
        <CodeTags
          code="subgroup-index"
          type="secondary"
        />
        . If the group only has two levels, only 
        <CodeTags
          code="group-index"
          type="secondary"
        />
         and 
        <CodeTags
          code="leaf-index"
          type="secondary"
        />
         is needed. Since group always is present, 
        <CodeTags
          code="group-index"
          type="secondary"
        />
         should always be provided. Pass 
        <CodeTags
          code="null"
          type="secondary"
        />
         as a paramater in cases where the parameter needs to be empty, such as when 
        <CodeTags
          code="subgroup-index"
          type="secondary"
        />
         is the only one needed, use 
        <CodeTags
          code="removeActiveState(<sidebar-id>, group-index, null, null)"
          type="secondary"
        />
        . The paramater 
        <CodeTags
          code="<sidebar-id>"
          type="secondary"
        />
         must always be a valid id.
      </React.Fragment>
    }
  />
</section>
`;

exports[`Components: Sidebar RemoveScrollListener renders 1`] = `
<section>
  <JavascriptDocElement
    code={
      <CodeTags
        code="dg.sidebar.removeScrollListener(<sidebar-id>, content-id)"
        type="secondary"
      />
    }
    description={
      <React.Fragment>
        Note: This method is optional
        <br />
        <br />
        Removes scroll listener on the element with id 
        <CodeTags
          code="content-id"
          type="secondary"
        />
        .
      </React.Fragment>
    }
  />
</section>
`;

exports[`Components: Sidebar SetActiveState renders 1`] = `
<section>
  <JavascriptDocElement
    code={
      <CodeTags
        code="dg.sidebar.setActiveState(<sidebar-id>, group-index, subgroup-index, leaf-index)"
        type="secondary"
      />
    }
    description={
      <React.Fragment>
        Note: This method is optional
        <br />
        <br />
        Sets group, subgroup and leaf of the 
         to active depending on the parameters passed. The paramater 
        <CodeTags
          code="group-index"
          type="secondary"
        />
         is the index of the group to be set active, the paramater 
        <CodeTags
          code="subgroup-index"
          type="secondary"
        />
         is the index of the subgroup beneath the group selected by 
        <CodeTags
          code="group-index"
          type="secondary"
        />
        , and the paramater 
        <CodeTags
          code="leaf-index"
          type="secondary"
        />
         is the index of the leaf beneath both 
        <CodeTags
          code="group-index"
          type="secondary"
        />
         and 
        <CodeTags
          code="subgroup-index"
          type="secondary"
        />
        . If the group only has two levels, only 
        <CodeTags
          code="group-index"
          type="secondary"
        />
         and 
        <CodeTags
          code="leaf-index"
          type="secondary"
        />
         is needed. Since group always is present, 
        <CodeTags
          code="group-index"
          type="secondary"
        />
         should always be provided. Pass 
        <CodeTags
          code="null"
          type="secondary"
        />
         as a paramater in cases where the parameter needs to be empty, such as when 
        <CodeTags
          code="subgroup-index"
          type="secondary"
        />
         is the only one needed, use 
        <CodeTags
          code="setActiveState(<sidebar-id>, group-index, null, null)"
          type="secondary"
        />
        . The paramater 
        <CodeTags
          code="<sidebar-id>"
          type="secondary"
        />
         must always be a valid id.
      </React.Fragment>
    }
  />
</section>
`;

exports[`Components: Sidebar renders 1`] = `
<DocContainer>
  <section
    id="sidebar-doc"
  >
    <p
      className="lead"
    >
      The sidebar is used to give users an easily available navigational bar on the left side of your web application.
    </p>
    <Overview />
    <DeveloperDocumentation />
    <NpmInformation
      componentName="sidebar"
    />
  </section>
</DocContainer>
`;
