// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components: Sidebar DeveloperDocumentation renders 1`] = `
<section>
  <h2
    id="developer-documentation"
  >
    Developer documentation
  </h2>
  <section>
    <h3>
      Infinite depth
    </h3>
    <section>
      <h4>
        Deeper?
      </h4>
      <p>
        To create four levels and more, inside 
        <CodeTags
          code=".secondary-nav-li.leaf"
          type="secondary"
        />
        , insert a 
        <CodeTags
          code="<ul>"
          type="primary"
        />
        , containing 
        <CodeTags
          code="a.previous-nav"
          type="secondary"
        />
        , followed by a 
        <CodeTags
          code="<header>"
          type="primary"
        />
        , then the next 
        <CodeTags
          code="<li>"
          type="primary"
        />
        -elements. Repeat this pattern into eternity.
      </p>
      <ComponentPreview
        codeFigure={true}
        language="html"
      >
        <li
          className="secondary-nav-li leaf"
        >
          

          <a
            href="#"
          >
            Li title
          </a>
          

          <ul>
            

            <a
              className="previous-nav"
              href="#"
            >
              

              <i
                aria-hidden="true"
                className="material-icons"
              >
                arrow_back_ios
              </i>
              

              <span>
                Back to Previous
              </span>
              

            </a>
            <header>
              Icon Title
            </header>
            <li
              className="leaf"
            >
              

              <a
                href="#"
              >
                Li title
              </a>
              

              {*
               Continue the pattern here 
              *}
            </li>
          </ul>
        </li>
      </ComponentPreview>
    </section>
    <section>
      <h4>
        Deep enough?
      </h4>
      <p>
        Replace the 
        <CodeTags
          code=".leaf"
          type="secondary"
        />
         class with 
        <CodeTags
          code=".group"
          type="secondary"
        />
        . And the last 
        <CodeTags
          code="<li>"
          type="primary"
        />
        's should have 
        <CodeTags
          code=".nav-leaf"
          type="secondary"
        />
      </p>
      <ComponentPreview
        codeFigure={true}
        language="html"
      >
        <li
          className="group"
        >
          

          <a
            href="#"
          >
            Li title
          </a>
          

          <ul>
            

            <li
              className="nav-leaf"
            >
              

              <a
                href="#"
              >
                Li title
              </a>
              

            </li>
            <li
              className="nav-leaf"
            >
              

              <a
                href="#"
              >
                Li title
              </a>
              

            </li>
            <li
              className="nav-leaf"
            >
              

              <a
                href="#"
              >
                Li title
              </a>
              

            </li>
          </ul>
        </li>
      </ComponentPreview>
    </section>
  </section>
  <section>
    <h3>
      JavaScript methods
    </h3>
    <p
      className="pl-3 mb-0"
    >
      <b>
        Note:
      </b>
       The sidebar should be initialized with ID
    </p>
    <JavascriptDocs
      componentName="sidebar"
      others={
        Array [
          [Function],
          [Function],
          [Function],
          [Function],
        ]
      }
    />
  </section>
</section>
`;

exports[`Components: Sidebar InitScrollListener renders 1`] = `
<section>
  <li>
    <div>
      <h3
        scope="row"
      >
        <code
          className="code-tags code-tags-secondary"
        >
          dg.sidebar.initScrollListener(&lt;sidebar-id&gt;, content-id, header-type)
        </code>
      </h3>
      <p
        className="javascript-doc-element-description"
      >
        Note: This method is optional
        <br />
        <br />
        Makes the 
         with id 
        <code
          className="code-tags code-tags-secondary"
        >
          &lt;sidebar-id&gt;
        </code>
         listen to scroll events on the element with id 
        <code
          className="code-tags code-tags-secondary"
        >
          content-id
        </code>
        , and matches a leaf with the corresponding header of 
        <code
          className="code-tags code-tags-secondary"
        >
          header-type
        </code>
         to visualize active leaf depending on scroll position of element with id 
        <code
          className="code-tags code-tags-secondary"
        >
          content-id
        </code>
        .
      </p>
    </div>
  </li>
</section>
`;

exports[`Components: Sidebar Overview renders 1`] = `
<section
  id="sidebar-overview"
>
  <h2
    id="overview"
  >
    Overview
  </h2>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <div
              className="container-fluid"
            >
              <div
                className="row"
              >
                <Sidebar
                  id="dg-sidebar"
                  navList={
                    Array [
                      Object {
                        "icon": <i
                          aria-hidden="true"
                          className="material-icons-outlined"
                        >
                          home
                        </i>,
                        "title": "Home Page",
                      },
                      Object {
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                            ],
                            "group": true,
                            "title": "Second level (li.group)",
                          },
                          Object {
                            "children": Array [
                              Object {
                                "title": "Third level",
                              },
                              Object {
                                "children": Array [
                                  Object {
                                    "title": "Fourth level",
                                  },
                                  Object {
                                    "children": Array [
                                      Object {
                                        "title": "Fifth level",
                                      },
                                      Object {
                                        "children": Array [
                                          Object {
                                            "title": "Sixth level (li.nav-leaf)",
                                          },
                                          Object {
                                            "title": "Sixth level (li.nav-leaf)",
                                          },
                                        ],
                                        "group": true,
                                        "title": "Fifth level",
                                      },
                                    ],
                                    "title": "Fourth level",
                                  },
                                ],
                                "title": "Third level",
                              },
                            ],
                            "title": "Second level (li.leaf)",
                          },
                        ],
                        "icon": <i
                          aria-hidden="true"
                          className="material-icons-outlined"
                        >
                          play_circle_outline
                        </i>,
                        "title": "Get started",
                      },
                      Object {
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                            ],
                            "group": true,
                            "title": "li.group",
                          },
                          Object {
                            "children": Array [
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                              Object {
                                "title": "li.nav-leaf",
                              },
                            ],
                            "group": true,
                            "title": "li.group",
                          },
                        ],
                        "icon": <i
                          aria-hidden="true"
                          className="material-icons-outlined"
                        >
                          expand_circle_down
                        </i>,
                        "title": "Group",
                      },
                    ]
                  }
                />
                <main
                  className="col main-content"
                >
                  Main content things...
                </main>
              </div>
            </div>,
            "description": "The sidebar supports an infinite depth of levels. Be considerate of how many levels you are using in your product as deep navigation can make it hard to find content and disorient users. How many levels you need depends on your product specific use case, but with consideration of UX best practices we recommend a more flat navigation.",
            "title": "Sidebar",
          },
        ],
        "hideOptions": true,
        "id": "no-tabs",
      }
    }
  />
</section>
`;

exports[`Components: Sidebar RemoveActiveState renders 1`] = `
<section>
  <li>
    <div>
      <h3
        scope="row"
      >
        <code
          className="code-tags code-tags-secondary"
        >
          dg.sidebar.removeActiveState(&lt;sidebar-id&gt;, group-index, subgroup-index, leaf-index)
        </code>
      </h3>
      <p
        className="javascript-doc-element-description"
      >
        Note: This method is optional
        <br />
        <br />
        Remove group, subgroup and leaf of the 
         active state depending on the parameters passed. The paramater 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
         is the index of the group to have the active state removed, the paramater 
        <code
          className="code-tags code-tags-secondary"
        >
          subgroup-index
        </code>
         is the index of the subgroup beneath the group selected by 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
        , and the paramater 
        <code
          className="code-tags code-tags-secondary"
        >
          leaf-index
        </code>
         is the index of the leaf beneath both 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
         and 
        <code
          className="code-tags code-tags-secondary"
        >
          subgroup-index
        </code>
        . If the group only has two levels, only 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
         and 
        <code
          className="code-tags code-tags-secondary"
        >
          leaf-index
        </code>
         is needed. Since group always is present, 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
         should always be provided. Pass 
        <code
          className="code-tags code-tags-secondary"
        >
          null
        </code>
         as a paramater in cases where the parameter needs to be empty, such as when 
        <code
          className="code-tags code-tags-secondary"
        >
          subgroup-index
        </code>
         is the only one needed, use 
        <code
          className="code-tags code-tags-secondary"
        >
          removeActiveState(&lt;sidebar-id&gt;, group-index, null, null)
        </code>
        . The paramater 
        <code
          className="code-tags code-tags-secondary"
        >
          &lt;sidebar-id&gt;
        </code>
         must always be a valid id.
      </p>
    </div>
  </li>
</section>
`;

exports[`Components: Sidebar RemoveScrollListener renders 1`] = `
<section>
  <li>
    <div>
      <h3
        scope="row"
      >
        <code
          className="code-tags code-tags-secondary"
        >
          dg.sidebar.removeScrollListener(&lt;sidebar-id&gt;, content-id)
        </code>
      </h3>
      <p
        className="javascript-doc-element-description"
      >
        Note: This method is optional
        <br />
        <br />
        Removes scroll listener on the element with id 
        <code
          className="code-tags code-tags-secondary"
        >
          content-id
        </code>
        .
      </p>
    </div>
  </li>
</section>
`;

exports[`Components: Sidebar SetActiveState renders 1`] = `
<section>
  <li>
    <div>
      <h3
        scope="row"
      >
        <code
          className="code-tags code-tags-secondary"
        >
          dg.sidebar.setActiveState(&lt;sidebar-id&gt;, group-index, subgroup-index, leaf-index)
        </code>
      </h3>
      <p
        className="javascript-doc-element-description"
      >
        Note: This method is optional
        <br />
        <br />
        Sets group, subgroup and leaf of the 
         to active depending on the parameters passed. The paramater 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
         is the index of the group to be set active, the paramater 
        <code
          className="code-tags code-tags-secondary"
        >
          subgroup-index
        </code>
         is the index of the subgroup beneath the group selected by 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
        , and the paramater 
        <code
          className="code-tags code-tags-secondary"
        >
          leaf-index
        </code>
         is the index of the leaf beneath both 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
         and 
        <code
          className="code-tags code-tags-secondary"
        >
          subgroup-index
        </code>
        . If the group only has two levels, only 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
         and 
        <code
          className="code-tags code-tags-secondary"
        >
          leaf-index
        </code>
         is needed. Since group always is present, 
        <code
          className="code-tags code-tags-secondary"
        >
          group-index
        </code>
         should always be provided. Pass 
        <code
          className="code-tags code-tags-secondary"
        >
          null
        </code>
         as a paramater in cases where the parameter needs to be empty, such as when 
        <code
          className="code-tags code-tags-secondary"
        >
          subgroup-index
        </code>
         is the only one needed, use 
        <code
          className="code-tags code-tags-secondary"
        >
          setActiveState(&lt;sidebar-id&gt;, group-index, null, null)
        </code>
        . The paramater 
        <code
          className="code-tags code-tags-secondary"
        >
          &lt;sidebar-id&gt;
        </code>
         must always be a valid id.
      </p>
    </div>
  </li>
</section>
`;

exports[`Components: Sidebar renders 1`] = `
<DocContainer>
  <section
    id="sidebar-doc"
  >
    <p
      className="lead"
    >
      The sidebar is used to give users an easily available navigational bar on the left side of your web application.
    </p>
    <Overview />
    <DeveloperDocumentation />
    <NpmInformation
      componentName="sidebar"
    />
  </section>
</DocContainer>
`;
