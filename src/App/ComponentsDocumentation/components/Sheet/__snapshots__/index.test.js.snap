// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Documentation: Sheet ContentGuidelines renders 1`] = `
<Fragment>
  <h2>
    Content guidelines
  </h2>
  <img
    alt="Sheet component with sticky header and footer"
    className="img-fluid"
    src="/TEST/img/documentation/sheet/content-guidelines.png"
  />
  <ul
    className="list list-bullet"
  >
    <li>
      The 
      <b>
        header
      </b>
       should have a title and a close button.
    </li>
    <li>
      The 
      <b>
        main content
      </b>
       area can contain a number of different components and this area can be vertically scrollable.
    </li>
    <li>
      The 
      <b>
        footer
      </b>
       is optional and designed to contain buttons that will lead to certain actions. The footer is also sticky.
    </li>
  </ul>
</Fragment>
`;

exports[`Documentation: Sheet DeveloperDocumentation renders 1`] = `
<Fragment>
  <h2
    id="developer-documentation"
  >
    Developer Documentation
  </h2>
  <h3
    id="javascript-methods"
  >
    JavaScript methods
  </h3>
  <p>
    Use 
    <CodeTags
      code="dg.sheet.init()"
      type="secondary"
    />
     to 
    <Link
      to="/get-started/for-developers"
    >
      initialize
    </Link>
     all accordions. This will give the sheets open and close functions automatically.
  </p>
  <p>
    To open a given sheet, use 
    <CodeTags
      code="dg.sheet.open(<sheet-id>)"
      type="secondary"
    />
  </p>
  <p>
    To close a given sheet, use 
    <CodeTags
      code="dg.sheet.close(<sheet-id>)"
      type="secondary"
    />
  </p>
  <p>
    To disable the listener responsible for closing the sheet when a user clicks outside, add 
    <CodeTags
      code="data-require-action"
      type="primary"
    />
     to your sheet.
  </p>
</Fragment>
`;

exports[`Documentation: Sheet SheetExample renders 1`] = `
<Fragment>
  <h2
    id="example"
  >
    Example
  </h2>
  <p>
    The sheets is used to provide users with actions and information contextual to the page. It can be used in different contexts, but common use cases are to display multiple actions that will affect the screen’s primary content such as filters or other ways to manipulate the main content.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    showCasePanel={true}
    showCasePanelAdvanced={
      Object {
        "elements": Array [
          Object {
            "component": <SheetButton
              id="sheet-showcase"
            />,
            "description": "The Sheets component appears when triggered by a user action, such as tapping a button. At large screen sizes, the sheet component enters the page from the right side of the screen and at small screen sizes, the sheet component enters the page from the bottom of the screen. It has a header with a title and close button and a main content area that can contain a number of different components. An optional feature that can useful is a sticky footer with actions.",
            "options": Object {
              "checkbox": Array [
                Object {
                  "inputs": Array [
                    Object {
                      "id": "checkbox_sheet",
                      "name": "Sticky footer",
                      "value": Object {
                        "footer": true,
                      },
                    },
                  ],
                  "title": "Add on",
                },
              ],
            },
            "title": "Sheet",
          },
        ],
        "id": "no-tabs",
      }
    }
  />
  <h3>
    When to consider something else
  </h3>
  <ul
    className="list list-bullet"
  >
    <li>
      To enforce an action before the user can proceed, use the 
      <Link
        to="/components/dialog"
      >
        Dialog
      </Link>
       component.
    </li>
    <li>
      To present a small amount of content or actions in a non-blocking overlay, use the 
      <Link
        to="/components/popover"
      >
        Popover
      </Link>
       component.
    </li>
  </ul>
  <h2>
    How to use Sheets
  </h2>
  <div
    className="row"
  >
    <div
      className="col-lg-6"
    >
      <div
        className="slab slab-plain slab-border-success"
      >
        <h3>
          Do
        </h3>
        <div
          className="d-flex flex-column align-items-center"
        >
          <img
            alt="Sheet component with correct margins and overflowing contents, showing possibility to scroll within the component."
            className="img-fluid"
            src="/TEST/img/documentation/sheet/do1.png"
          />
        </div>
      </div>
      <p>
        Sheets can be vertically scrolled if the main content is long and exceeds the screen hight. The header and footer should still be fixed.
      </p>
    </div>
    <div
      className="col-lg-6"
    >
      <div
        className="slab slab-plain slab-border-error"
      >
        <h3>
          Don't
        </h3>
        <div
          className="d-flex flex-column align-items-center"
        >
          <img
            alt="Sheet component with no margins."
            className="img-fluid"
            src="/TEST/img/documentation/sheet/dont1.png"
          />
        </div>
      </div>
      <p>
        Do not allow horizontal scrolling in a Sheet or layout that suggests horizontal scrolling.
      </p>
    </div>
  </div>
  <div
    className="row"
  >
    <div
      className="col-12"
    >
      <div
        className="slab slab-plain slab-border-success"
      >
        <h3>
          Do
        </h3>
        <div
          className="d-flex flex-column align-items-center"
        >
          <img
            alt="Sheet component in mobile view. Displaying filter example."
            className="img-fluid"
            src="/TEST/img/documentation/sheet/do2.png"
          />
        </div>
      </div>
      <p>
        A Sheet can be used as a container of a 
        <Link
          to="/patterns/filters"
        >
          filter
        </Link>
         functionality. This is especially helpful on small screens like mobile device where space is limited and can’t fit filter components inline with the content.
      </p>
    </div>
  </div>
</Fragment>
`;

exports[`Documentation: Sheet renders 1`] = `
<DocContainer
  docToc={true}
>
  <p
    className="lead"
  >
    A sheet is a container component that slides in and out from the edge of the screen and overlays the page content.  It can be used to focus users attention to a specific task without leaving the current page.
  </p>
  <SheetExample />
  <ContentGuidelines />
  <DeveloperDocumentation />
  <NpmInformation
    componentName="sheet"
  />
</DocContainer>
`;
