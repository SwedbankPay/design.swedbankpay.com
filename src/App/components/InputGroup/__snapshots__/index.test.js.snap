// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: InputGroup - renders 1`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - renders a form-group with a help block 1`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

  <p
    className="hint-text"
    id="hint-text"
  >
    testvalue
  </p>
  

</div>
`;

exports[`Component: InputGroup - renders a form-group with a label if prop label is provided 1`] = `
<div
  className="form-group"
>
  

  <label>
    this is a text in a label
  </label>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - renders a form-group with a prefix icon if prop prefixValue equals icon 1`] = `
<div
  className="form-group"
>
  

  <div
    className="input-group"
  >
    

    <span
      className="input-group-addon "
    >
      <i
        aria-hidden="true"
        className="material-icons material-icons-outlined"
      >
        home
      </i>
    </span>
    

    <input
      autoComplete={null}
      className="form-control"
      data-validate={null}
      defaultValue=""
      disabled={null}
      id={null}
      pattern={null}
      placeholder={null}
      readOnly={null}
      required={null}
      type="typetest"
    />
    
	
    

  </div>
</div>
`;

exports[`Component: InputGroup - renders a form-group with a select field with given values if type equals select 1`] = `
<div
  className="form-group"
>
  

  <select
    className="form-control"
    defaultValue=""
    disabled={null}
    id={null}
    readOnly={null}
    required={null}
  >
    
		
    <option
      value="Bounty hunter"
    >
      Bounty hunter
    </option>
    
		
    <option
      value="Smuggler"
    >
      Smuggler
    </option>
    
		
    <option
      value="Jedi"
    >
      Jedi
    </option>
    
	
  </select>
  

</div>
`;

exports[`Component: InputGroup - renders a form-group with a text-area if type equals textarea 1`] = `
<div
  className="form-group"
>
  

  <textarea
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="textarea"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if addOnType prop has an invalid value 1`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if addOnType prop has an invalid value 2`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if addOnType prop has an invalid value 3`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if addOnType prop has an invalid value 4`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if addOnType prop has an invalid value 5`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if addOnType prop has an invalid value 6`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if type prop is not provided 1`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type={null}
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if validationState prop has an invalid value 1`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if validationState prop has an invalid value 2`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if validationState prop has an invalid value 3`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if validationState prop has an invalid value 4`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;

exports[`Component: InputGroup - throws an error if validationState prop has an invalid value 5`] = `
<div
  className="form-group"
>
  

  <input
    autoComplete={null}
    className="form-control"
    data-validate={null}
    defaultValue=""
    disabled={null}
    id={null}
    pattern={null}
    placeholder={null}
    readOnly={null}
    required={null}
    type="typetest"
  />
  

</div>
`;
