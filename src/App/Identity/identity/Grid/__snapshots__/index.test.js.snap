// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Core: Grid Breakpoints renders 1`] = `
<section>
  <h2
    id="breakpoints"
  >
    Breakpoints
  </h2>
  <p>
    As shown in previous examples our grid system has 12 columns in desktop view. As the width decreases to tablet and mobile breakpoints the amount of columns used changes as well. Within the tablet breakpoints we use 8 columns and within mobile breakpoints 4 columns.
  </p>
  <table
    className="table table-plain"
  >
    <thead>
      <tr>
        <th>
          Size
        </th>
        <th>
          Breakpoint Range
        </th>
        <th>
          Columns
        </th>
        <th>
          Margins & Gutter
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          Mobile
        </td>
        <td>
          320-767 px
        </td>
        <td>
          4
        </td>
        <td>
          16 px
        </td>
      </tr>
      <tr>
        <td>
          Tablet
        </td>
        <td>
          768-1023 px
        </td>
        <td>
          8
        </td>
        <td>
          24 px
        </td>
      </tr>
      <tr>
        <td>
          Small Desktop
        </td>
        <td>
          1024-1439 px
        </td>
        <td>
          12
        </td>
        <td>
          24 px
        </td>
      </tr>
      <tr>
        <td>
          Large Desktop
        </td>
        <td>
          ≥ 1440 px
        </td>
        <td>
          12
        </td>
        <td>
          24 px
        </td>
      </tr>
    </tbody>
  </table>
</section>
`;

exports[`Core: Grid GridOptions renders 1`] = `
Array [
  <h2
    id="grid-options"
  >
    Grid options
  </h2>,
  <p>
    Most sizes in the 
    TESTBRAND
     Design Guide is defined using
     
    <code
      className="code-tags code-tags-secondary"
    >
      rem
    </code>
    s, 
    <code
      className="code-tags code-tags-secondary"
    >
      px
    </code>
    s are used for grid breakpoints and container widths. This is because the viewport width is in pixels and does not change with the font size.
  </p>,
  <p>
    Use this table to see how aspects of the grid system work across multiple devices.
  </p>,
  <table
    className="table table-striped"
  >
    <thead>
      <tr>
        <th />
        <th
          scope="col"
        >
          Extra small
          <p>
            <small>
              &lt;
              576px
            </small>
          </p>
        </th>
        <th
          scope="col"
        >
          Small
          <p>
            <small>
              ≥
              576px
            </small>
          </p>
        </th>
        <th
          scope="col"
        >
          Medium
          <p>
            <small>
              ≥
              768px
            </small>
          </p>
        </th>
        <th
          scope="col"
        >
          Large
          <p>
            <small>
              ≥
              992px
            </small>
          </p>
        </th>
        <th
          scope="col"
        >
          Extra large
          <p>
            <small>
              ≥
              1200px
            </small>
          </p>
        </th>
        <th
          scope="col"
        >
          Extra extra large
          <p>
            <small>
              ≥
              1600px
            </small>
          </p>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th
          scope="row"
        >
          Max container width
        </th>
        <td>
          None (auto)
        </td>
        <td>
          540px
        </td>
        <td>
          720px
        </td>
        <td>
          960px
        </td>
        <td>
          1140px
        </td>
        <td>
          1460px
        </td>
      </tr>
      <tr>
        <th
          scope="row"
        >
          Class prefix
        </th>
        <td>
          <code
            className="code-tags code-tags-secondary"
          >
            .col-
          </code>
        </td>
        <td>
          <code
            className="code-tags code-tags-secondary"
          >
            .col-sm-
          </code>
        </td>
        <td>
          <code
            className="code-tags code-tags-secondary"
          >
            .col-md-
          </code>
        </td>
        <td>
          <code
            className="code-tags code-tags-secondary"
          >
            .col-lg-
          </code>
        </td>
        <td>
          <code
            className="code-tags code-tags-secondary"
          >
            .col-xl-
          </code>
        </td>
        <td>
          <code
            className="code-tags code-tags-secondary"
          >
            .col-xxl-
          </code>
        </td>
      </tr>
      <tr>
        <th
          scope="row"
        >
          Gutter width
        </th>
        <td
          colSpan="6"
        >
          32px (16px on each side of a column)
        </td>
      </tr>
      <tr>
        <th
          scope="row"
        >
          Nestable
        </th>
        <td
          colSpan="6"
        >
          Yes
        </td>
      </tr>
      <tr>
        <th
          scope="row"
        >
          Column ordering
        </th>
        <td
          colSpan="6"
        >
          Yes
        </td>
      </tr>
    </tbody>
  </table>,
]
`;

exports[`Core: Grid GridSystem renders 1`] = `
<section>
  <h2
    id="grid-system"
  >
    Grid system
  </h2>
  <div
    className="grid-guide"
  >
    <article>
      <img
        alt="Illustration of columns."
        className="img-fluid"
        src="/TEST/img/documentation/grid/columns.png"
      />
      <h3>
        Columns
      </h3>
      <p>
        We use a 
        <span
          className="font-weight-bold"
        >
          12 column
        </span>
         grid system where the width of the column changes depending on the size of the grid.
      </p>
    </article>
    <article>
      <img
        alt="Illustration of column spans"
        className="img-fluid"
        src="/TEST/img/documentation/grid/column-span.png"
      />
      <h3>
        Column spans
      </h3>
      <p>
        Within the 12 column grid system, there are also
         
        <span
          className="font-weight-bold"
        >
          6 tiers
        </span>
         of responsive column spans.
         
      </p>
    </article>
    <article>
      <img
        alt="Illustration of gutters"
        className="img-fluid"
        src="/TEST/img/documentation/grid/gutters.png"
      />
      <h3>
        Gutters
      </h3>
      <p>
        Gutters are the gap between columns, these values (16 px, 24 px etc.) are 
        <span
          className="font-weight-bold"
        >
          fixed
        </span>
         and depends on our breakpoints.
         
      </p>
    </article>
    <article>
      <img
        alt="Illustration of margins"
        className="img-fluid"
        src="/TEST/img/documentation/grid/margins.png"
      />
      <h3>
        Margins
      </h3>
      <p>
        Margins are the outer space between the columns and the edge of the grid. The values can be
         
        <span
          className="font-weight-bold"
        >
          the same as gutters or larger
        </span>
        .
      </p>
    </article>
  </div>
</section>
`;

exports[`Core: Grid GridTypes renders 1`] = `
<section>
  <h2
    id="grid-types"
  >
    Grid types
  </h2>
  <div
    className="grid-guide"
  >
    <article>
      <img
        alt="Illustration of fluid grid."
        className="img-fluid"
        src="/TEST/img/documentation/grid/fluid.png"
      />
      <h3>
        Fluid
      </h3>
      <p>
        A fluid grid takes up 100% of the viewport and scales dynamically as the sizing of the grid changes.
      </p>
    </article>
    <article>
      <img
        alt="Illustration of fixed grid"
        className="img-fluid"
        src="/TEST/img/documentation/grid/fixed.png"
      />
      <h3>
        Fixed
      </h3>
      <p>
        A fixed grid has a fixed size on its maximum width, meaning the grid will not scale as the grid changes.
      </p>
    </article>
  </div>
</section>
`;

exports[`Core: Grid Intro renders 1`] = `
<section>
  <p
    className="lead"
  >
    Use our Bootstrap-inspired grid to build layouts of all shapes and sizes. Our twelve column system has six default responsive tiers, and dozens of predefined classes.
  </p>
  <p>
    Our grid system is a modified version of the Bootstrap grid-system, learn more about how it works in the
     
    <a
      className="icon-link m-0"
      href="https://getbootstrap.com/docs/4.1/layout/grid/"
      rel="noopener noreferrer"
      target="_blank"
    >
      <span
        className="mr-2"
      >
        Bootstrap documentation
      </span>
      <i
        aria-hidden="true"
        className="at-arrow-up-from-square small align-self-baseline"
      />
    </a>
    . If you are curious about how the grid is being used in design, head over to the
     
    <a
      className="icon-link m-0"
      href="https://www.figma.com/file/GkRbjhReTaX3vr2wwKCsGx/?node-id=493%3A3"
      rel="noopener noreferrer"
      target="_blank"
    >
      <span
        className="mr-2"
      >
        Grid file in Figma
      </span>
      <i
        aria-hidden="true"
        className="at-arrow-up-from-square small align-self-baseline"
      />
    </a>
    .
  </p>
</section>
`;

exports[`Core: Grid OffsettingGrid renders 1`] = `
<section>
  <h2
    id="offsetting-grid"
  >
    Offsetting grid
  </h2>
  <p>
    A standard 12 column grid typically fills 100% of the viewport. When there is a side menu present in the design we must offset the grid in order to align the elements. In this case, the width of the menu is removed from the calculation and the grid takes 100% of the remaining space.
  </p>
  <div
    className="grid-guide"
  >
    <article>
      <img
        alt=""
        className="mb-3 img-fluid"
        src="/TEST/img/documentation/grid/grid-offset-left.png"
      />
      <p>
        Grid offset with left side menu
      </p>
    </article>
    <article>
      <img
        alt=""
        className="mb-3 img-fluid"
        src="/TEST/img/documentation/grid/grid-offset-both-sides.png"
      />
      <p>
        Grid offset with menu on each side
      </p>
    </article>
  </div>
</section>
`;

exports[`Core: Grid ResponsiveClasses renders 1`] = `
Array [
  <h2
    id="responsive-classes"
  >
    Responsive classes
  </h2>,
  <p>
    Our grid includes six tiers of predefined classes for building complex responsive layouts. Customize the size of your columns on extra small, small, medium, large, extra large, or extra extra large devices however you see fit.
  </p>,
  <h3>
    All breakpoints
  </h3>,
  <p>
    For grids that are the same from the smallest of devices to the largest, use the 
    <code
      className="code-tags code-tags-secondary"
    >
      .col
    </code>
     and
     
    <code
      className="code-tags code-tags-secondary"
    >
      .col-*
    </code>
     classes. Specify a numbered class when you need a particularly sized column; otherwise, feel free to stick to 
    <code
      className="code-tags code-tags-secondary"
    >
      .col
    </code>
    .
  </p>,
  <div
    className="showcase-panel"
  >
    <div
      className="showcase-grid"
    >
      <div
        className="container"
      >
        <div
          className="row"
        >
          <div
            className="col"
          >
            col
          </div>
          <div
            className="col"
          >
            col
          </div>
          <div
            className="col"
          >
            col
          </div>
          <div
            className="col"
          >
            col
          </div>
        </div>
        <div
          className="row"
        >
          <div
            className="col-8"
          >
            col-8
          </div>
          <div
            className="col-4"
          >
            col-4
          </div>
        </div>
      </div>
    </div>
  </div>,
  <figure>
    <div
      className="code-view"
    >
      <header
        className="code-view-header"
      >
        HTML
        <button
          aria-describedby="tooltipCopy"
          className="tooltip"
          onClick={[Function]}
        >
          <i
            aria-hidden="true"
            className="at-clipboard small"
          />
          <div
            id="tooltipCopy"
            role="tooltip"
          >
            Copy to clipboard
          </div>
        </button>
      </header>
      <table
        className="code-view-table"
      >
        <tbody>
          <tr>
            <td
              className="code-view-numbers"
            >
              <pre>
                1
                

                2
                

                3
                

                4
                

                5
                

                6
                

                7
                

                8
                

                9
                

                10
                

                11
                

                12
                

              </pre>
            </td>
            <td
              className="code-view-code"
            >
              <pre>
                &lt;div class="container"&gt;
                

                    &lt;div class="row"&gt;
                

                        &lt;div class="col"&gt;col&lt;/div&gt;
                

                        &lt;div class="col"&gt;col&lt;/div&gt;
                

                        &lt;div class="col"&gt;col&lt;/div&gt;
                

                        &lt;div class="col"&gt;col&lt;/div&gt;
                

                    &lt;/div&gt;
                

                    &lt;div class="row"&gt;
                

                        &lt;div class="col-8"&gt;col-8&lt;/div&gt;
                

                        &lt;div class="col-4"&gt;col-4&lt;/div&gt;
                

                    &lt;/div&gt;
                

                &lt;/div&gt;
                

              </pre>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </figure>,
  <h3>
    Stacked to horizontal
  </h3>,
  <p>
    Using a single set of 
    <code
      className="code-tags code-tags-secondary"
    >
      .col-sm-*
    </code>
     
    classes, you can create a basic grid system that starts out stacked and becomes horizontal at the small breakpoint (
    <code
      className="code-tags code-tags-secondary"
    >
      sm
    </code>
    ).
  </p>,
  <div
    className="showcase-panel"
  >
    <div
      className="showcase-grid"
    >
      <div
        className="container"
      >
        <div
          className="row"
        >
          <div
            className="col-sm-8"
          >
            col-sm-8
          </div>
          <div
            className="col-sm-4"
          >
            col-sm-4
          </div>
        </div>
        <div
          className="row"
        >
          <div
            className="col-sm"
          >
            col-sm
          </div>
          <div
            className="col-sm"
          >
            col-sm
          </div>
          <div
            className="col-sm"
          >
            col-sm
          </div>
        </div>
      </div>
    </div>
  </div>,
  <figure>
    <div
      className="code-view"
    >
      <header
        className="code-view-header"
      >
        HTML
        <button
          aria-describedby="tooltipCopy"
          className="tooltip"
          onClick={[Function]}
        >
          <i
            aria-hidden="true"
            className="at-clipboard small"
          />
          <div
            id="tooltipCopy"
            role="tooltip"
          >
            Copy to clipboard
          </div>
        </button>
      </header>
      <table
        className="code-view-table"
      >
        <tbody>
          <tr>
            <td
              className="code-view-numbers"
            >
              <pre>
                1
                

                2
                

                3
                

                4
                

                5
                

                6
                

                7
                

                8
                

                9
                

                10
                

                11
                

              </pre>
            </td>
            <td
              className="code-view-code"
            >
              <pre>
                &lt;div class="container"&gt;
                

                    &lt;div class="row"&gt;
                

                        &lt;div class="col-sm-8"&gt;col-sm-8&lt;/div&gt;
                

                        &lt;div class="col-sm-4"&gt;col-sm-4&lt;/div&gt;
                

                    &lt;/div&gt;
                

                    &lt;div class="row"&gt;
                

                        &lt;div class="col-sm"&gt;col-sm&lt;/div&gt;
                

                        &lt;div class="col-sm"&gt;col-sm&lt;/div&gt;
                

                        &lt;div class="col-sm"&gt;col-sm&lt;/div&gt;
                

                    &lt;/div&gt;
                

                &lt;/div&gt;
                

              </pre>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </figure>,
  <h3>
    Mix and match
  </h3>,
  <p>
    Don’t want your columns to simply stack in some grid tiers? Use a combination of different classes for each tier as needed. See the example below for a better idea of how it all works.
  </p>,
  <div
    className="showcase-panel"
  >
    <div
      className="showcase-grid"
    >
      <div
        className="container"
      >
        <div
          className="row"
        >
          <div
            className="col-12 col-md-8"
          >
            .col-12 .col-md-8
          </div>
          <div
            className="col-6 col-md-4"
          >
            .col-6 .col-md-4
          </div>
        </div>
        <div
          className="row"
        >
          <div
            className="col-6 col-md-4"
          >
            .col-6 .col-md-4
          </div>
          <div
            className="col-6 col-md-4"
          >
            .col-6 .col-md-4
          </div>
          <div
            className="col-6 col-md-4"
          >
            .col-6 .col-md-4
          </div>
        </div>
        <div
          className="row"
        >
          <div
            className="col-6"
          >
            .col-6
          </div>
          <div
            className="col-6"
          >
            .col-6
          </div>
        </div>
      </div>
    </div>
  </div>,
  <figure>
    <div
      className="code-view"
    >
      <header
        className="code-view-header"
      >
        HTML
        <button
          aria-describedby="tooltipCopy"
          className="tooltip"
          onClick={[Function]}
        >
          <i
            aria-hidden="true"
            className="at-clipboard small"
          />
          <div
            id="tooltipCopy"
            role="tooltip"
          >
            Copy to clipboard
          </div>
        </button>
      </header>
      <table
        className="code-view-table"
      >
        <tbody>
          <tr>
            <td
              className="code-view-numbers"
            >
              <pre>
                1
                

                2
                

                3
                

                4
                

                5
                

                6
                

                7
                

                8
                

                9
                

                10
                

                11
                

                12
                

                13
                

                14
                

                15
                

              </pre>
            </td>
            <td
              className="code-view-code"
            >
              <pre>
                &lt;div class="container"&gt;
                

                    &lt;div class="row"&gt;
                

                        &lt;div class="col-12 col-md-8"&gt;.col-12 .col-md-8&lt;/div&gt;
                

                        &lt;div class="col-6 col-md-4"&gt;.col-6 .col-md-4&lt;/div&gt;
                

                    &lt;/div&gt;
                

                    &lt;div class="row"&gt;
                

                        &lt;div class="col-6 col-md-4"&gt;.col-6 .col-md-4&lt;/div&gt;
                

                        &lt;div class="col-6 col-md-4"&gt;.col-6 .col-md-4&lt;/div&gt;
                

                        &lt;div class="col-6 col-md-4"&gt;.col-6 .col-md-4&lt;/div&gt;
                

                    &lt;/div&gt;
                

                    &lt;div class="row"&gt;
                

                        &lt;div class="col-6"&gt;.col-6&lt;/div&gt;
                

                        &lt;div class="col-6"&gt;.col-6&lt;/div&gt;
                

                    &lt;/div&gt;
                

                &lt;/div&gt;
                

              </pre>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </figure>,
]
`;
