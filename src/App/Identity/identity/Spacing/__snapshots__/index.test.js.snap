// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Identity: Spacing BaseIncrementOfRem renders 1`] = `
<section>
  <h2
    id="base-increment-of-rem"
  >
    Base increment of rem
  </h2>
  <p>
    In our system the base size of a  
    <Tag
      code={true}
      text="rem"
      type="secondary"
    />
      unit is 
    <span
      className="font-weight-bold"
    >
      16px
    </span>
    , this means you can easily use 0.5 rem increments to create layouts in code on a 8-point spacing system. See example below for reference: 
  </p>
  <table
    className="table table-plain spacing-table"
  >
    <thead>
      <tr>
        <th
          scope="col"
        >
          Pixel
        </th>
        <th
          scope="col"
        >
          Rem
        </th>
        <th
          scope="col"
        >
          CSS Class
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th
          scope="row"
        >
          8px
        </th>
        <th>
          0.5 rem
        </th>
        <th>
          @spacer * 0.5
        </th>
      </tr>
      <tr>
        <th>
          16px
        </th>
        <th>
          1 rem
        </th>
        <th>
          @spacer
        </th>
      </tr>
      <tr>
        <th>
          24px
        </th>
        <th>
          1.5 rem
        </th>
        <th>
          @spacer * 1.5
        </th>
      </tr>
      <tr>
        <th>
          32px
        </th>
        <th>
          2 rem
        </th>
        <th>
          @spacer * 2
        </th>
      </tr>
    </tbody>
  </table>
</section>
`;

exports[`Identity: Spacing DiveDeeper renders 1`] = `
<section>
  <h2
    id="dive-deeper"
  >
    Dive deeper into spacing
  </h2>
  <p>
    There are a lot more to learn about best practices when it comes to spacing, it involves much more than just spacing in between elements. Even though, we can’t explain all these concepts here in our spacing section. We would like to provide you with links to learn more about what other factors should be considered when designing layouts and what to think about in order to create the best experience for our users.
  </p>
  <a
    className="icon-link d-flex"
    href="https://www.justinmind.com/blog/your-guide-to-space-and-layout-in-ui-design/"
    key="https://www.justinmind.com/blog/your-guide-to-space-and-layout-in-ui-design/"
    rel="noopener noreferrer"
    target="_blank"
  >
    <i
      aria-hidden="true"
      className="material-icons mr-2"
    >
      open_in_new
    </i>
    <span
      className="mr-2"
    >
      Just in mind – Your guide to space and layout in UI design
    </span>
  </a>
  <a
    className="icon-link d-flex"
    href="https://www.w3.org/TR/mobile-accessibility-mapping/#touch-target-size-and-spacing"
    key="https://www.w3.org/TR/mobile-accessibility-mapping/#touch-target-size-and-spacing"
    rel="noopener noreferrer"
    target="_blank"
  >
    <i
      aria-hidden="true"
      className="material-icons mr-2"
    >
      open_in_new
    </i>
    <span
      className="mr-2"
    >
      WCAG 2.0 – Touch Target Size and Spacing
    </span>
  </a>
  <a
    className="icon-link d-flex"
    href="https://lawsofux.com/laws/law-of-proximity/"
    key="https://lawsofux.com/laws/law-of-proximity/"
    rel="noopener noreferrer"
    target="_blank"
  >
    <i
      aria-hidden="true"
      className="material-icons mr-2"
    >
      open_in_new
    </i>
    <span
      className="mr-2"
    >
      Law of UX – Law of Proximity
    </span>
  </a>
  <a
    className="icon-link d-flex"
    href="https://uxplanet.org/white-space-in-ui-design-8647d4f685a7"
    key="https://uxplanet.org/white-space-in-ui-design-8647d4f685a7"
    rel="noopener noreferrer"
    target="_blank"
  >
    <i
      aria-hidden="true"
      className="material-icons mr-2"
    >
      open_in_new
    </i>
    <span
      className="mr-2"
    >
      UX Planet – White space in UI design
    </span>
  </a>
</section>
`;

exports[`Identity: Spacing EightPointSystem renders 1`] = `
<section>
  <h2
    id="eight-point-system"
  >
    8-point spacing system
  </h2>
  <p>
    We follow a 8-point spacing system – multiples of 8 to define the different dimensions, margins and paddings of our elements. The reason for this is to streamline the process, saving time by minimize the amount of choices and create consistent usage of space across all our product. 
  </p>
  <div
    className="d-flex flex-column align-items-center mb-4"
  >
    <img
      alt="Example on multiples of 8px horizontal spacing between elements"
      className="w-100"
      src="/TEST/img/documentation/spacing/horizontal-spacing-example.svg"
    />
    <span
      className="caption-text"
    >
      <span
        className="font-weight-bold"
      >
        Figure 1.
      </span>
       Example on multiples of 8px horizontal spacing between elements.
    </span>
  </div>
  <p>
    If you are interested in learning more about the 8-point spacing system, you can read more about it in this 
    <a
      className="icon-link m-0"
      href="https://builttoadapt.io/intro-to-the-8-point-grid-system-d2573cde8632"
      rel="noopener noreferrer"
      target="_blank"
    >
      <span
        className="mr-2"
      >
        Introduction article
      </span>
      <i
        aria-hidden="true"
        className="material-icons"
      >
        open_in_new
      </i>
    </a>
    , which provides a brief explanation of the reasons why to use the 8-point spacing system. To dive even deeper into the nitty gritty, please refer to this 
    <a
      className="icon-link m-0"
      href="https://spec.fm/specifics/8-pt-grid"
      rel="noopener noreferrer"
      target="_blank"
    >
      <span
        className="mr-2"
      >
        in-depth explanation
      </span>
      <i
        aria-hidden="true"
        className="material-icons"
      >
        open_in_new
      </i>
    </a>
     of the 8-point spacing system.
  </p>
  <h3>
    What if I need something in between?
  </h3>
  <p>
    Even though we try to adhere to the 8-point spacing system as much as possible, we also know that sometimes you need to use something in between. Especially when it comes to building certain components which requires smaller space in between in order to show grouping and simply produces a better result visually. In those cases, it is allowed to use values from the multiples of 4, but this should be kept to 
    <span
      className="font-weight-bold"
    >
      4 px
    </span>
     and 
    <span
      className="font-weight-bold"
    >
      12 px
    </span>
     as we try to keep the larger increments for a consistent vertical spacing alignment between sections.
  </p>
</section>
`;

exports[`Identity: Spacing Examples renders 1`] = `
<section>
  <h2
    id="example"
  >
    Examples
  </h2>
  <p>
    Here are some representative examples of these classes:
  </p>
  <ComponentPreview
    codeFigure={true}
    language="css"
  >
    
                .mt-0 {
                    margin-top: 0 !important;
                }
                
                .ml-1 {
                    margin-left: (@spacer * 0.25) !important;
                }
                
                .px-2 {
                    padding-left: (@spacer * 0.5) !important;
                    padding-right: (@spacer * 0.5) !important;
                }
                
                .p-3 {
                    padding: @spacer !important;
                }
            
  </ComponentPreview>
  <h3>
    Horizontal centering
  </h3>
  <p>
    Additionally, DesignGuide also includes an 
    <Tag
      code={true}
      text=".mx-auto"
      type="secondary"
    />
     class for horizontally centering fixed-width block level content—that is, content that has 
    <Tag
      code={true}
      text="display: block"
      type="secondary"
    />
     and a 
    <Tag
      code={true}
      text="width"
      type="secondary"
    />
     set—by setting the horizontal margins to auto.
  </p>
  <ComponentPreview
    codeFigure={true}
    language="html"
    removeOuterTag={true}
    showCasePanel={true}
  >
    <div
      className="row"
    >
      <div
        className="mx-auto p-2 bg-default"
      >
        

        Centered element
        

      </div>
    </div>
  </ComponentPreview>
</section>
`;

exports[`Identity: Spacing HowItWorks renders 1`] = `
<section>
  <h2
    id="how-it-works"
  >
    How it works in code
  </h2>
  <p>
    Assign responsive-friendly margin or padding values to an element or a subset of its sides with shorthand classes. Includes support for individual properties, all properties, and vertical and horizontal properties. Classes are ranging from 0.25 rem to 3 rem.
  </p>
</section>
`;

exports[`Identity: Spacing Notation renders 1`] = `
<section>
  <h2
    id="notation"
  >
    Notation
  </h2>
  <p>
    Spacing utilities that apply to all breakpoints, from 
    <Tag
      code={true}
      text="xs"
      type="secondary"
    />
     to 
    <Tag
      code={true}
      text="xxl"
      type="secondary"
    />
    , have no breakpoint abbreviation in them. This is because those classes are applied from 
    <Tag
      code={true}
      text="min-width: 0"
      type="secondary"
    />
     and up, and thus are not bound by a media query. The remaining breakpoints, however, do include a breakpoint abbreviation.
  </p>
  <p>
    The classes are named using the format 
    <Tag
      code={true}
      text="{property}{sides}-{size}"
      type="secondary"
    />
     for 
    <Tag
      code={true}
      text="xs"
      type="secondary"
    />
     and 
    <Tag
      code={true}
      text="{property}{sides}-{breakpoint}-{size}"
      type="secondary"
    />
     for 
    <Tag
      code={true}
      text="sm"
      type="secondary"
    />
    , 
    <Tag
      code={true}
      text="md"
      type="secondary"
    />
    , 
    <Tag
      code={true}
      text="lg"
      type="secondary"
    />
    , 
    <Tag
      code={true}
      text="xl"
      type="secondary"
    />
    , and 
    <Tag
      code={true}
      text="xxl"
      type="secondary"
    />
    .
  </p>
  <p>
    Where 
    <i>
      property
    </i>
     is one of:
  </p>
  <ul>
    <li>
      <Tag
        code={true}
        text="m"
        type="secondary"
      />
       - for classes that set 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="p"
        type="secondary"
      />
       - for classes that set 
      <Tag
        code={true}
        text="padding"
        type="secondary"
      />
    </li>
  </ul>
  <p>
    Where 
    <i>
      sides
    </i>
     is one of:
  </p>
  <ul>
    <li>
      <Tag
        code={true}
        text="t"
        type="secondary"
      />
       - for classes that set 
      <Tag
        code={true}
        text="margin-top"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding-top"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="b"
        type="secondary"
      />
       - for classes that set 
      <Tag
        code={true}
        text="margin-bottom"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding-bottom"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="l"
        type="secondary"
      />
       - for classes that set 
      <Tag
        code={true}
        text="margin-left"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding-left"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="r"
        type="secondary"
      />
       - for classes that set 
      <Tag
        code={true}
        text="margin-right"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding-right"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="x"
        type="secondary"
      />
       - for classes that set both 
      <Tag
        code={true}
        text="*-left"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="*-right"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="y"
        type="secondary"
      />
       - for classes that set both 
      <Tag
        code={true}
        text="*-top"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="*-bottom"
        type="secondary"
      />
    </li>
  </ul>
  <p>
    Where 
    <i>
      size
    </i>
     is one of:
  </p>
  <ul>
    <li>
      <Tag
        code={true}
        text="0"
        type="secondary"
      />
       - for classes that eliminate the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding"
        type="secondary"
      />
       by setting it to 
      <Tag
        code={true}
        text="0"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="1"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="@spacer * 0.25"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="2"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="@spacer * 0.5"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="3"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="@spacer"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="4"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="@spacer * 1.5"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="5"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       or 
      <Tag
        code={true}
        text="padding"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="@spacer * 3"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="auto"
        type="secondary"
      />
       - for classes that set 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="auto"
        type="secondary"
      />
    </li>
  </ul>
  <p>
    For margin you can also set negative 
    <i>
      size
    </i>
     (excluding 
    <Tag
      code={true}
      text="0"
      type="secondary"
    />
    ):
  </p>
  <ul>
    <li>
      <Tag
        code={true}
        text="n1"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="-@spacer * 0.25"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="n2"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="-@spacer * 0.5"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="n3"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="-@spacer"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="n4"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="-@spacer * 1.5"
        type="secondary"
      />
    </li>
    <li>
      <Tag
        code={true}
        text="n5"
        type="secondary"
      />
       - for classes that set the 
      <Tag
        code={true}
        text="margin"
        type="secondary"
      />
       to 
      <Tag
        code={true}
        text="-@spacer * 3"
        type="secondary"
      />
    </li>
  </ul>
  <p>
    (
    <Tag
      code={true}
      text="@spacer"
      type="secondary"
    />
     is set to 
    <Tag
      code={true}
      text="1rem (16px)"
      type="secondary"
    />
    )
  </p>
</section>
`;

exports[`Identity: Spacing TouchTarget renders 1`] = `
<section>
  <h2
    id="touch-target"
  >
    Touch target
  </h2>
  <p>
    On mobile devices, we have to consider the size of the different components to make sure that there is enough space in between interactive components such as: Links, buttons and other input actions to avoid miss clicks and errors. 
  </p>
  <p>
    A touch target area needs to be a certain size: 48*48 dp (distribution point) according to Android and 44 px minimum size according to iOS. Keep in mind this does not mean your component has to fill these area, even smaller components can work as long as the touch target area fulfills the size requirement.
  </p>
</section>
`;

exports[`Identity: Spacing VerticalSpacing renders 1`] = `
<section>
  <h2
    id="vertical-spacing"
  >
    Vertical spacing
  </h2>
  <p>
    Similar to horizontal spacing, we also use spacing vertically in order to create good vertical structure. While we don’t have strict usage definitions for each size, it is important to always evaluate what fits best in your context and what type of devices you are designing for. Make sure to group items relevant to each other close and separate sections with good amount of spacing to provide a clear separation.
  </p>
  <div
    className="d-flex flex-column align-items-center"
  >
    <img
      alt="Example on multiples of 8 px vertical spacing between elements"
      className="w-100"
      src="/TEST/img/documentation/spacing/vertical-spacing-example.svg"
    />
    <span
      className="caption-text"
    >
      <span
        className="font-weight-bold"
      >
        Figure 2.
      </span>
       Example on multiples of 8 px vertical spacing between elements
    </span>
  </div>
</section>
`;

exports[`Identity: Spacing renders 1`] = `
<DocContainer>
  <p
    className="lead"
  >
    Spacing helps us to align different components both vertically and horizontally. We follow a 8-point spacing system based on simple mathematical principles in order to create visual consistency and distinction between our elements.
  </p>
  <EightPointSystem />
  <VerticalSpacing />
  <TouchTarget />
  <BaseIncrementOfRem />
  <DiveDeeper />
  <HowItWorks />
  <Notation />
  <Examples />
</DocContainer>
`;
