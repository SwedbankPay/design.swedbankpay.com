{"version":3,"sources":["webpack:///./src/App/components/InputGroup/index.js","webpack:///./src/App/ComponentsDocumentation/components/InputGroup/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/classnames/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Addon","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","_ref","type","value","color","disabled","a","createElement","className","concat","aria-hidden","Feedback","_ref2","icon","InputGroup","_ref3","id","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","attrs","data-validate","inputGrpClasses","classnames","htmlFor","map","opt","i","key","length","Fragment","data-success","data-error","propTypes","PropTypes","string","isRequired","bool","oneOf","array","oneOfType","BasicExample","CheckboxesAndRadios","ButtonAddons","WithSelect","WithFeedbackIcon","ValidationStates","Disabled","_docutils__WEBPACK_IMPORTED_MODULE_1__","_components_InputGroup__WEBPACK_IMPORTED_MODULE_2__","_components_CodeTags__WEBPACK_IMPORTED_MODULE_3__","code","language","showCasePanel","codeFigure","removeOuterTag","docToc","__webpack_amd_options__","module","exports","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","_typeof","push","Array","isArray","inner","apply","call","join","default","define","undefined","__WEBPACK_AMD_DEFINE_RESULT__","window"],"mappings":"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","file":"scripts/doc-route.chunk_19.js?d703c59761168dfc0441","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport InputGroupComponent from \"@components/InputGroup\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst BasicExample = () => (\n    <>\n        <h2 id=\"basic-example\">Basic example</h2>\n        <p>\n            Add a <CodeTags type=\"primary\" code={\"<span>\"} /> with class <CodeTags type=\"secondary\" code=\".input-group-addon\"/> to get a gray box on the left,\n            right or both sides of an <CodeTags type=\"primary\" code={\"<input>\"} /> element. The position of\n            your <CodeTags type=\"secondary\" code=\".input-group-addon\"/> depends on if you place it before or after the <CodeTags type=\"primary\" code={\"<input\"} /> element.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure >\n            <InputGroupComponent\n                id=\"input-id-1\"\n                type=\"text\"\n                label=\"Name\"\n                placeholder=\"Name\"\n                prefixValue=\"Mr.\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                id=\"input-id-2\"\n                type=\"text\"\n                label=\"Email\"\n                placeholder=\"Email\"\n                prefixType=\"icon\"\n                prefixValue=\"email\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                id=\"input-id-3\"\n                type=\"number\"\n                label=\"Amount\"\n                placeholder=\"Rounded to nearest $\"\n                prefixType=\"icon\"\n                prefixValue=\"attach_money\"\n                postfixValue=\".00\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                id=\"input-id-4\"\n                type=\"textarea\"\n                label=\"Notes\"\n                placeholder=\"Special requests\"\n                prefixType=\"icon\"\n                prefixValue=\"format_quote\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst CheckboxesAndRadios = () => (\n    <>\n        <h2 id=\"checkboxes-and-radios\">Checkboxes and radios</h2>\n        <p>Place any checkbox or radio option within an input group’s addon instead of text.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"form-group\">\n                <div className=\"input-group\">{\"\\n\"}\n                    <span className=\"input-group-addon\">{\"\\n\\t\\t\"}\n                        <input type=\"checkbox\"/>{\"\\n\\t\"}\n                    </span>{\"\\n\"}\n                    <input type=\"text\" className=\"form-control\" />{\"\\n\"}\n                </div>\n            </div>{\"\\n\\n\"}\n            <div className=\"form-group\">\n                <div className=\"input-group\">{\"\\n\"}\n                    <span className=\"input-group-addon\">{\"\\n\\t\\t\"}\n                        <input type=\"radio\"/>{\"\\n\\t\"}\n                    </span>{\"\\n\"}\n                    <input type=\"text\" className=\"form-control\" />{\"\\n\"}\n                </div>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst ButtonAddons = () => (\n    <>\n        <h2 id=\"button-addons\">Button addons</h2>\n        <p>\n            If you want <CodeTags type=\"primary\" code={\"<button>\"} />s included with your input elements you can just add a <CodeTags type=\"primary\" code={\"<button>\"} /> inside\n            a input-group like you would anywhere else.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                type=\"text\"\n                postfixType=\"button\"\n                postfixValue=\"Button\"\n                postfixBtnColor=\"primary\"\n            /> {\"\\n\\n\"}\n            <InputGroupComponent\n                type=\"text\"\n                prefixType=\"button\"\n                prefixValue=\"Button\"\n                prefixBtnColor=\"secondary\"\n                postfixType=\"button\"\n                postfixValue=\"Button\"\n                postfixBtnColor=\"primary\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst WithSelect = () => (\n    <>\n        <h2 id=\"with-select\">With select</h2>\n        <p>\n            Inserting text next to a <CodeTags type=\"primary\" code={\"<select>\"} /> works just like any other input element.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                type=\"select\"\n                selectOptions={[\"Bounty hunter\", \"Smuggler\", \"Jedi\"]}\n                prefixValue=\"Profession\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst WithFeedbackIcon = () => (\n    <>\n        <h2 id=\"with-feedback\">With feedback</h2>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                id=\"input-with-feedback-1\"\n                type=\"text\"\n                label=\"Name\"\n                placeholder=\"Name\"\n                prefixValue=\"Mr.\"\n                feedbackIcon=\"cancel\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst ValidationStates = () => (\n    <>\n        <h2 id=\"validation-states\">Validation states</h2>\n        <p>\n            You can also visualize validation on your input-groups. Just\n            add <CodeTags type=\"secondary\" code=\".has-success\" /> or <CodeTags type=\"secondary\" code=\".has-error\" /> with\n            a <CodeTags type=\"secondary\" code=\".input-group\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                type=\"text\"\n                validationState=\"error\"\n                placeholder=\"Name\"\n                prefixValue=\"Agent\"\n                defaultValue=\"Smith\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst Disabled = () => (\n    <>\n        <h2 id=\"disabled\">Disabled</h2>\n        <p>\n            Just like for forms you can add <CodeTags type=\"secondary\" code=\"disabled\" /> to an input element to disable it.\n            If you are going to disable an element in a <CodeTags type=\"secondary\" code=\".input-group\" /> make sure to also add the <CodeTags type=\"secondary\" code=\"disabled\"/> attribute to the buttons.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <InputGroupComponent\n                id=\"input-id-3\"\n                type=\"number\"\n                label=\"Amount\"\n                placeholder=\"Rounded to nearest $\"\n                disabled\n                prefixType=\"icon\"\n                prefixValue=\"attach_money\"\n                postfixValue=\".00\"\n            />\n            <InputGroupComponent\n                type=\"text\"\n                disabled\n                prefixType=\"button\"\n                prefixValue=\"Button\"\n                prefixBtnColor=\"secondary\"\n                postfixType=\"button\"\n                postfixValue=\"Button\"\n                postfixBtnColor=\"primary\"\n            />\n        </ComponentPreview>\n    </>\n);\n\nconst InputGroup = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">\n            You can include additional information to specific input elements by adding <CodeTags type=\"primary\" code={\"<span>\"} />s\n            or <CodeTags type=\"primary\" code={\"<button>\"} />s in a <CodeTags type=\"secondary\" code=\".input-group\" />.\n        </p>\n        <BasicExample />\n        <ButtonAddons />\n        <WithSelect />\n        <ValidationStates />\n        <Disabled />\n    </DocContainer>\n);\n\nexport default InputGroup;\n\n/* For testing */\nexport { BasicExample, CheckboxesAndRadios, ButtonAddons, WithSelect, WithFeedbackIcon, ValidationStates, Disabled };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}