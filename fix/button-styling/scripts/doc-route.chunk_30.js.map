{"version":3,"sources":["webpack:///./src/App/ComponentsDocumentation/components/Status/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Overview","ExampleUse","ExtendedUsage","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_docutils__WEBPACK_IMPORTED_MODULE_1__","_components_CodeTags__WEBPACK_IMPORTED_MODULE_2__","a","createElement","Fragment","id","type","code","language","showCasePanel","codeFigure","removeList","className","scope","Status","docToc"],"mappings":"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","file":"scripts/doc-route.chunk_30.js?5079000c3a5519045bda","sourcesContent":["import React from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>\n            Be aware of what color you use when deciding what message you want to convey. A completion status should not use a warning or danger status,\n            that is why <CodeTags type=\"secondary\" code=\".status-success\" /> exists. <b>NOTE:</b> Be careful not to rely solely on the color of the status icon to convey\n            your message.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeList>\n            <ul className=\"list status-list\">\n                <li>\n                    <span className=\"status status-neutral\">Neutral</span>\n                </li>\n                <li>\n                    <span className=\"status status-success\">Success</span>\n                </li>\n                <li>\n                    <span className=\"status status-warning\">Mild Warning</span>\n                </li>\n                <li>\n                    <span className=\"status status-warning-2\">Warning</span>\n                </li>\n                <li>\n                    <span className=\"status status-danger\">Danger</span>\n                </li>\n            </ul>\n        </ComponentPreview>\n    </>\n);\n\nconst ExampleUse = () => (\n    <>\n        <h2 id=\"example-use\">Example of use</h2>\n        <ComponentPreview language=\"html\" showCasePanel >\n            <table className=\"table table-plain\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\">Invoice number</th>\n                        <th scope=\"col\">Due date</th>\n                        <th className=\"text-right\" scope=\"col\">Amount</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td><span className=\"status status-neutral\">Unpaid</span></td>\n                        <td>123456</td>\n                        <td>2020-08-19</td>\n                        <td className=\"text-right\">1079,00</td>\n                    </tr>\n                    <tr>\n                        <td><span className=\"status status-success\">Paid</span></td>\n                        <td>123455</td>\n                        <td>2020-07-19</td>\n                        <td className=\"text-right\">1079,00</td>\n                    </tr>\n                    <tr>\n                        <td><span className=\"status status-warning\">Overdue</span></td>\n                        <td>123454</td>\n                        <td>2020-06-19</td>\n                        <td className=\"text-right\">1079,00</td>\n                    </tr>\n                    <tr>\n                        <td><span className=\"status status-warning-2\">Reminder</span></td>\n                        <td>123453</td>\n                        <td>2020-05-19</td>\n                        <td className=\"text-right\">1079,00</td>\n                    </tr>\n                    <tr>\n                        <td><span className=\"status status-danger\">Sent to collection</span></td>\n                        <td>123452</td>\n                        <td>2020-04-19</td>\n                        <td className=\"text-right\">1079,00</td>\n                    </tr>\n                </tbody>\n            </table>\n        </ComponentPreview>\n    </>\n);\n\nconst ExtendedUsage = () => (\n    <>\n        <h2 id=\"extended-usage\">Extended usage</h2>\n        <p>\n            The status component inherits the size of its direct parent.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1 className=\"status status-neutral\">Neutral</h1>\n            <h2 className=\"status status-success\">Success</h2>\n            <h3 className=\"status status-warning\">Mild Warning</h3>\n            <h4 className=\"status status-warning-2\">Warning</h4>\n            <h5 className=\"status status-danger\">Danger</h5>\n        </ComponentPreview>\n    </>\n);\n\nconst Status = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">\n            The status component is a good way to convey to the user the state of something.\n        </p>\n        <Overview />\n        <ExampleUse />\n        <ExtendedUsage />\n    </DocContainer>\n);\n\nexport default Status;\n\n/* For testing */\nexport { Overview, ExampleUse, ExtendedUsage };\n"],"sourceRoot":""}