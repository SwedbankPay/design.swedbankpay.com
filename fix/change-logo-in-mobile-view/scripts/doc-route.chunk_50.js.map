{"version":3,"sources":["webpack:///./src/App/components/InputGroup/index.js","webpack:///./src/App/components/FormComponents/Checkbox.js","webpack:///./src/App/components/FormComponents/Datepicker.js","webpack:///./src/App/components/FormComponents/FormControlText.js","webpack:///./src/App/components/FormComponents/Radio.js","webpack:///./src/App/components/FormComponents/Rangeslider.js","webpack:///./src/App/components/FormComponents/Togglebox.js","webpack:///./src/App/components/FormComponents/index.js","webpack:///./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedSettings/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/classnames/index.js"],"names":["Addon","type","value","color","disabled","className","aria-hidden","Feedback","icon","InputGroup","id","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","attrs","inputGrpClasses","classnames","htmlFor","map","opt","i","key","length","data-success","data-error","propTypes","PropTypes","string","isRequired","bool","oneOf","array","oneOfType","Checkbox","checked","defaultChecked","Datepicker","format","time","min","max","months","fulldate","mode","allowinput","FormControlText","text","Radio","name","Rangeslider","step","valueLabel","valueLabelPrefix","valueLabelPostfix","valueLabelPosition","data-rs-value","number","Togglebox","CustomersDetailedSettings","Array","keys","item","module","exports","__webpack_amd_options__","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","isArray","inner","apply","call","join","default","define","window"],"mappings":"iGAAA,iGAIaA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAvB,MACP,WAATH,EACG,4BAAQA,KAAK,SAASI,UAAS,kBAAaF,GAASC,SAAUA,GAC1DF,GAEH,0BAAMG,UAAU,qBAA+B,SAATJ,EAAmB,uBAAGI,UAAU,iBAAiBC,cAAY,QAAQJ,GAAaA,IAG5HK,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACb,0BAAMH,UAAU,yBAAyB,SACrC,uBAAGA,UAAU,iBAAiBC,cAAY,QAAQE,GAAU,SAI9DC,EAAa,SAAC,GAwBd,IAvBFC,EAuBE,EAvBFA,GACAT,EAsBE,EAtBFA,KACAU,EAqBE,EArBFA,YACAC,EAoBE,EApBFA,QACAC,EAmBE,EAnBFA,SACAC,EAkBE,EAlBFA,SACAC,EAiBE,EAjBFA,aACAC,EAgBE,EAhBFA,aACAZ,EAeE,EAfFA,SACAa,EAcE,EAdFA,SACAC,EAaE,EAbFA,MACAC,EAYE,EAZFA,gBACAC,EAWE,EAXFA,cACAC,EAUE,EAVFA,YACAC,EASE,EATFA,WACAC,EAQE,EARFA,eACAC,EAOE,EAPFA,aACAC,EAME,EANFA,YACAC,EAKE,EALFA,gBACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,aACAC,EACE,EADFA,eAEMC,EAAQ,CACV9B,KAAMA,GAAQ,KACdI,UAAW,eACXK,GAAIA,GAAM,KACVC,YAAaA,GAAe,KAC5BI,aAAcA,GAAgB,GAC9BX,SAAUA,GAAY,KACtBa,SAAUA,GAAY,KACtBD,aAAcA,GAAgB,KAC9BF,SAAUA,GAAY,KACtBF,QAASA,EAAU,GAAK,KACxB,gBAAiBC,EAAW,GAAK,MAG/BmB,EAAkBC,IACpB,cACAd,EAAkB,OAAH,OAAUA,GAAoB,KAC7CQ,EAAe,eAAiB,MAGpC,OACI,yBAAKtB,UAAS,oBAAeD,EAAW,YAAc,KAAO,KACxDc,EAAQ,2BAAOgB,QAASxB,GAAKQ,GAAiB,KAAMA,EAAQ,KAAO,KACnEG,GAAeG,GAAgBG,EAC5B,yBAAKtB,UAAW2B,GAAkB,KAC7BX,EAAc,kBAACrB,EAAD,CAAOC,KAAMqB,EAAYpB,MAAOmB,EAAalB,MAAOoB,EAAgBnB,SAAUA,IAAe,KAAOiB,EAAc,KAAO,KAC9H,aAATpB,EACG,6BAAc8B,GACH,WAAT9B,EACE,4BAAQI,UAAU,eAAeD,SAAUA,EAAUa,SAAUA,GAAW,SACrEG,EAAce,IAAI,SAACC,EAAKC,GAAN,OACf,kBAAC,WAAD,CAAUC,IAAKF,EAAMC,GACjB,gCAASD,GAAeC,IAAMjB,EAAcmB,OAAS,EAAK,SAAW,MAEzE,QAGR,0BAAWR,GAClB,KACAJ,EAAe,kBAACpB,EAAD,CAAUC,KAAMmB,IAAmB,KAfvD,IAe8DA,EAAe,KAAO,KAC/EH,EAAe,kBAACxB,EAAD,CAAOC,KAAMwB,EAAavB,MAAOsB,EAAcrB,MAAOuB,EAAiBtB,SAAUA,IAAe,KAAOoB,EAAe,KAAO,MAGjJ,oCACc,aAATvB,EACG,6BAAc8B,GACH,WAAT9B,EACE,4BAAQI,UAAU,eAAeD,SAAUA,EAAUa,SAAUA,GAAW,SACrEG,EAAce,IAAI,SAACC,EAAKC,GAAN,OACf,kBAAC,WAAD,CAAUC,IAAKF,EAAMC,GACjB,gCAASD,GAAeC,IAAMjB,EAAcmB,OAAS,EAAK,SAAW,MAEzE,QAGR,0BAAWR,IAG1BH,EAAY,yBAAKvB,UAAU,aAAamC,eAAcV,GAAkB,KAAMW,aAAYZ,GAAgB,MAAOD,GAAmB,OAKjJnB,EAAWiC,UAAY,CACnBzC,KAAM0C,IAAUC,OAAOC,WACvBnC,GAAIiC,IAAUC,OACdjC,YAAagC,IAAUC,OACvBhC,QAAS+B,IAAUC,OACnB/B,SAAU8B,IAAUG,KACpBhC,SAAU6B,IAAUG,KACpB/B,aAAc4B,IAAUC,OACxB5B,aAAc2B,IAAUC,OACxBxC,SAAUuC,IAAUG,KACpB7B,SAAU0B,IAAUG,KACpB5B,MAAOyB,IAAUC,OACjBzB,gBAAiBwB,IAAUI,MAAM,CAAC,QAAS,KAC3C3B,cAAeuB,IAAUK,MACzB3B,YAAasB,IAAUC,OACvBtB,WAAYqB,IAAUI,MAAM,CAAC,SAAU,OAAQ,KAC/CxB,eAAgBoB,IAAUI,MAAM,CAAC,UAAW,cAC5CvB,aAAcmB,IAAUC,OACxBnB,YAAakB,IAAUI,MAAM,CAAC,SAAU,OAAQ,KAChDrB,gBAAiBiB,IAAUI,MAAM,CAAC,UAAW,cAC7CpB,aAAcgB,IAAUC,OACxBhB,UAAWe,IAAUM,UAAU,CAC3BN,IAAUC,OACVD,IAAUG,OAEdjB,aAAcc,IAAUC,OACxBd,eAAgBa,IAAUC,QAGfnC,a,4ECpITyC,EAAW,SAAC,GAAqC,IAAnCxC,EAAmC,EAAnCA,GAAIyC,EAA+B,EAA/BA,QAAS/C,EAAsB,EAAtBA,SAAUc,EAAY,EAAZA,MACjCa,EAAQ,CACV9B,KAAM,WACNS,GAAIA,GAAM,KACVN,SAAUA,GAAY,KACtBgD,eAAgBD,GAAW,MAG/B,OACI,yBAAK9C,UAAU,YAAY,KACvB,0BAAW0B,GAAU,KACpBb,EAAQ,2BAAOgB,QAASxB,GAAKQ,GAAiB,KAAMA,EAAQ,KAAO,OAKhFgC,EAASR,UAAY,CACjBhC,GAAIiC,IAAUC,OACdO,QAASR,IAAUG,KACnB1C,SAAUuC,IAAUG,KACpB5B,MAAOyB,IAAUC,QAGNM,Q,SCtBTG,EAAa,SAAC,GAAwH,IAAtHC,EAAsH,EAAtHA,OAAQC,EAA8G,EAA9GA,KAAMC,EAAwG,EAAxGA,IAAKC,EAAmG,EAAnGA,IAAKC,EAA8F,EAA9FA,OAAQxD,EAAsF,EAAtFA,MAAOgB,EAA+E,EAA/EA,MAAOG,EAAwE,EAAxEA,YAAaC,EAA2D,EAA3DA,WAAYqC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAAY/C,EAAmB,EAAnBA,SAAUJ,EAAS,EAATA,GACzHqB,EAAQ,CACVrB,KACAL,UAAW,eACXJ,KAAM,OACN,kBAAmB,GACnB,yBAA0BqD,GAAU,KACpC,uBAAwBC,GAAQ,KAChC,sBAAuBC,GAAO,KAC9B,sBAAuBC,GAAO,KAC9B,wBAAyBvD,GAAS,KAClC,yBAA0BwD,GAAU,KACpC,2BAA4BC,GAAY,KACxC,uBAAwBC,GAAQ,KAChC,6BAA8BC,GAAc,KAC5C,gBAAiB/C,GAAY,MAGjC,OACII,EACI,yBAAKb,UAAU,cAAc,KACzB,2BAAO6B,QAASxB,GAAM,MAAOQ,GAAe,KAC5C,yBAAKb,UAAU,eAAe,KACzBgB,EAAc,kBAAC,QAAD,CAAOpB,KAAOqB,EAAapB,MAAQmB,IAAmB,KAAM,KAC3E,0BAAWU,GAAU,OAG7B,0BAAWA,IAGvBsB,EAAWX,UAAY,CACnBY,OAAQX,IAAUI,MAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,YACvDQ,KAAMZ,IAAUG,KAChBU,IAAKb,IAAUC,OACfa,IAAKd,IAAUC,OACfc,OAAQf,IAAUC,OAClB1C,MAAOyC,IAAUC,OACjB1B,MAAOyB,IAAUC,OACjBlC,GAAIiC,IAAUC,OACd9B,SAAU6B,IAAUG,MAGTO,QC3CTS,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAM7C,EAAT,EAASA,MAAT,OACpB,yBAAKb,UAAU,cAAc,KACxBa,EAAQ,+BAAQA,GAAiB,KAAMA,EAAQ,KAAO,KACvD,0BAAMb,UAAU,qBAAqB0D,GAAa,OAI1DD,EAAgBpB,UAAY,CACxBqB,KAAMpB,IAAUC,OAAOC,WACvB3B,MAAOyB,IAAUC,QAGNkB,QCZTE,EAAQ,SAAC,GAA2C,IAAzCtD,EAAyC,EAAzCA,GAAIyC,EAAqC,EAArCA,QAAS/C,EAA4B,EAA5BA,SAAUc,EAAkB,EAAlBA,MAC9Ba,EAAQ,CACV9B,KAAM,QACNS,GAAIA,GAAM,KACVuD,KAJkD,EAAXA,MAIzB,KACd7D,SAAUA,GAAY,KACtBgD,eAAgBD,GAAW,MAG/B,OACI,yBAAK9C,UAAU,SAAS,KACpB,0BAAW0B,GAAU,KACpBb,EAAQ,2BAAOgB,QAASxB,GAAKQ,GAAiB,KAAMA,EAAQ,KAAO,OAKhF8C,EAAMtB,UAAY,CACdhC,GAAIiC,IAAUC,OACdqB,KAAMtB,IAAUC,OAChBO,QAASR,IAAUG,KACnB1C,SAAUuC,IAAUG,KACpB5B,MAAOyB,IAAUC,QAGNoB,QCzBTE,EAAc,SAAC,GAA0H,IAAxHD,EAAwH,EAAxHA,KAAMT,EAAkH,EAAlHA,IAAKC,EAA6G,EAA7GA,IAAKU,EAAwG,EAAxGA,KAAMhE,EAAkG,EAAlGA,MAAOD,EAA2F,EAA3FA,MAAOE,EAAoF,EAApFA,SAAUgE,EAA0E,EAA1EA,WAAYC,EAA8D,EAA9DA,iBAAkBC,EAA4C,EAA5CA,kBAAmBC,EAAyB,EAAzBA,mBAC5GxC,EAAQ,CACV9B,KAAM,QACNgE,OACAT,MACAC,MACAU,OACApD,aAAcb,EACdE,YAaJ,OACI,yBAAKC,UAAS,kCAA6BF,GAAgB,QAA7C,kBAA8DoE,GAA0C,UAAY,KAC9H,0BAAWxC,GAASqC,EAAa,KAAO,KACvCA,EAAa,kBAbH,kBACf,4BAAQ/D,UAAU,eAAgB,SAC9B,2BAAI,WACCgE,EAAmB,8BAAOA,GAA2B,KAAMA,EAAmB,WAAa,KAC5F,0BAAMG,iBAAA,GAAetE,GAAc,WAClCoE,EAAoB,8BAAOA,GAA4B,KAAMA,EAAoB,SAAW,MAC5F,SAOS,MAAiB,KAAMF,EAAa,KAAO,OAKrEF,EAAYxB,UAAY,CACpBuB,KAAMtB,IAAUC,OAChBY,IAAKb,IAAU8B,OACfhB,IAAKd,IAAU8B,OACfN,KAAMxB,IAAU8B,OAChBtE,MAAOwC,IAAUI,MAAM,CAAC,QAAS,UAAW,YAC5C7C,MAAOyC,IAAU8B,OACjBrE,SAAUuC,IAAUG,KACpBsB,WAAYzB,IAAUG,KACtBuB,iBAAkB1B,IAAUC,OAC5B0B,kBAAmB3B,IAAUC,OAC7B2B,mBAAoB5B,IAAUC,QAGnBsB,QC3CTQ,EAAY,SAAC,GAAqC,IAAnChE,EAAmC,EAAnCA,GAAIyC,EAA+B,EAA/BA,QAAS/C,EAAsB,EAAtBA,SAAUc,EAAY,EAAZA,MAClCa,EAAQ,CACV9B,KAAM,WACNS,GAAIA,GAAM,KACVN,SAAUA,GAAY,KACtBgD,eAAgBD,GAAW,MAG/B,OACI,yBAAK9C,UAAU,aAAa,KACxB,0BAAW0B,GAAU,KACpBb,EAAQ,2BAAOgB,QAASxB,GAAKQ,GAAiB,KAAMA,EAAQ,KAAO,OAKhFwD,EAAUhC,UAAY,CAClBhC,GAAIiC,IAAUC,OACdO,QAASR,IAAUG,KACnB1C,SAAUuC,IAAUG,KACpB5B,MAAOyB,IAAUC,QAGN8B,QC1Bf,oPAOe,WACXxB,WACAG,aACAS,kBACAE,QACAE,cACAQ,c,maC2BWC,UAnCmB,kBAC9B,oCACI,6CACA,yBAAKtE,UAAU,mCACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,sBACX,kBAAC,YAAD,CAAWK,GAAG,uCAAuCyC,SAAO,EAACjC,MAAM,4BACnE,kBAAC,YAAD,CAAWR,GAAG,uCAAuCQ,MAAM,iCAGnE,yBAAKb,UAAU,mBACX,kBAAC,YAAD,CAAWK,GAAG,uCAAuCQ,MAAM,yBAC3D,kBAAC,YAAD,CAAWR,GAAG,uCAAuCyC,SAAO,EAACjC,MAAM,6BAG3E,0DACA,yBAAKb,UAAU,YACV,EAAIuE,MAAM,GAAGC,QAAQ1C,IAAI,SAAA2C,GAAI,OAC1B,yBAAKxC,IAAKwC,EAAMzE,UAAU,8BACtB,kBAAC,WAAD,CAAUK,GAAE,+CAA0CoE,GAAQ3B,SAAO,EAACjC,MAAK,wBAAmB4D,EAAO,SAKjH,6CACA,kBAAC,UAAD,CACI7E,KAAK,SACLmB,cAAe,CAAC,qBAAsB,sBAAuB,qBAC7DC,YAAY,SAGhB,4BAAQhB,UAAU,mBAAlB,W,mBCpCR,YACA0E,EAAOC,QAAUC,I;;;;;;;;;;;CCMhB,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELhD,EAAI,EAAGA,EAAIiD,UAAU/C,OAAQF,IAAK,CAC1C,IAAIkD,EAAMD,UAAUjD,GACpB,GAAKkD,EAAL,CAEA,IAAIC,EAAU,EAAOD,GAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BH,EAAQI,KAAKF,QACP,GAAIX,MAAMc,QAAQH,IAAQA,EAAIhD,OAAQ,CAC5C,IAAIoD,EAAQP,EAAWQ,MAAM,KAAML,GAC/BI,GACHN,EAAQI,KAAKE,QAER,GAAgB,WAAZH,EACV,IAAK,IAAIlD,KAAOiD,EACXL,EAAOW,KAAKN,EAAKjD,IAAQiD,EAAIjD,IAChC+C,EAAQI,KAAKnD,IAMjB,OAAO+C,EAAQS,KAAK,KAGgBf,EAAOC,SAC3CI,EAAWW,QAAUX,EACrBL,EAAOC,QAAUI,GAC+C,WAAtB,EAAOY,SAA2BA,YAEtE,kBACL,OAAOZ,GADF,QAAe,OAAf,aAINa,OAAOb,WAAaA,EA1CrB","file":"scripts/doc-route.chunk_50.js?1a3e7c310d0f4dd1d979","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, id }) => {\n    const attrs = {\n        id,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, name }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"radio\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ name, min, max, step, color, value, disabled, valueLabel, valueLabelPrefix, valueLabelPostfix, valueLabelPosition }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    const ValueLabel = () => (\n        <output className=\"value-label\" >{\"\\n\\t\\t\"}\n            <p>{\"\\n\\t\\t\\t\"}\n                {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n            </p>{\"\\n\\t\"}\n        </output>\n    );\n\n    return (\n        <div className={`rangeslider rangeslider-${color ? color : \"brand\"} label-${valueLabelPosition ? valueLabelPosition : \"right\"}`}>{\"\\n\"}\n            <input {...attrs}/>{valueLabel ? \"\\n\" : null}\n            {valueLabel ? <ValueLabel /> : null}{valueLabel ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    color: PropTypes.oneOf([\"brand\", \"neutral\", \"default\"]),\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabel: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string,\n    valueLabelPosition: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"togglebox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Rangeslider from \"./Rangeslider\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Rangeslider,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Rangeslider, Togglebox };\n","import React from \"react\";\n\nimport { Togglebox, Checkbox } from \"@components/FormComponents\";\nimport InputGroup from \"@components/InputGroup\";\n\nconst CustomersDetailedSettings = () => (\n    <>\n        <h3>Notifications</h3>\n        <div className=\"row justify-content-around mt-3\">\n            <div className=\"col-lg-auto m-2\">\n                <div className=\"d-flex flex-column\">\n                    <Togglebox id=\"customers-detailed-settings-toggle-1\" checked label=\"Delivery status changes\" />\n                    <Togglebox id=\"customers-detailed-settings-toggle-3\" label=\"Critical delivery messages\" />\n                </div>\n            </div>\n            <div className=\"col-lg-auto m-2\">\n                <Togglebox id=\"customers-detailed-settings-toggle-2\" label=\"New inquiry messages\" />\n                <Togglebox id=\"customers-detailed-settings-toggle-4\" checked label=\"Inquiry status changes\" />\n            </div>\n        </div>\n        <h3>Newsletter and information</h3>\n        <div className=\"row mt-4\">\n            {[...Array(7).keys()].map(item => (\n                <div key={item} className=\"col-lg-3 col-md-4 col-sm-6\">\n                    <Checkbox id={`customers-detailed-settings-checkbox-${item}`} checked label={`Subscription #${item + 1}`} />\n                </div>\n            ))}\n        </div>\n\n        <h3>Customer type</h3>\n        <InputGroup\n            type=\"select\"\n            selectOptions={[\"Long-term contract\", \"Short-term contract\", \"One time purchase\"]}\n            prefixValue=\"Type\"\n        />\n\n        <button className=\"btn btn-primary\">Save</button>\n    </>\n);\n\nexport default CustomersDetailedSettings;\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}