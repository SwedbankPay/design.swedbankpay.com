{"version":3,"sources":["webpack:///./src/App/components/InputGroup/index.js","webpack:///./src/App/components/Button/index.js","webpack:///./src/App/components/FormComponents/Checkbox.js","webpack:///./src/App/components/FormComponents/Datepicker.js","webpack:///./src/App/components/FormComponents/FormControlText.js","webpack:///./src/App/components/FormComponents/Radio.js","webpack:///./src/App/components/FormComponents/Rangeslider.js","webpack:///./src/App/components/FormComponents/Togglebox.js","webpack:///./src/App/components/FormComponents/index.js","webpack:///./src/App/components/MediaObject/index.js","webpack:///./src/App/Examples/examples/settings/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/classnames/index.js"],"names":["Addon","type","value","color","disabled","className","aria-hidden","Feedback","icon","InputGroup","id","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnColor","postfixValue","postfixType","postfixBtnColor","feedbackIcon","helpBlock","errorMessage","successMessage","attrs","inputGrpClasses","classnames","htmlFor","map","opt","i","key","length","data-success","data-error","propTypes","PropTypes","string","isRequired","bool","oneOf","array","oneOfType","Button","name","href","loading","btnType","fullWidth","pullRight","input","active","size","bankId","btnClasses","role","tabIndex","loader","Checkbox","checked","defaultChecked","Datepicker","format","time","min","max","months","fulldate","mode","allowinput","FormControlText","text","Radio","Rangeslider","step","valueLabel","valueLabelPrefix","valueLabelPostfix","valueLabelPosition","data-rs-value","number","Togglebox","MediaObject","imgUrl","heading","textSmall","mediaRight","muted","mediaClasses","iconClasses","src","headingClasses","mediaHeading","rangeslider","window","dg","SettingsBasic","SettingsEmailNotification","emailNotif","toggleEmailNotif","useEffect","init","onChange","SettingsDescription","SettingsHeader","Settings","props","state","Component","this","setState","language","showCasePanel","codeFigure","func","module","exports","__webpack_amd_options__","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","Array","isArray","inner","apply","call","join","default","define"],"mappings":"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","file":"scripts/doc-route.chunk_56.js?1a3e7c310d0f4dd1d979","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport const Addon = ({ type, value, color, disabled }) => (\n    (type === \"button\") ?\n        <button type=\"button\" className={`btn btn-${color}`} disabled={disabled}>\n            {value}\n        </button>\n        : <span className=\"input-group-addon\">{(type === \"icon\") ? <i className=\"material-icons\" aria-hidden=\"true\">{value}</i> : value}</span>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnColor,\n    postfixValue,\n    postfixType,\n    postfixBtnColor,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className={`form-group${disabled ? \" disabled\" : \"\"}`}>{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            {prefixValue || postfixValue || feedbackIcon ?\n                <div className={inputGrpClasses}>{\"\\n\"}\n                    {prefixValue ? <Addon type={prefixType} value={prefixValue} color={prefixBtnColor} disabled={disabled} /> : null }{prefixValue ? \"\\n\" : null}\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                    {\"\\n\"}\n                    {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                    {postfixValue ? <Addon type={postfixType} value={postfixValue} color={postfixBtnColor} disabled={disabled} /> : null }{postfixValue ? \"\\n\" : null}\n                </div>\n                :\n                <>\n                    {type === \"textarea\" ?\n                        <textarea {...attrs}></textarea>\n                        : type === \"select\" ?\n                            <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                                {selectOptions.map((opt, i) => (\n                                    <Fragment key={opt + i}>\n                                        <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                    </Fragment>\n                                ))}{\"\\n\\t\"}\n                            </select>\n                            :\n                            <input {...attrs} />}\n                </>\n            }\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessage: PropTypes.string,\n    successMessage: PropTypes.string\n};\n\nexport default InputGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon } from \"@components/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, id }) => {\n    const attrs = {\n        id,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {prefixValue ? <Addon type={ prefixType } value={ prefixValue } /> : null}{\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, name }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"radio\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ name, min, max, step, color, value, disabled, valueLabel, valueLabelPrefix, valueLabelPostfix, valueLabelPosition }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    const ValueLabel = () => (\n        <output className=\"value-label\" >{\"\\n\\t\\t\"}\n            <p>{\"\\n\\t\\t\\t\"}\n                {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n            </p>{\"\\n\\t\"}\n        </output>\n    );\n\n    return (\n        <div className={`rangeslider rangeslider-${color ? color : \"brand\"} label-${valueLabelPosition ? valueLabelPosition : \"right\"}`}>{\"\\n\"}\n            <input {...attrs}/>{valueLabel ? \"\\n\" : null}\n            {valueLabel ? <ValueLabel /> : null}{valueLabel ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    color: PropTypes.oneOf([\"brand\", \"neutral\", \"default\"]),\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabel: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string,\n    valueLabelPosition: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"togglebox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Rangeslider from \"./Rangeslider\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Rangeslider,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Rangeslider, Togglebox };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst MediaObject = ({ size, imgUrl, icon, heading, text, textSmall, mediaRight, muted }) => {\n    const mediaHeading = () => {\n        const headingClasses = classnames(muted ? \"text-muted\" : null);\n\n        switch (size) {\n            case \"sm\":\n                return <h4 className={headingClasses}>{heading}</h4>;\n            case \"lg\":\n                return <h2 className={headingClasses}>{heading}</h2>;\n            default:\n                return <h3 className={headingClasses}>{heading}</h3>;\n        }\n    };\n\n    const mediaClasses = classnames(\n        \"media\",\n        mediaRight ? \"media-right\" : null,\n        size ? `media-${size}` : null\n    );\n\n    const iconClasses = classnames(\n        \"material-icons\",\n        muted ? \"text-muted\" : null\n    );\n\n    return (\n        <div className={mediaClasses}>\n            {(imgUrl || icon) ?\n                <div className=\"media-img\">{\"\\n\"}\n                    {imgUrl ? <> <img src={imgUrl} /> {\"\\n\"} </> : null}\n                    {icon ? <> <i className={iconClasses} aria-hidden=\"true\">{icon}</i> {\"\\n\"} </> : null}\n                </div>\n                : null}\n            <div className=\"media-body\">\n                {mediaHeading()}\n                <p>{textSmall ? <small>{text}</small> : text}</p>\n            </div>\n        </div>\n    );\n};\n\nMediaObject.propTypes = {\n    size: PropTypes.oneOf([\"sm\", \"lg\"]),\n    imgUrl: PropTypes.string,\n    icon: PropTypes.string,\n    heading: PropTypes.string.isRequired,\n    text: PropTypes.string,\n    textSmall: PropTypes.bool,\n    mediaRight: PropTypes.bool,\n    muted: PropTypes.bool\n};\n\nexport default MediaObject;\n","import React, { Component, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DocContainer, ComponentPreview } from \"@docutils\";\n\nimport InputGroup from \"@components/InputGroup\";\nimport ButtonComponent from \"@components/Button\";\nimport { Rangeslider, Radio } from \"@components/FormComponents\";\nimport MediaObjectComponent from \"@components/MediaObject\";\n\nconst { rangeslider } = window.dg;\n\nconst SettingsBasic = () => (\n    <>\n        <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <InputGroup\n                    id=\"validation-firstname\"\n                    type=\"text\"\n                    label=\"First name\"\n                    placeholder=\"John\"\n                />\n            </div>\n            <div className=\"col-lg-6\">\n                <InputGroup\n                    id=\"validation-lastname\"\n                    type=\"text\"\n                    label=\"Last name\"\n                    placeholder=\"Smith\"\n                />\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-lg-12\">\n                <InputGroup\n                    id=\"validation-email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"john.smith@email.com\"\n                    prefixType=\"icon\"\n                    prefixValue=\"email\"\n                />\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <InputGroup\n                    id=\"validation-password\"\n                    type=\"password\"\n                    label=\"Password\"\n                    placeholder=\"***********\"\n                    prefixType=\"icon\"\n                    prefixValue=\"vpn_key\"\n                />\n            </div>\n            <div className=\"col-lg-6\">\n                <InputGroup\n                    id=\"validation-confirm-password\"\n                    type=\"password\"\n                    label=\"Confirm password\"\n                    placeholder=\"***********\"\n                    prefixType=\"icon\"\n                    prefixValue=\"vpn_key\"\n                />\n            </div>\n        </div>\n    </>\n);\n\nconst SettingsEmailNotification = ({ emailNotif, toggleEmailNotif }) => {\n\n    useEffect(() => {\n        rangeslider.init();\n    });\n\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-lg-6\">\n                <div className=\"togglebox\" >\n                    <input type=\"checkbox\" id=\"togglebox-settings-email\" checked={emailNotif} onChange={toggleEmailNotif} />\n                    <label htmlFor=\"togglebox-settings-email\">Email notifications</label>\n                </div>\n            </div>\n            <div className=\"col-lg-6\">\n                <label className=\"d-none d-lg-block\">Email notification frequency</label>\n                <Rangeslider min={1} max={50} step={1} value={7} valueLabel valueLabelPrefix=\"Every\" valueLabelPostfix=\"days\" disabled={!emailNotif} />\n            </div>\n        </div>\n\n    );\n};\n\nconst SettingsDescription = () => (\n    <>\n        <fieldset className=\"mt-5 mb-5\">\n            <legend>Public settings</legend>\n            <InputGroup\n                id=\"settings-description\"\n                type=\"textarea\"\n                label=\"Profile description\"\n                placeholder=\"This profile description is an example to be followed\"\n                prefixType=\"icon\"\n                prefixValue=\"format_quote\"\n            />\n            <InputGroup\n                label=\"User Status\"\n                type=\"select\"\n                selectOptions={[\"Available\", \"Away\", \"On break\", \"Not Available\"]}\n                prefixValue=\"Status\"\n            />\n            <label>Profile visibility</label>\n            <Radio label=\"Visible to all\" id=\"settings-radio-1\" name=\"settings-radio\" checked />\n            <Radio label=\"Visible to accepted contacts only\" id=\"settings-radio-2\" name=\"settings-radio\" />\n            <Radio label=\"Hidden\" id=\"settings-radio-3\" name=\"settings-radio\" />\n        </fieldset>\n    </>\n);\n\nconst SettingsHeader = () => (\n    <header>\n        <div className=\"row\">\n            <div className=\"col-auto mr-auto\">\n                <h2 className=\"panel-title\">Profile settings</h2>\n            </div>\n            <div className=\"col-auto\">\n                <MediaObjectComponent size=\"sm\" icon=\"account_circle\" heading=\"John Smith\" text=\"john.smith@email.com\" />\n            </div>\n        </div>\n    </header>\n);\n\nclass Settings extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            emailNotif: true\n        };\n\n    }\n\n    toggleEmailNotif () {\n        this.setState({ emailNotif: !this.state.emailNotif });\n    }\n\n    render () {\n        return (\n            <DocContainer>\n                <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                    <section className=\"panel panel-brand\">\n                        <SettingsHeader />\n                        <div className=\"panel-body\">\n                            <div className=\"container\">\n                                <form>\n                                    <SettingsBasic />\n                                    <SettingsEmailNotification emailNotif={this.state.emailNotif} toggleEmailNotif={() => this.toggleEmailNotif()} />\n                                    <SettingsDescription />\n                                    <ButtonComponent type=\"primary\" label=\"Save changes\" icon=\"save\" btnType=\"submit\" />\n                                </form>\n                            </div>\n                        </div>\n                    </section>\n                </ComponentPreview>\n            </DocContainer>\n        );\n    }\n}\n\nSettingsEmailNotification.propTypes = {\n    emailNotif: PropTypes.bool.isRequired,\n    toggleEmailNotif: PropTypes.func.isRequired\n};\n\nexport default Settings;\n\nexport { SettingsHeader, SettingsBasic, SettingsEmailNotification, SettingsDescription };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}