{"version":3,"sources":["webpack:///./src/App/Utilities/utilities/Colors/index.js"],"names":["TextColors","id","type","code","language","showCasePanel","codeFigure","className","BackgroundColors","Colors","docToc"],"mappings":"2FAAA,oIAKMA,EAAa,kBACf,oCACI,wBAAIC,GAAG,eAAP,eACA,4DAAiC,kBAAC,UAAD,CAAUC,KAAK,YAAYC,KAAK,iBAAjE,KACA,kBAAC,mBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,uBAAGC,UAAU,cAAb,eACA,uBAAGA,UAAU,gBAAb,iBACA,uBAAGA,UAAU,gBAAb,iBACA,uBAAGA,UAAU,gBAAb,iBACA,uBAAGA,UAAU,gBAAb,iBACA,uBAAGA,UAAU,eAAb,gBACA,uBAAGA,UAAU,yBAAb,eACA,uBAAGA,UAAU,iBAAb,kBACA,uBAAGA,UAAU,4BAAb,mBAGJ,oCAAS,kBAAC,UAAD,CAAUL,KAAK,YAAYC,KAAK,iBACzC,yFAA8D,kBAAC,UAAD,CAAUD,KAAK,UAAUC,KAAM,WAA7F,2BAAiI,kBAAC,UAAD,CAAUD,KAAK,YAAYC,KAAK,gBAAjK,4BACA,kBAAC,mBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,uBAAGC,UAAU,cAAb,eAAsC,0BAAMA,UAAU,cAAhB,gBACtC,uBAAGA,UAAU,gBAAb,iBAA0C,0BAAMA,UAAU,cAAhB,gBAC1C,uBAAGA,UAAU,gBAAb,iBAA0C,0BAAMA,UAAU,cAAhB,gBAC1C,uBAAGA,UAAU,gBAAb,iBAA0C,0BAAMA,UAAU,cAAhB,gBAC1C,uBAAGA,UAAU,gBAAb,iBAA0C,0BAAMA,UAAU,cAAhB,gBAC1C,uBAAGA,UAAU,eAAb,gBAAwC,0BAAMA,UAAU,cAAhB,gBACxC,uBAAGA,UAAU,yBAAb,eAAiD,0BAAMA,UAAU,cAAhB,mBAKvDC,EAAmB,kBACrB,oCACI,wBAAIP,GAAG,qBAAP,qBACA,yFAA8D,kBAAC,UAAD,CAAUC,KAAK,YAAYC,KAAK,sBAA9F,KACA,kBAAC,mBAAD,CAAkBC,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kCAAf,aACA,yBAAKA,UAAU,oCAAf,eACA,yBAAKA,UAAU,oCAAf,eACA,yBAAKA,UAAU,oCAAf,eACA,yBAAKA,UAAU,oCAAf,eACA,yBAAKA,UAAU,mCAAf,cACA,yBAAKA,UAAU,uBAAf,kBAeLE,UARA,kBACX,kBAAC,eAAD,CAAcC,QAAM,GAChB,uBAAGH,UAAU,QAAb,yEACA,kBAACP,EAAD,MACA,kBAACQ,EAAD","file":"scripts/doc-route.chunk_78.js?1a3e7c310d0f4dd1d979","sourcesContent":["import React from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst TextColors = () => (\n    <>\n        <h2 id=\"text-colors\">Text colors</h2>\n        <p>To use a color simply prepend <CodeTags type=\"secondary\" code=\".text-{name}\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"text-brand\">.text-brand</p>\n            <p className=\"text-default\">.text-default</p>\n            <p className=\"text-neutral\">.text-neutral</p>\n            <p className=\"text-success\">.text-success</p>\n            <p className=\"text-warning\">.text-warning</p>\n            <p className=\"text-danger\">.text-danger</p>\n            <p className=\"text-white bg-default\">.text-white</p>\n            <p className=\"text-black-50\">.text-black-50</p>\n            <p className=\"text-white-50 bg-default\">.text-white-50</p>\n        </ComponentPreview>\n\n        <h3>With <CodeTags type=\"secondary\" code=\".text-muted\" /></h3>\n        <p>To get a muted effect on the color you are using, append a <CodeTags type=\"primary\" code={\"<span>\"} />-element with the class <CodeTags type=\"secondary\" code=\".text-muted\" /> to the desired element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"text-brand\">.text-brand <span className=\"text-muted\">.text-muted</span></p>\n            <p className=\"text-default\">.text-default <span className=\"text-muted\">.text-muted</span></p>\n            <p className=\"text-neutral\">.text-neutral <span className=\"text-muted\">.text-muted</span></p>\n            <p className=\"text-success\">.text-success <span className=\"text-muted\">.text-muted</span></p>\n            <p className=\"text-warning\">.text-warning <span className=\"text-muted\">.text-muted</span></p>\n            <p className=\"text-danger\">.text-danger <span className=\"text-muted\">.text-muted</span></p>\n            <p className=\"text-white bg-default\">.text-white <span className=\"text-muted\">.text-muted</span></p>\n        </ComponentPreview>\n    </>\n);\n\nconst BackgroundColors = () => (\n    <>\n        <h2 id=\"background-colors\">Background colors</h2>\n        <p>To alter the background-color of an element, add the class <CodeTags type=\"secondary\" code=\"background-{name}\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-white bg-brand p-2\">.bg-brand</div>\n                    <div className=\"col-12 text-white bg-default p-2\">.bg-default</div>\n                    <div className=\"col-12 text-white bg-neutral p-2\">.bg-neutral</div>\n                    <div className=\"col-12 text-white bg-success p-2\">.bg-success</div>\n                    <div className=\"col-12 text-white bg-warning p-2\">.bg-warning</div>\n                    <div className=\"col-12 text-white bg-danger p-2\">.bg-danger</div>\n                    <div className=\"col-12 bg-white p-2\">.bg-white</div>\n                </div>\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst Colors = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">Convey meaning through color with a handful of color utility classes.</p>\n        <TextColors />\n        <BackgroundColors />\n    </DocContainer>\n);\n\nexport default Colors;\n\n/* For testing */\nexport { TextColors, BackgroundColors };\n"],"sourceRoot":""}