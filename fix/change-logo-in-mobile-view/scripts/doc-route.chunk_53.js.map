{"version":3,"sources":["webpack:///./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedDialog/index.js","webpack:///./src/App/Examples/examples/customers/CustomersDetailed/components/CustomersDetailedSettings/index.js","webpack:///./src/App/Examples/examples/customers/CustomersDetailed/index.js","webpack:///./src/App/Examples/examples/customers/index.js"],"names":["CustomersDetailedDialog","customer","className","id","role","aria-modal","aria-labelledby","aria-describedby","firstName","lastName","type","aria-hidden","data-dialog-close","propTypes","PropTypes","exact","string","isRequired","email","phone","location","status","CustomersDetailedSettings","checked","label","Array","keys","map","item","key","selectOptions","prefixValue","window","dg","actionList","dialog","tabs","CustomersDetailed","props","state","tabIndex","tabScrollState","Component","init","setScrollState","this","e","i","preventDefault","tabScroll","document","getElementById","scrollStart","scrollLeft","scrollTotalAmount","target","offsetLeft","offsetWidth","setState","language","showCasePanel","codeFigure","href","aria-haspopup","onClick","data-dialog-open","statusText","customersDetailedTabs","tab","selectTab","name","component","arrayOf","object","createNumArray","length","baseNum","addNum","Math","floor","random","Customers","customerIndex","customersDetailedElement","scrollTo","top","offsetTop","left","behavior","test","Fragment","customersDetailedOrdersSteps","customersDetailedOrders","customersDetailedLatestInquiry","customersDetailedPreviousInquiries","customerIdName","customersList","customerOrders","customerInquiries","setCustomerIndex","customersDetailedActionList","bool"],"mappings":"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","file":"scripts/doc-route.chunk_53.js?1a3e7c310d0f4dd1d979","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CustomersDetailedDialog = ({ customer }) => (\n    <div className=\"dialog\" id=\"customers-detailed-dialog\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"aria-label-dia\" aria-describedby=\"aria-describe-dia\">\n        <section>\n            <header className=\"dialog-header\" id=\"aria-label-dia\">\n                <h4>Delete customer {customer.id} {customer.firstName} {customer.lastName}?</h4>\n                <button type=\"button\" className=\"dialog-close\">\n                    <i className=\"material-icons\" aria-hidden=\"true\">close</i>\n                </button>\n            </header>\n            <div className=\"dialog-body\" id=\"aria-describe-dia\">\n                <p>Are you sure you want to permanently delete the customer {customer.id} {customer.firstName} {customer.lastName}?</p>\n            </div>\n            <footer className=\"dialog-footer\">\n                <button className=\"btn btn-secondary\" type=\"button\" data-dialog-close=\"true\">Cancel</button>\n                <button className=\"btn btn-primary\" type=\"button\">Delete</button>\n            </footer>\n        </section>\n    </div>\n);\n\nCustomersDetailedDialog.propTypes = {\n    customer: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default CustomersDetailedDialog;\n","import React from \"react\";\n\nimport { Togglebox, Checkbox } from \"@components/FormComponents\";\nimport InputGroup from \"@components/InputGroup\";\n\nconst CustomersDetailedSettings = () => (\n    <>\n        <h3>Notifications</h3>\n        <div className=\"row justify-content-around mt-3\">\n            <div className=\"col-lg-auto m-2\">\n                <div className=\"d-flex flex-column\">\n                    <Togglebox id=\"customers-detailed-settings-toggle-1\" checked label=\"Delivery status changes\" />\n                    <Togglebox id=\"customers-detailed-settings-toggle-3\" label=\"Critical delivery messages\" />\n                </div>\n            </div>\n            <div className=\"col-lg-auto m-2\">\n                <Togglebox id=\"customers-detailed-settings-toggle-2\" label=\"New inquiry messages\" />\n                <Togglebox id=\"customers-detailed-settings-toggle-4\" checked label=\"Inquiry status changes\" />\n            </div>\n        </div>\n        <h3>Newsletter and information</h3>\n        <div className=\"row mt-4\">\n            {[...Array(7).keys()].map(item => (\n                <div key={item} className=\"col-lg-3 col-md-4 col-sm-6\">\n                    <Checkbox id={`customers-detailed-settings-checkbox-${item}`} checked label={`Subscription #${item + 1}`} />\n                </div>\n            ))}\n        </div>\n\n        <h3>Customer type</h3>\n        <InputGroup\n            type=\"select\"\n            selectOptions={[\"Long-term contract\", \"Short-term contract\", \"One time purchase\"]}\n            prefixValue=\"Type\"\n        />\n\n        <button className=\"btn btn-primary\">Save</button>\n    </>\n);\n\nexport default CustomersDetailedSettings;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ComponentPreview } from \"@docutils\";\n\nimport CustomersDetailedDialog from \"./components/CustomersDetailedDialog/\";\n\nconst { actionList, dialog, tabs } = window.dg;\n\nclass CustomersDetailed extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            tabIndex: 0,\n            tabScrollState: null\n        };\n    }\n\n    componentDidUpdate () {\n        actionList.init();\n        dialog.init();\n        tabs.init();\n        tabs.setScrollState(\"customers-detailed-tabs\", this.state.tabScrollState);\n    }\n\n    componentDidMount () {\n        dialog.init();\n        tabs.init();\n    }\n\n    selectTab (e, i) {\n        e.preventDefault();\n\n        const tabScroll = document.getElementById(\"customers-detailed-tabs-ul\");\n        const scrollStart = tabScroll.scrollLeft;\n        const scrollTotalAmount = (e.target.offsetLeft - (tabScroll.offsetWidth / 2) + (e.target.offsetWidth / 2)) - scrollStart;\n\n        this.setState({\n            tabIndex: i,\n            tabScrollState: {\n                scrollTotalAmount,\n                scrollStart\n            }\n        });\n    }\n\n    render () {\n        return (\n            <>\n                <h2 id=\"customers-detailed\">Customers detailed</h2>\n                <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                    <div className=\"container\">\n                        <div className=\"panel panel-brand\">\n                            <header>\n                                <ol className=\"breadcrumb\">\n                                    <li><a href=\"#\">Customers</a></li>\n                                    <li><span>{this.props.customer.id}</span></li>\n                                </ol>\n                                <div className=\"row\">\n                                    <div className=\"col-auto mr-auto\">\n                                        <div className=\"row\">\n                                            <div className=\"col-xs-auto\">\n                                                <div className=\"d-none d-sm-block\">\n                                                    <div className=\"media media-sm\">\n                                                        <div className=\"media-img\">\n                                                            <i className=\"material-icons\" aria-hidden=\"true\">account_circle</i>\n                                                        </div>\n                                                        <div className=\"media-body\">\n                                                            <h4>{`${this.props.customer.firstName} ${this.props.customer.lastName}`}</h4>\n                                                            <p>{`${this.props.customer.email} ${this.props.customer.phone}`}</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"d-block d-sm-none\">\n                                                    <div className=\"media media-sm\">\n                                                        <div className=\"media-img\">\n                                                            <i className=\"material-icons\" aria-hidden=\"true\">account_circle</i>\n                                                        </div>\n                                                        <div className=\"media-body\">\n                                                            <h4>{`${this.props.customer.firstName} ${this.props.customer.lastName}`}</h4>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-xs-auto\">\n                                                <div id=\"customer-detailed-action-list\" className=\"action-list anchor-top-right\">\n                                                    <button id=\"actionListToggle\" type=\"button\" className=\"action-toggle\" aria-haspopup=\"true\">\n                                                        <i className=\"material-icons\" aria-hidden=\"true\">more_vert</i>\n                                                    </button>\n                                                    <div className=\"action-menu\" aria-labelledby=\"actionListToggle\">\n                                                        <a href=\"#\" onClick={e => e.preventDefault()}><i className=\"material-icons\" aria-hidden=\"true\">edit</i>Edit</a>\n                                                        <a href=\"#\" onClick={e => e.preventDefault()} data-dialog-open=\"customers-detailed-dialog\"><i className=\"material-icons\" aria-hidden=\"true\">delete</i>Delete</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <CustomersDetailedDialog customer={this.props.customer} />\n                                        </div>\n                                        <div className=\"row d-block d-sm-none\">\n                                            <div className=\"col-sm-auto pl-0\">\n                                                <p className=\"mb-0 text-truncate\">{this.props.customer.email}</p>\n                                            </div>\n                                            <div className=\"col-sm-auto pl-0\">\n                                                <p>{this.props.customer.phone}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-auto pl-0\">\n                                        <h4>Delivery status:</h4>\n                                        <span className={`status status-${this.props.customer.status}`}>{this.props.statusText[this.props.customer.status]}</span>\n                                    </div>\n                                </div>\n                            </header>\n                            <div className=\"panel-body\">\n                                <div id=\"customers-detailed-tabs\" className=\"tabs tabs-scroll\">{\"\\n\"}\n                                    <ul id=\"customers-detailed-tabs-ul\">\n                                        {this.props.customersDetailedTabs.map((tab, i) => (\n                                            <li key={`tab-item-${i}`} className={this.state.tabIndex === i ? \"active\" : null}>{\"\\n\"}\n                                                <a href=\"#\" onClick={e => this.selectTab(e, i)}>{tab.name}</a>{\"\\n\"}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n\n                                {this.props.customersDetailedTabs[this.state.tabIndex].component}\n                            </div>\n                        </div>\n                    </div>\n                </ComponentPreview>\n            </>\n        );\n    }\n\n}\n\nCustomersDetailed.propTypes = {\n    customer: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired\n    }).isRequired,\n    customersDetailedTabs: PropTypes.arrayOf(PropTypes.exact({\n        name: PropTypes.string.isRequired,\n        component: PropTypes.object.isRequired\n    })).isRequired\n};\n\nexport default CustomersDetailed;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DocContainer, ComponentPreview } from \"@docutils\";\n\nimport CustomersOverview from \"./CustomersOverview\";\nimport CustomersDetailed from \"./CustomersDetailed\";\nimport CustomersDetailedOrders from \"./CustomersDetailed/components/CustomersDetailedOrders\";\nimport CustomersDetailedInquiries from \"./CustomersDetailed/components/CustomersDetailedInquiries\";\nimport CustomersDetailedCharts from \"./CustomersDetailed/components/CustomersDetailedCharts\";\nimport CustomersDetailedSettings from \"./CustomersDetailed/components/CustomersDetailedSettings\";\n\nimport {\n    customersList,\n    statusText,\n    customersDetailedActionList,\n    customersDetailedOrders,\n    customersDetailedOrdersSteps,\n    customersDetailedLatestInquiry,\n    customersDetailedPreviousInquiries\n} from \"./constants\";\n\nconst { actionList } = window.dg;\n\nconst createNumArray = (length, baseNum, addNum) => (\n    [...Array(length)].map(() => (\n        Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) +\n        Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) + baseNum)\n    ) // The multiple Math.floor(Math.random) is there to achieve a lower variance\n);\n\nclass Customers extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            customerIndex: 0\n        };\n    }\n\n    componentDidUpdate () {\n        actionList.init();\n    }\n\n    componentDidMount () {\n        actionList.init();\n    }\n\n    setCustomerIndex (customerIndex) {\n        this.setState({\n            customerIndex\n        });\n\n        const customersDetailedElement = document.getElementById(\"customers-detailed\");\n\n        window.scrollTo({\n            top: customersDetailedElement.offsetTop + 100,\n            left: 0,\n            behavior: \"instant\"\n        });\n    }\n\n    render () {\n\n        // customersDetailedTabs is kept here because of the component value\n        const customersDetailedTabs = [\n            {\n                name: \"Order history\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedOrders\n                        customersDetailedOrdersSteps={customersDetailedOrdersSteps}\n                        customersDetailedOrders={customersDetailedOrders}\n                    />\n            },\n            {\n                name: \"Customer inquiries\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedInquiries\n                        customersDetailedLatestInquiry={customersDetailedLatestInquiry}\n                        customersDetailedPreviousInquiries={customersDetailedPreviousInquiries}\n                    />\n            },\n            {\n                name: \"Summary charts\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedCharts\n                        customerIdName={`${customersList[this.state.customerIndex].id} ${customersList[this.state.customerIndex].firstName} ${customersList[this.state.customerIndex].lastName}`}\n                        customerOrders={[...customersDetailedOrders, 1994]}\n                        customerInquiries={[...customersDetailedPreviousInquiries, customersDetailedLatestInquiry]}\n                        createNumArray={createNumArray}\n                    />\n            },\n            {\n                name: \"Settings\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedSettings />\n            }\n        ];\n\n        return (\n            <DocContainer>\n                <h2 id=\"customers-overview\">Customers overview</h2>\n                <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                    <CustomersOverview\n                        setCustomerIndex={customerIndex => this.setCustomerIndex(customerIndex)}\n                        customersList={customersList}\n                        statusText={statusText}\n                    />\n                </ComponentPreview>\n                <CustomersDetailed\n                    customer={customersList[this.state.customerIndex]}\n                    customersDetailedTabs={customersDetailedTabs}\n                    customersDetailedActionList={customersDetailedActionList}\n                    statusText={statusText}\n                />\n            </DocContainer>\n        );\n    }\n}\n\nCustomers.propTypes = {\n    test: PropTypes.bool\n};\n\nexport default Customers;\n"],"sourceRoot":""}