{"version":3,"sources":["webpack:///./src/App/components/Button/index.js","webpack:///./src/App/Resources/resources/typography/index.js","webpack:///./src/App/Core/core/Typography/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/classnames/index.js"],"names":["Button","label","id","name","value","href","icon","loading","type","disabled","btnType","fullWidth","pullRight","input","active","size","bankId","btnClasses","classnames","attrs","defaultValue","role","tabIndex","className","aria-hidden","propTypes","PropTypes","oneOf","isRequired","string","bool","loader","basename","process","Overview","src","Download","Guidelines","Typography","docToc","expandable","window","dg","ResourcesTypography","aria-expanded","aria-controls","to","Fonts","Headings","language","showCasePanel","codeFigure","code","HeroTitle","Lead","Inline","TextUtilities","Abbreviations","title","target","rel","Blockquotes","AkkuratMono","useEffect","init","module","exports","__webpack_amd_options__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","define"],"mappings":"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","file":"scripts/doc-route.chunk_42.js?1a3e7c310d0f4dd1d979","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport { DocContainer } from \"@docutils\";\nimport Button from \"@components/Button\";\n\nconst basename = process.env.basename;\n\nconst Overview = () => (\n    <>\n        <img src={`${basename}img/typography/cid_2873206.png`} className=\"img-fluid mb-4\" />\n        <p>\n            Swedbank Pay uses a selection of fonts from Swedbank&apos;s typography toolbox.\n        </p>\n        <p>\n            Our main font is Swedbank Headline Bold, a custom made typeface with an open, welcoming\n            visual voice. In addition Swedbank Sans is used for body copy in printed units whilst Arial is used\n            for body copy on screens.\n        </p>\n\n    </>\n);\n\nconst Download = () => (\n    <>\n        <h2 id=\"download\">Download</h2>\n        <div className=\"slab slab-default slab-elevated\">\n            <p>Before downloading any typography files, make sure to read the Swedbank Pay typography guidelines. The guidelines can be found below.</p>\n            <div className=\"row justify-content-right\">\n                <div className=\"col-sm-auto mb-3 mb-sm-0\">\n                    <Button type=\"primary\" icon=\"file_download\" href={`${basename}release/fonts/cid_2108538.zip`} label=\"Swedbank Headline\" />\n                </div>\n                <div className=\"col-sm-auto\">\n                    <Button type=\"primary\" icon=\"file_download\" href={`${basename}release/fonts/cid_2686429.zip`} label=\"Swedbank Sans\" />\n                </div>\n            </div>\n        </div>\n    </>\n);\n\nconst Guidelines = () => (\n    <>\n        <h2 id=\"guidelines\">Typography guidlines</h2>\n        <img src={`${basename}img/typography/cid_2873207.png`} className=\"img-fluid mb-4\" />\n\n        <h4>Use Swedbank Headline Bold in:</h4>\n        <ul>\n            <li>Headlines and highlights</li>\n            <li>Introduction texts</li>\n            <li>Lower level headlines</li>\n        </ul>\n\n        <h4>Use Arial in:</h4>\n        <ul>\n            <li>Body copy on screens</li>\n        </ul>\n\n        <h4>Use Swedbank Sans in:</h4>\n        <ul>\n            <li>Body copy in printed units</li>\n        </ul>\n\n        <h4>Typesetting</h4>\n        <ul>\n            <li>Use large contrast in size between top level headlines and body text</li>\n            <li>Use metric settings for spacing</li>\n        </ul>\n    </>\n);\n\nconst Typography = () => (\n    <DocContainer docToc>\n        <Overview />\n        <Download />\n        <Guidelines />\n    </DocContainer>\n);\n\nexport default Typography;\n\n/* For testing */\nexport { Overview, Download, Guidelines };\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport { Overview, Download, Guidelines } from \"../../../Resources/resources/typography\";\nimport Button from \"@components/Button\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst basename = process.env.basename;\nconst { expandable } = window.dg;\n\nconst ResourcesTypography = () => (\n    <div className=\"expandable\">\n        <button type=\"button\" className=\"expandable-header\" aria-expanded=\"false\" aria-controls=\"resources-typograpy-body\">\n            <span className=\"expandable-headline\">Typography guidelines</span>\n            <small className=\"expandable-subtitle\">From <Link to=\"/resources/typography\">typography in Resources</Link></small>\n        </button>\n        <div className=\"expandable-body\" id=\"resources-typography-body\">\n            <Overview />\n            <Download />\n            <Guidelines />\n        </div>\n    </div>\n);\n\nconst Fonts = () => (\n        <>\n            <h2 id=\"font\">Font</h2>\n            <p>The standard font Swedbank Pay DesignGuide uses is Arial. The included font weights you can use are: 400, 600 & 800. Both normal and italicized is available.</p>\n        </>\n);\n\nconst Headings = () => (\n    <>\n        <h2 id=\"headings\">Headings</h2>\n        <p>Swedbank Pay DesignGuide provides basic styling on all headings (h1-h6).</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1>Heading h1</h1>\n            <h2>Heading h2</h2>\n            <h3>Heading h3</h3>\n            <h4>Heading h4</h4>\n            <h5>Heading h5</h5>\n            <h6>Heading h6</h6>\n        </ComponentPreview>\n        <p>The classes <CodeTags type=\"secondary\" code=\".h1\" /> through <CodeTags type=\"secondary\" code=\".h6\" /> are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"h1\">.h1 heading</p>\n            <p className=\"h2\">.h2 heading</p>\n            <p className=\"h3\">.h3 heading</p>\n            <p className=\"h4\">.h4 heading</p>\n            <p className=\"h5\">.h5 heading</p>\n            <p className=\"h6\">.h6 heading</p>\n        </ComponentPreview>\n    </>\n);\n\nconst HeroTitle = () => (\n    <>\n        <h2 id=\"hero-title\">Hero title</h2>\n        <p>The class <CodeTags type=\"secondary\" code=\".hero\" /> can be used to achieve the big and bold hero title styling.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1 className=\"hero\">Hero title</h1>\n            <p className=\"hero\">Hero title</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Lead = () => (\n    <>\n        <h2 id=\"lead\">Lead</h2>\n        <p>Make a paragraph stand out by using <CodeTags type=\"secondary\" code=\".lead\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"lead\">This is a leading paragraph which for instance can be used as an introduction.</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Inline = () => (\n    <>\n        <h2 id=\"inline-text-elements\">Inline text elements</h2>\n        <p>Styling for common inline HTML5 elements.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n            <p><u>This line of text will render as underlined</u></p>\n            <p><small>This line of text is meant to be treated as fine print.</small></p>\n            <p><strong>This line rendered as bold text.</strong></p>\n            <p><b>This line really stands out.</b></p>\n            <p><em>This line rendered as italicized text.</em></p>\n            <p><i>This is the last line, it too will render as italicized text.</i></p>\n        </ComponentPreview>\n        <p>\n            The <CodeTags type=\"secondary\" code=\".mark\" /> and <CodeTags type=\"secondary\" code=\".small\" /> classes are also available to apply the same styles\n            as <CodeTags type=\"primary\" code={\"<mark>\"} /> and <CodeTags type=\"primary\" code={\"<small>\"} /> while\n            avoiding any unwanted semantic implications that the tags would bring.\n        </p>\n        <p>\n        While not shown above, feel free to use <CodeTags type=\"primary\" code={\"<b>\"} /> and <CodeTags type=\"primary\" code={\"<i>\"} /> in\n        HTML5. <CodeTags type=\"primary\" code={\"<b>\"} /> is meant to highlight words or phrases without conveying additional importance\n        while <CodeTags type=\"primary\" code={\"<i>\"} /> is mostly for voice, technical terms, etc.\n        </p>\n    </>\n);\n\nconst TextUtilities = () => (\n    <>\n        <h2 id=\"text-utilities\">Text utilities</h2>\n        <p>Change text color with our <Link to=\"/utilities/colors\">color utilities</Link>.</p>\n    </>\n);\n\nconst Abbreviations = () => (\n    <>\n        <h2 id=\"abbreviations\">Abbreviations</h2>\n        <p>Stylized implementation of HTML’s <CodeTags type=\"primary\" code={\"<abbr>\"} /> element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.</p>\n        <p>Add <CodeTags type=\"secondary\" code=\".initialism\" /> to an abbreviation for a slightly smaller font-size.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p><abbr title=\"Laugh Out Loud\">LOL</abbr></p>\n            <p><abbr title=\"HyperText Markup Language\" className=\"initialism\">HTML</abbr></p>\n        </ComponentPreview>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr\" target=\"_blank\" rel=\"noopener noreferrer\">Read more</a> about abbreviations.</p>\n    </>\n);\n\nconst Blockquotes = () => {\n    const BlockquotesText = () => (\n        <>\n            <h2 id=\"blockquotes\">Blockquotes</h2>\n            <p>For quoting blocks of content from another source within your document. Wrap <CodeTags type=\"primary\" code={\"<blockquote>\"} /> or <CodeTags type=\"secondary\" code=\".blockquote\" /> around any HTML as the quote.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    const BlockquoteWithSourceText = () => (\n        <>\n            <h3>Naming a source</h3>\n            <p>Add a <CodeTags type=\"primary\" code={\"<footer>\"} /> for identifying the source. Wrap the name of the source work in <CodeTags type=\"primary\" code={\"<cite>\"} />.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>\n                        Better learn balance. Balance is key. Balance good, karate good. Everything good. Balance bad, better pack up, go home. Understand?\n                    </p>\n                    <footer><cite title=\"The Karate Kid (1984)\">Mr. Miyagi</cite></footer>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    return (\n        <>\n            <BlockquotesText />\n            <BlockquoteWithSourceText />\n        </>\n    );\n};\n\nconst AkkuratMono = () => (\n    <>\n        <h2 id=\"akkurat-mono\">Akkurat Mono</h2>\n        <p>The Akkurat Mono font should be used when code is to be presented, for instance with code tags.</p>\n\n        <h3>Download</h3>\n        <div className=\"slab slab-default slab-elevated\">\n            <p>Before downloading the Akkurat Mono font, make sure to understand the correct usages of Akkurat Mono.</p>\n            <Button type=\"primary\" icon=\"file_download\" href={`${basename}release/fonts/AkkuratMono.zip`} label=\"Akkurat Mono\" />\n        </div>\n    </>\n);\n\nconst Typography = () => {\n\n    useEffect(() => { expandable.init(); });\n\n    return (\n        <DocContainer docToc>\n            <p className=\"lead\">Documentation and examples for Swedbank Pay DesignGuide typography.</p>\n            <ResourcesTypography />\n            <Fonts />\n            <Headings />\n            <HeroTitle />\n            <Lead />\n            <Inline />\n            <TextUtilities />\n            <Abbreviations />\n            <Blockquotes />\n            <AkkuratMono />\n        </DocContainer>\n    );\n};\n\nexport default Typography;\n\n/* For testing */\nexport { ResourcesTypography, Fonts, Headings, HeroTitle, Lead, Inline, TextUtilities, Abbreviations, Blockquotes, AkkuratMono };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}