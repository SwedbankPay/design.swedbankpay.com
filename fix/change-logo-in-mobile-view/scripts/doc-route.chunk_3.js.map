{"version":3,"sources":["webpack:///./src/App/components/ActionList/index.js","webpack:///./src/App/ComponentsDocumentation/components/ActionList/index.js"],"names":["ActionListToggle","id","type","className","aria-haspopup","aria-hidden","ActionList","classNames","toggleBtn","items","aria-labelledby","Array","isArray","map","i","name","icon","key","href","onClick","e","preventDefault","propTypes","PropTypes","string","arrayOf","shape","isRequired","actionList","window","dg","Overview","language","showCasePanel","codeFigure","Anchorpoints","code","JavascriptMethods","componentName","open","close","Component","init","docToc"],"mappings":"+FAAA,mDAKMA,EAAmB,kBACrB,oCACI,4BAAQC,GAAG,mBAAmBC,KAAK,SAASC,UAAU,gBAAgBC,gBAAc,QAAQ,KACxF,uBAAGD,UAAU,iBAAiBE,cAAY,QAA1C,aAA+D,MACzD,OAIZC,EAAa,SAAC,GAAD,IAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,MAA9B,OACf,oCACI,yBAAKR,GAAIA,EAAIE,UAAS,qBAAgBI,EAAa,IAAH,OAAOA,GAAe,KAAO,KACxEC,EAAY,oCAAGA,EAAW,MAAW,kBAACR,EAAD,MACtC,yBAAKG,UAAU,cAAcO,kBAAgB,oBAAoB,KAEzDC,MAAMC,QAAQH,GAASA,EAAMI,IAAI,WAAiBC,GAAjB,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OAC7B,kBAAC,WAAD,CAAUC,IAAKH,GACX,uBAAGI,KAAK,IAAIC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,mBACvBL,EAAO,kBAAC,OAAD,CAAMd,KAAMc,IAAU,KAAMD,GACnC,QAER,SAOzBT,EAAWgB,UAAY,CACnBrB,GAAIsB,IAAUC,OACdjB,WAAYgB,IAAUC,OACtBf,MAAOc,IAAUE,QAAQF,IAAUG,MAAM,CACrCX,KAAMQ,IAAUC,OAAOG,WACvBX,KAAMO,IAAUC,UAChBG,YAGOrB,a,mgCCnCPsB,EAAeC,OAAOC,GAAtBF,WAEFnB,EAAQ,CACV,CACIM,KAAM,eACNC,KAAM,YAEV,CACID,KAAM,aACNC,KAAM,mBAEV,CACID,KAAM,eACNC,KAAM,cAEV,CACID,KAAM,WACNC,KAAM,eAIRe,EAAW,kBACb,oCACI,wBAAI9B,GAAG,YAAP,YACA,4CACA,kBAAC,mBAAD,CAAkB+B,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,kBAAC,UAAD,CAAqBzB,MAAOA,OAKlC0B,EAAe,kBACjB,oCACI,wBAAIlC,GAAG,gBAAP,gBACA,kIACA,wCACA,wCAAa,kBAAC,UAAD,CAAUC,KAAK,YAAYkC,KAAK,qBAA7C,qEACA,kBAAC,mBAAD,CAAkBJ,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,kBAAC,UAAD,CAAqB3B,WAAW,kBAAkBE,MAAOA,KAE7D,4CACA,wCAAa,kBAAC,UAAD,CAAUP,KAAK,YAAYkC,KAAK,yBAA7C,yEACA,kBAAC,mBAAD,CAAkBJ,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,kBAAC,UAAD,CAAqB3B,WAAW,sBAAsBE,MAAOA,KAEjE,2CACA,wCAAa,kBAAC,UAAD,CAAUP,KAAK,YAAYkC,KAAK,wBAA7C,wEACA,kBAAC,mBAAD,CAAkBJ,SAAS,OAAOC,eAAa,EAACC,YAAU,GACtD,kBAAC,UAAD,CAAqB3B,WAAW,qBAAqBE,MAAOA,OAKlE4B,EAAoB,kBACtB,oCACI,wBAAIpC,GAAG,sBAAP,sBACA,kBAAC,iBAAD,CAAgBqC,cAAc,aAAaC,MAAI,EAACC,OAAK,MAIvDlC,E,8ZAAmBmC,gB,kDAEjBb,EAAWc,S,+BAIX,OACI,kBAAC,eAAD,CAAcC,QAAM,GAChB,uBAAGxC,UAAU,QAAb,+IAGA,kBAAC4B,EAAD,MACA,kBAACI,EAAD,MACA,kBAACE,EAAD,Y,gCAMD/B","file":"scripts/doc-route.chunk_3.js?1a3e7c310d0f4dd1d979","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Icon } from \"@docutils\";\n\nconst ActionListToggle = () => (\n    <>\n        <button id=\"actionListToggle\" type=\"button\" className=\"action-toggle\" aria-haspopup=\"true\">{\"\\n\"}\n            <i className=\"material-icons\" aria-hidden=\"true\">more_vert</i>{\"\\n\"}\n        </button>{\"\\n\"}\n    </>\n);\n\nconst ActionList = ({ id, classNames, toggleBtn, items }) => (\n    <>\n        <div id={id} className={`action-list${classNames ? ` ${classNames}` : \"\"}`}>{\"\\n\"}\n            {toggleBtn ? <>{toggleBtn}{\"\\n\"}</> : <ActionListToggle />}\n            <div className=\"action-menu\" aria-labelledby=\"actionListToggle\">{\"\\n\"}\n                {\n                    Array.isArray(items) ? items.map(({ name, icon }, i) => (\n                        <Fragment key={i}>\n                            <a href=\"#\" onClick={e => e.preventDefault()}>\n                                {icon ? <Icon type={icon}/> : null}{name}\n                            </a>{\"\\n\"}\n                        </Fragment>\n                    )) : null\n                }\n            </div>\n        </div>\n    </>\n);\n\nActionList.propTypes = {\n    id: PropTypes.string,\n    classNames: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        icon: PropTypes.string\n    })).isRequired\n};\n\nexport default ActionList;\n","import React, { Component } from \"react\";\n\nimport ActionListComponent from \"@components/ActionList\";\nimport { ComponentPreview, DocContainer, JavascriptDocs } from \"@docutils\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst { actionList } = window.dg;\n\nconst items = [\n    {\n        name: \"Add bookmark\",\n        icon: \"bookmark\"\n    },\n    {\n        name: \"Add client\",\n        icon: \"business_center\"\n    },\n    {\n        name: \"Add document\",\n        icon: \"add_circle\"\n    },\n    {\n        name: \"Add user\",\n        icon: \"person_add\"\n    }\n];\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>Action lists.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionListComponent items={items} />\n        </ComponentPreview>\n    </>\n);\n\nconst Anchorpoints = () => (\n    <>\n        <h2 id=\"anchorpoints\">Anchorpoints</h2>\n        <p>You can change where the action list will have its anchor, by default the anchor will be top right.</p>\n        <h3>Top left</h3>\n        <p>Use class <CodeTags type=\"secondary\" code=\".anchor-top-left\" /> to anchor action-list button to the top left corner of the menu.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionListComponent classNames=\"anchor-top-left\" items={items} />\n        </ComponentPreview>\n        <h3>Bottom right</h3>\n        <p>Use class <CodeTags type=\"secondary\" code=\".anchor-bottom-right\" /> to anchor action-list button to the bottom right corner of the menu.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionListComponent classNames=\"anchor-bottom-right\" items={items} />\n        </ComponentPreview>\n        <h3>Bottom left</h3>\n        <p>Use class <CodeTags type=\"secondary\" code=\".anchor-bottom-left\" /> to anchor action-list button to the bottom left corner of the menu.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionListComponent classNames=\"anchor-bottom-left\" items={items} />\n        </ComponentPreview>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"actionList\" open close />\n    </>\n);\n\nclass ActionList extends Component {\n    componentDidMount () {\n        actionList.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Action lists are small menus that remain hidden until clicked. In these you can put page links or anchors that trigger an action elsewhere.\n                </p>\n                <Overview />\n                <Anchorpoints />\n                <JavascriptMethods />\n            </DocContainer>\n        );\n    }\n}\n\nexport default ActionList;\n\n/* For testing */\nexport { Overview, Anchorpoints, JavascriptMethods };\n"],"sourceRoot":""}