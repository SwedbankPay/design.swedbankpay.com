{"version":3,"sources":["webpack:///./src/App/components/ColorPreview/index.js","webpack:///./src/App/components/ColorDisplay/index.js"],"names":["ColorPreview","name","hex","rgb","cmyk","className","width","height","fill","propTypes","PropTypes","string","isRequired","ColorDisplay","id","colorList","head","description","subListNames","map","subListName","index","key","filter","elem","inSubLists","includes","i","elemProps","arrayOf","shape","any","subLists","bool"],"mappings":"gGAAA,2CAGMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,KAAnB,OACjB,gCACI,yBAAKC,UAAoB,UAATJ,EAAmB,SAAW,MAC1C,0BAAMK,MAAM,OAAOC,OAAO,OAAOC,KAAMN,KAE3C,oCACKD,EAAK,6BACN,kDAAwBC,GACvBC,GAAO,oCAAE,6BAAK,kDAAwBA,IACtCC,GAAQ,oCAAE,6BAAK,mDAAyBA,OAKrDJ,EAAaS,UAAY,CACrBR,KAAMS,IAAUC,OAAOC,WACvBV,IAAKQ,IAAUC,OAAOC,WACtBT,IAAKO,IAAUC,OACfP,KAAMM,IAAUC,QAGLX,a,ycCpBf,IAAMa,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,YAAaC,EAArC,EAAqCA,aAArC,OACjB,oCACI,wBAAIJ,GAAIA,GAAKE,GACZC,EAEAC,EAAeA,EAAaC,IAAI,SAACC,EAAaC,GAAd,OAC7B,yBAAKC,IAAKD,GACN,4BAAKD,GACL,wBAAIf,UAAU,sBACTU,EAAUQ,OAAO,SAAAC,GAAI,OAAIA,EAAKC,WAAWC,SAASN,KAAcD,IAAI,SAACK,EAAMG,GAEnCH,EAA7BC,WAFsE,IAEvDG,EAFuD,EAEzCJ,EAFyC,gBAK9E,OACI,wBAAIF,IAAKK,GACL,kBAAC,UAAiBC,UAOtC,wBAAIvB,UAAU,sBACTU,EAAUI,IAAI,SAACK,EAAMG,GAEmBH,EAA7BC,WAFgB,IAEDG,EAFC,EAEaJ,EAFb,gBAKxB,OACI,wBAAIF,IAAKK,GACL,kBAAC,UAAiBC,SAS9Cf,EAAaJ,UAAY,CACrBK,GAAIJ,IAAUC,OAAOC,WACrBG,UAAWL,IAAUmB,QAAQnB,IAAUoB,MAAM,CACzC7B,KAAMS,IAAUC,OAAOC,WACvBV,IAAKQ,IAAUC,OAAOC,WACtBM,aAAcR,IAAUmB,QAAQnB,IAAUC,WAC1CC,WACJI,KAAMN,IAAUC,OAAOC,WACvBK,YAAaP,IAAUqB,IACvBC,SAAUtB,IAAUuB,MAGTpB","file":"scripts/doc-route.chunk_96.js?1a3e7c310d0f4dd1d979","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ColorPreview = ({ name, hex, rgb, cmyk }) => (\n    <figure>\n        <svg className={name === \"White\" ? \"border\" : null}>\n            <rect width=\"100%\" height=\"100%\" fill={hex} />\n        </svg>\n        <figcaption>\n            {name}<br/>\n            <small>Hex color code: {hex}</small>\n            {rgb && <><br/><small>RGB color code: {rgb}</small></> }\n            {cmyk && <><br/><small>CMYK color code: {cmyk}</small></>}\n        </figcaption>\n    </figure>\n);\n\nColorPreview.propTypes = {\n    name: PropTypes.string.isRequired,\n    hex: PropTypes.string.isRequired,\n    rgb: PropTypes.string,\n    cmyk: PropTypes.string\n};\n\nexport default ColorPreview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ColorPreview from \"@components/ColorPreview\";\n\nconst ColorDisplay = ({ id, colorList, head, description, subListNames }) => (\n    <>\n        <h2 id={id}>{head}</h2>\n        {description}\n\n        {subListNames ? subListNames.map((subListName, index) => (\n            <div key={index}>\n                <h3>{subListName}</h3>\n                <ul className=\"list color-preview\">\n                    {colorList.filter(elem => elem.inSubLists.includes(subListName)).map((elem, i) => {\n                        /* eslint-disable */\n                        const { inSubLists, ...elemProps } = elem; // Exclude property not needed by ColorPreview\n                        /* eslint-enable */\n\n                        return (\n                            <li key={i} >\n                                <ColorPreview {...elemProps} />\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>))\n            :\n            <ul className=\"list color-preview\">\n                {colorList.map((elem, i) => {\n                    /* eslint-disable */\n                    const { inSubLists, ...elemProps } = elem; // Exclude property not needed by ColorPreview\n                    /* eslint-enable */\n\n                    return (\n                        <li key={i} >\n                            <ColorPreview {...elemProps} />\n                        </li>\n                    );\n                })}\n            </ul>\n        }\n    </>\n);\n\nColorDisplay.propTypes = {\n    id: PropTypes.string.isRequired,\n    colorList: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        hex: PropTypes.string.isRequired,\n        subListNames: PropTypes.arrayOf(PropTypes.string)\n    })).isRequired,\n    head: PropTypes.string.isRequired,\n    description: PropTypes.any,\n    subLists: PropTypes.bool\n};\n\nexport default ColorDisplay;\n"],"sourceRoot":""}