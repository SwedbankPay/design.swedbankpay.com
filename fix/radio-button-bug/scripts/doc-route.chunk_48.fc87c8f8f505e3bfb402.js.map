{"version":3,"sources":["webpack://design.swedbankpay.com/./node_modules/classnames/index.js","webpack://design.swedbankpay.com/./src/App/Examples/examples/customers/CustomersOverview/index.js","webpack://design.swedbankpay.com/./src/App/components/Pagination/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","define","window","CustomersOverview","props","state","customerFilter","this","customerFilterField","focus","e","setState","target","value","toLowerCase","className","aria-hidden","ref","input","onChange","updateFilter","type","onClick","resetFilter","disabled","scope","customersList","filter","customer","firstName","includes","lastName","location","map","index","id","setCustomerIndex","status","statusText","text","arrows","farArrows","Component","propTypes","PropTypes","email","phone","isRequired","success","warning","danger","Pagination","items","activeItem","itemLength","paginationClasses","classnames","Arrow","aria-label","href","name","active"],"mappings":"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","file":"scripts/doc-route.chunk_48.fc87c8f8f505e3bfb402.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PaginationComponent from \"@components/Pagination\";\n\nclass CustomersOverview extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            customerFilter: \"\"\n        };\n    }\n\n    componentDidUpdate () {\n        this.customerFilterField.focus();\n    }\n\n    updateFilter (e) {\n        this.setState({\n            customerFilter: e.target.value.toLowerCase()\n        });\n    }\n\n    resetFilter () {\n        this.setState({\n            customerFilter: \"\"\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"panel panel-brand\">\n                    <header>\n                        <div className=\"row\">\n                            <div className=\"col-lg-4\">\n                                <h2 className=\"panel-title\">Customers</h2>\n                            </div>\n                            <div className=\"col-lg-8\">\n                                <div className=\"input-group\">{\"\\n\"}\n                                    <span className=\"input-group-addon\">{\"\\n\"}\n                                        <i className=\"material-icons\" aria-hidden=\"true\">search</i>\n                                    </span>{\"\\n\"}\n                                    <input ref={input => this.customerFilterField = input} value={this.state.customerFilter} onChange={e => this.updateFilter(e)} type=\"text\" className=\"form-control\" />{\"\\n\"}\n                                    <button type=\"button\" onClick={() => this.resetFilter()} disabled={this.state.customerFilter.length === 0} className=\"btn btn-primary btn-outline\">{\"\\n\"}\n                                        <i className=\"material-icons\" aria-hidden=\"true\">close</i>{\"\\n\"}\n                                    </button>{\"\\n\"}\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                    <div className=\"panel-table\">\n                        <table className=\"table table-hover table-striped\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">ID</th>\n                                    <th scope=\"col\" className=\"d-none d-sm-table-cell\">First name</th>\n                                    <th scope=\"col\" className=\"d-none d-sm-table-cell\">Last name</th>\n                                    <th scope=\"col\">Location</th>\n                                    <th scope=\"col\" className=\"d-none d-lg-table-cell\">Delivery status</th>\n                                    <th scope=\"col\" className=\"d-lg-none\" />\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.customersList.filter(\n                                    customer => this.state.customerFilter === \"\" ||\n                                    customer.firstName.toLowerCase().includes(this.state.customerFilter) ||\n                                    customer.lastName.toLowerCase().includes(this.state.customerFilter) ||\n                                    customer.location.toLowerCase().includes(this.state.customerFilter)\n                                )\n                                    .map((customer, index) => (\n                                        <tr key={customer.id} onClick={() => this.props.setCustomerIndex(index)}>\n                                            <th scope=\"row\">{customer.id}</th>\n                                            <td className=\"d-none d-sm-table-cell\">{customer.firstName}</td>\n                                            <td className=\"d-none d-sm-table-cell\">{customer.lastName}</td>\n                                            <td>{customer.location}</td>\n                                            <td className=\"d-none d-lg-table-cell\">\n                                                <span className={`status status-${customer.status}`}>{this.props.statusText[customer.status]}</span>\n                                            </td>\n                                            <td className=\"d-lg-none\">\n                                                <span className={`status status-${customer.status} pl-0`} />\n                                            </td>\n                                        </tr>\n                                    ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <PaginationComponent text=\"1 of 123\" arrows farArrows />\n                </div>\n            </div>\n        );\n    }\n}\n\nCustomersOverview.propTypes = {\n    customersList: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired\n    })).isRequired,\n    statusText: PropTypes.exact({\n        default: PropTypes.string.isRequired,\n        success: PropTypes.string.isRequired,\n        warning: PropTypes.string.isRequired,\n        danger: PropTypes.string.isRequired\n    }).isRequired,\n    setCustomerIndex: PropTypes.func.isRequired\n};\n\nexport default CustomersOverview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Pagination = ({ type, items, text, arrows, farArrows }) => {\n    let activeItem = -1;\n    const itemLength = items ? items.length - 1 : -2;\n\n    const paginationClasses = classnames(\n        \"pagination\",\n        type ? `pagination-${type}` : \"\"\n    );\n\n    const Arrow = ({ type }) => {\n        let disabled = false;\n\n        if (type === \"start\" || type === \"back\") {\n            disabled = activeItem === 0;\n        } else if (type === \"forward\" || type === \"end\") {\n            disabled = activeItem === itemLength;\n        }\n\n        return (\n            <li className={`arrow-${type}`} aria-label={type} >{\"\\n\"}\n                {disabled ? <span></span> : <a href=\"#\"></a>}{\"\\n\"}\n            </li>\n        );\n    };\n\n    return (\n        <ul className={paginationClasses}>\n            {farArrows ? <Arrow type=\"start\" /> : null}\n            {arrows ? <Arrow type=\"back\" /> : null}\n            {items ? items.map(({ name, href, active }, i) => {\n                if (active) { activeItem = i; }\n\n                return (\n                    <li key={i} className={`${active ? \"active\" : \"\"}`}>{\"\\n\"}\n                        <a href={href}>{name}</a>{\"\\n\"}\n                    </li>\n                );\n            }) : null}\n            {text ? <li>{\"\\n\"}<span className=\"text\">{text}</span>{\"\\n\"}</li> : null}\n            {arrows ? <Arrow type=\"forward\" /> : null}\n            {farArrows ? <Arrow type=\"end\" /> : null}\n        </ul>\n    );\n};\n\nPagination.propTypes = {\n    type: PropTypes.oneOf([\"bullets\", \"simple\"]),\n    items: PropTypes.array,\n    text: PropTypes.string,\n    arrows: PropTypes.bool,\n    farArrows: PropTypes.bool\n};\n\nexport default Pagination;\n"],"sourceRoot":""}