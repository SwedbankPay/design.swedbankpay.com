{"version":3,"sources":["webpack:///./src/App/Documentation/examples/customers/CustomersDetailed/components/CustomersDetailedSettings/index.js","webpack:///./src/App/Documentation/examples/customers/index.js"],"names":["CustomersDetailedSettings","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","className","_components_FormComponents__WEBPACK_IMPORTED_MODULE_1__","id","checked","label","_toConsumableArray","Array","keys","map","item","key","concat","_components_InputGroup__WEBPACK_IMPORTED_MODULE_2__","type","selectOptions","prefixValue","actionList","window","dg","createNumArray","length","baseNum","addNum","Math","floor","random","Customers","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","customerIndex","Component","init","setState","customersDetailedElement","document","getElementById","scrollTo","top","offsetTop","left","behavior","_this2","customersDetailedTabs","name","component","test","_CustomersDetailed_components_CustomersDetailedOrders__WEBPACK_IMPORTED_MODULE_5__","customersDetailedOrdersSteps","customersDetailedOrders","_CustomersDetailed_components_CustomersDetailedInquiries__WEBPACK_IMPORTED_MODULE_6__","customersDetailedLatestInquiry","customersDetailedPreviousInquiries","_CustomersDetailed_components_CustomersDetailedCharts__WEBPACK_IMPORTED_MODULE_7__","customerIdName","customersList","firstName","lastName","customerOrders","customerInquiries","_CustomersDetailed_components_CustomersDetailedSettings__WEBPACK_IMPORTED_MODULE_8__","_utils__WEBPACK_IMPORTED_MODULE_2__","language","showCasePanel","codeFigure","_CustomersOverview__WEBPACK_IMPORTED_MODULE_3__","setCustomerIndex","statusText","_CustomersDetailed__WEBPACK_IMPORTED_MODULE_4__","customer","customersDetailedActionList","propTypes","PropTypes","bool"],"mappings":"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","file":"scripts/doc-route.chunk_49.js?3322cc16c98295255c36","sourcesContent":["import React from \"react\";\n\nimport { Togglebox, Checkbox } from \"@components/FormComponents\";\nimport InputGroup from \"@components/InputGroup\";\n\nconst CustomersDetailedSettings = () => (\n    <>\n        <h3>Notifications</h3>\n        <div className=\"row justify-content-around mt-3\">\n            <div className=\"col-lg-auto m-2\">\n                <div className=\"d-flex flex-column\">\n                    <Togglebox id=\"customers-detailed-settings-toggle-1\" checked label=\"Delivery status changes\" />\n                    <Togglebox id=\"customers-detailed-settings-toggle-3\" label=\"Critical delivery messages\" />\n                </div>\n            </div>\n            <div className=\"col-lg-auto m-2\">\n                <Togglebox id=\"customers-detailed-settings-toggle-2\" label=\"New inquiry messages\" />\n                <Togglebox id=\"customers-detailed-settings-toggle-4\" checked label=\"Inquiry status changes\" />\n            </div>\n        </div>\n        <h3>Newsletter and information</h3>\n        <div className=\"row mt-4\">\n            {[...Array(7).keys()].map(item => (\n                <div key={item} className=\"col-lg-3 col-md-4 col-sm-6\">\n                    <Checkbox id={`customers-detailed-settings-checkbox-${item}`} checked label={`Subscription #${item + 1}`} />\n                </div>\n            ))}\n        </div>\n\n        <h3>Customer type</h3>\n        <InputGroup\n            type=\"select\"\n            selectOptions={[\"Long-term contract\", \"Short-term contract\", \"One time purchase\"]}\n            prefixValue=\"Type\"\n        />\n\n        <button className=\"btn btn-executive\">Save</button>\n    </>\n);\n\nexport default CustomersDetailedSettings;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DocContainer, ComponentPreview } from \"@docutils\";\n\nimport CustomersOverview from \"./CustomersOverview\";\nimport CustomersDetailed from \"./CustomersDetailed\";\nimport CustomersDetailedOrders from \"./CustomersDetailed/components/CustomersDetailedOrders\";\nimport CustomersDetailedInquiries from \"./CustomersDetailed/components/CustomersDetailedInquiries\";\nimport CustomersDetailedCharts from \"./CustomersDetailed/components/CustomersDetailedCharts\";\nimport CustomersDetailedSettings from \"./CustomersDetailed/components/CustomersDetailedSettings\";\n\nimport {\n    customersList,\n    statusText,\n    customersDetailedActionList,\n    customersDetailedOrders,\n    customersDetailedOrdersSteps,\n    customersDetailedLatestInquiry,\n    customersDetailedPreviousInquiries\n} from \"./constants\";\n\nconst { actionList } = window.dg;\n\nconst createNumArray = (length, baseNum, addNum) => (\n    [...Array(length)].map(() => (\n        Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) +\n        Math.floor(Math.random() * addNum) + Math.floor(Math.random() * addNum) + baseNum)\n    ) // The multiple Math.floor(Math.random) is there to achieve a lower variance\n);\n\nclass Customers extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            customerIndex: 0\n        };\n    }\n\n    componentDidUpdate () {\n        actionList.init();\n    }\n\n    componentDidMount () {\n        actionList.init();\n    }\n\n    setCustomerIndex (customerIndex) {\n        this.setState({\n            customerIndex\n        });\n\n        const customersDetailedElement = document.getElementById(\"customers-detailed\");\n\n        window.scrollTo({\n            top: customersDetailedElement.offsetTop + 100,\n            left: 0,\n            behavior: \"instant\"\n        });\n    }\n\n    render () {\n\n        // customersDetailedTabs is kept here because of the component value\n        const customersDetailedTabs = [\n            {\n                name: \"Order history\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedOrders\n                        customersDetailedOrdersSteps={customersDetailedOrdersSteps}\n                        customersDetailedOrders={customersDetailedOrders}\n                    />\n            },\n            {\n                name: \"Customer inquiries\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedInquiries\n                        customersDetailedLatestInquiry={customersDetailedLatestInquiry}\n                        customersDetailedPreviousInquiries={customersDetailedPreviousInquiries}\n                    />\n            },\n            {\n                name: \"Summary charts\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedCharts\n                        customerIdName={`${customersList[this.state.customerIndex].id} ${customersList[this.state.customerIndex].firstName} ${customersList[this.state.customerIndex].lastName}`}\n                        customerOrders={[...customersDetailedOrders, 1994]}\n                        customerInquiries={[...customersDetailedPreviousInquiries, customersDetailedLatestInquiry]}\n                        createNumArray={createNumArray}\n                    />\n            },\n            {\n                name: \"Settings\",\n                component: this.props.test ?\n                    <React.Fragment />\n                    :\n                    <CustomersDetailedSettings />\n            }\n        ];\n\n        return (\n            <DocContainer>\n                <h2 id=\"customers-overview\">Customers overview</h2>\n                <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                    <CustomersOverview\n                        setCustomerIndex={customerIndex => this.setCustomerIndex(customerIndex)}\n                        customersList={customersList}\n                        statusText={statusText}\n                    />\n                </ComponentPreview>\n                <CustomersDetailed\n                    customer={customersList[this.state.customerIndex]}\n                    customersDetailedTabs={customersDetailedTabs}\n                    customersDetailedActionList={customersDetailedActionList}\n                    statusText={statusText}\n                />\n            </DocContainer>\n        );\n    }\n}\n\nCustomers.propTypes = {\n    test: PropTypes.bool\n};\n\nexport default Customers;\n"],"sourceRoot":""}