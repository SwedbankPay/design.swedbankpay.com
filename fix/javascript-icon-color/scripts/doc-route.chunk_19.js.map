{"version":3,"sources":["webpack:///./src/App/components/Button/index.js","webpack:///./src/App/components/ActionLink/index.js","webpack:///./src/App/components/Link/index.js","webpack:///./src/App/ComponentsDocumentation/components/Links/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/classnames/index.js"],"names":["Button","_ref","label","id","name","value","href","icon","loading","type","disabled","btnType","fullWidth","pullRight","input","active","size","bankId","btnClasses","classnames","concat","attrs","defaultValue","role","aria-pressed","aria-disabled","tabIndex","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_extends","className","aria-hidden","Fragment","propTypes","PropTypes","oneOf","isRequired","string","bool","loader","ActionLink","props","link","otherProps","_objectWithoutProperties","newTab","rel","target","ActionLinkContent","linkText","badge","smallText","multiline","text","shape","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","Link","leftIcon","rightIcon","onClick","e","preventDefault","d","TextLinks","ButtonLinks","IconLinks","ActionLinkBadge","ActionLinkSmallText","ActionLinkBadgeSmallText","ActionLinkNewTab","_docutils__WEBPACK_IMPORTED_MODULE_1__","_components_ActionLink__WEBPACK_IMPORTED_MODULE_2__","_components_Link__WEBPACK_IMPORTED_MODULE_3__","_components_Button__WEBPACK_IMPORTED_MODULE_4__","_components_CodeTags__WEBPACK_IMPORTED_MODULE_5__","language","showCasePanel","codeFigure","code","Links","docToc","__webpack_amd_options__","module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","_typeof","push","Array","isArray","inner","apply","key","call","join","default","define","undefined","__WEBPACK_AMD_DEFINE_RESULT__","window"],"mappings":"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","file":"scripts/doc-route.chunk_19.js?214348766129a38dd87c","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Button = ({ label, id, name, value, href, icon, loading, type, disabled, btnType, fullWidth, pullRight, input, active, size, bankId }) => {\n    const btnClasses = classnames(\n        \"btn\",\n        type ? `btn-${type}` : null,\n        size ? `btn-${size}` : null,\n        loading ? \"loading\" : null,\n        fullWidth ? \"btn-block\" : null,\n        pullRight ? \"pull-right\" : null,\n        active && href ? \"active\" : null,\n        disabled && href ? \"disabled\" : null,\n        bankId ? \"btn-bank-id\" : null\n    );\n\n    const attrs = {\n        href,\n        id,\n        name,\n        defaultValue: value,\n        disabled: href ? null : disabled,\n        active: active && !href ? \"\" : null,\n        role: href ? \"button\" : null,\n        type: !href ? btnType || \"button\" : null,\n        \"aria-pressed\": active ? true : null,\n        \"aria-disabled\": href && disabled ? true : null,\n        tabIndex: href && disabled ? \"-1\" : null\n    };\n\n    if (href) {\n        return (\n            <a className={btnClasses} {...attrs}>{icon ? \"\\n\\t\" : null}\n                {icon ? <i className=\"material-icons\" aria-hidden=\"true\">{icon}</i> : null}\n                {(icon && label) ? <span>{label}</span> : label}\n            </a>\n        );\n    }\n\n    if (input) {\n        return <input className={btnClasses} {...attrs}/>;\n    }\n\n    return (\n        <button className={btnClasses} {...attrs}>{icon ? \"\\n\\t\\t\" : null}\n            {icon ? <><i className=\"material-icons\" aria-hidden=\"true\">{icon}</i>{\"\\n\\t\\t\"}</> : null}\n            {((icon && label) || type === \"link\" || type === \"link-destructive\" || bankId) ? <span>{label}</span> : label}{icon ? \"\\n\\t\" : null}\n            {bankId ? <><i className={`bank-id bank-id-${bankId}`} />{\"\\n\\t\\t\"}</> : null}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"primary\", \"secondary\", \"link\", \"guiding-destructive\", \"executive-destructive\", \"link-destructive\"]).isRequired,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    btnType: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    loader: PropTypes.bool,\n    pullRight: PropTypes.bool,\n    input: PropTypes.bool,\n    active: PropTypes.bool,\n    size: PropTypes.oneOf([\"lg\", \"sm\", \"xs\"]),\n    bankId: PropTypes.string\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ActionLink = props => {\n    const { link, ...otherProps } = props;\n\n    return (\n        <>\n            {otherProps.newTab ?\n                <a className=\"action-link action-link-new-tab\" href={link ? link : \"#\"} rel=\"noopener noreferrer\" target=\"_blank\">{\"\\n\"}\n                    <ActionLinkContent {...otherProps} />\n                </a>\n                :\n                <a className=\"action-link\" href=\"#\" >{\"\\n\"}\n                    <ActionLinkContent {...otherProps} />\n                </a>\n            }\n        </>\n    );\n};\n\nconst ActionLinkContent = ({ linkText, badge, smallText, multiline, newTab }) => (\n    <>\n        {newTab ? <><i className=\"material-icons\" aria-hidden=\"true\">open_in_new</i>{\"\\n\"}</> : null}\n        {badge ? <><span className={`badge ${badge.type}`}>{badge.text}</span>{\"\\n\"}</> : null}\n        {multiline ?\n            <span className=\"action-link-multiline\">{\"\\n\"}\n                {linkText}{\"\\n\"}\n                {smallText ? <span className=\"small-text\">{smallText}</span> : null }{\"\\n\"}\n            </span>\n            :\n            <>\n                {linkText}{\"\\n\"}\n                {smallText ? <span className=\"small-text\">{smallText}</span> : null }{\"\\n\"}\n            </>\n        }{\"\\n\"}\n    </>\n);\n\nActionLink.propTypes = {\n    props: PropTypes.shape({\n        linkText: PropTypes.string.isRequired,\n        badge: PropTypes.shape({\n            type: PropTypes.string.isRequired,\n            text: PropTypes.string.isRequired\n        }),\n        smallText: PropTypes.string,\n        multiline: PropTypes.bool,\n        newTab: PropTypes.bool,\n        link: PropTypes.string\n    })\n};\n\nActionLinkContent.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    badge: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }),\n    smallText: PropTypes.string,\n    multiline: PropTypes.bool,\n    newTab: PropTypes.bool\n};\n\nexport default ActionLink;\n\nexport { ActionLinkContent };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Link = ({ linkText, leftIcon, rightIcon }) => (\n    <a href=\"\" className={(leftIcon || rightIcon) ? \"icon-link\" : null} onClick={e => e.preventDefault()}>\n        {leftIcon && <i className=\"material-icons\" aria-hidden=\"true\">{leftIcon}</i>}\n        {leftIcon || rightIcon ? <span className={(leftIcon ? \"ml-2\" : null) || (rightIcon ? \"mr-2\" : null)}>{linkText}</span> : linkText}\n        {rightIcon && <i className=\"material-icons\" aria-hidden=\"true\">{rightIcon}</i>}\n    </a>\n);\n\nLink.propTypes = {\n    linkText: PropTypes.string.isRequired,\n    leftIcon: PropTypes.string,\n    rightIcon: PropTypes.string\n};\n\nexport default Link;\n","import React from \"react\";\n\nimport { ComponentPreview, DocContainer } from \"@docutils\";\nimport ActionLinkComponent from \"@components/ActionLink\";\nimport LinkComponent from \"@components/Link\";\nimport ButtonComponent from \"@components/Button\";\nimport CodeTags from \"@components/CodeTags\";\n\nconst TextLinks = () => (\n    <>\n        <h2 id=\"text-links\">Text links</h2>\n        <p>Text links are links used in paragraphs of text.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>{\"\\n\"}\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.{\"\\n\"}\n                Ut enim ad minim veniam, quis nostrud <LinkComponent linkText=\"exercitation\" /> ullamco laboris nisi ut aliquip ex ea commodo consequat.{\"\\n\"}\n            </p>\n        </ComponentPreview>\n\n        <h3>Small link</h3>\n        <p>Use links in small with legal texts, such as links to terms and contitions</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <small>{\"\\n\"}\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.{\"\\n\"}\n                Ut enim ad minim veniam, quis nostrud <LinkComponent linkText=\"exercitation\" /> ullamco laboris nisi ut aliquip ex ea commodo consequat.{\"\\n\"}\n            </small>\n        </ComponentPreview>\n    </>\n);\n\nconst ButtonLinks = () => (\n    <>\n        <h2 id=\"button-links\">Links with buttons</h2>\n        <p>\n            To use links with buttons, for instance as a cancel button,\n            use <CodeTags type=\"secondary\" code=\".btn.btn-link\" /> in a <CodeTags type=\"primary\" code=\"<button>\" />.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ButtonComponent type=\"primary\" label=\"Approve\" />{\"\\n\"}\n            <ButtonComponent type=\"link\" label=\"Cancel\"/>\n        </ComponentPreview>\n    </>\n);\n\nconst IconLinks = () => (\n    <>\n        <h2 id=\"icon-links\">Links with icons</h2>\n        <p>\n            Use class <CodeTags type=\"secondary\" code=\".icon-link\" /> on links with icons. Using icon with links can help further\n            convey the result of clicking on the link, as can be seen in the examples below.\n        </p>\n        <h4>Navigates to a previous page</h4>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <LinkComponent linkText=\"My invoices\" leftIcon=\"arrow_back_ios\"/>\n        </ComponentPreview>\n        <h4>Enables editing</h4>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <LinkComponent linkText=\"My invoices\" leftIcon=\"edit\"/>\n        </ComponentPreview>\n        <h4>Opens in a new tab</h4>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <LinkComponent linkText=\"My invoices\" rightIcon=\"open_in_new\"/>\n        </ComponentPreview>\n    </>\n);\n\nconst ActionLink = () => (\n    <>\n        <h2 id=\"action-link\">Action link</h2>\n        <p>Action links.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\"/>\n        </ComponentPreview>\n    </>\n);\n\nconst badge = {\n    type: \"badge-default badge-number\",\n    text: \"40\"\n};\n\nconst ActionLinkBadge = () => (\n    <>\n        <h2 id=\"action-link-badge\">Action link with Badge</h2>\n        <p>Action links.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" badge={badge}/>\n        </ComponentPreview>\n    </>\n);\n\nconst ActionLinkSmallText = () => (\n    <>\n        <h2 id=\"action-link-small-text\">Action link with small text</h2>\n        <p>A small text can be displayed as a part of the Action Link. There are two types of Action Links with small text, one with the inline small text and one with the texts on different lines.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" smallText=\"This link directs to my page\"/>\n        </ComponentPreview>\n        <p>Use <CodeTags type=\"secondary\" code=\".action-link-multiline\"/> for the Action Link with the texts on different lines.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" smallText=\"This link directs to my page\" multiline={true} />\n        </ComponentPreview>\n    </>\n);\n\nconst ActionLinkBadgeSmallText = () => (\n    <>\n        <h2 id=\"action-link-badge-small-text\">Action link with Badge and small text</h2>\n        <p>Action Links can contain both Badge and small text</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" smallText=\"This link directs to my page\" badge={badge}/>\n        </ComponentPreview>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" smallText=\"This link directs to my page\" multiline={true} badge={badge}/>\n        </ComponentPreview>\n    </>\n);\n\nconst ActionLinkNewTab = () => (\n    <>\n        <h2 id=\"action-link-new-tab\">Action link that opens a new tab</h2>\n        <p>An Action Link used in cases where a new tab is supposed to open is provided. Use <CodeTags type=\"secondary\" code=\".action-link-new-tab\" /> when it is known that the target will open in a new tab. </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <ActionLinkComponent linkText=\"My link\" newTab={true} />\n        </ComponentPreview>\n    </>\n);\n\nconst Links = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">\n            Links\n        </p>\n        <TextLinks />\n        <ButtonLinks />\n        <IconLinks />\n        <ActionLink />\n        <ActionLinkBadge />\n        <ActionLinkSmallText />\n        <ActionLinkBadgeSmallText />\n        <ActionLinkNewTab />\n    </DocContainer>\n);\n\nexport default Links;\n\n/* For testing */\nexport { TextLinks, ButtonLinks, IconLinks, ActionLink, ActionLinkBadge, ActionLinkSmallText, ActionLinkBadgeSmallText, ActionLinkNewTab };\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}